// Compiled by ClojureScript 0.0-2913 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2913";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__23213__delegate = function (args){
return console.log.apply(console,(function (){var G__23212 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__23212) : cljs.core.into_array.call(null,G__23212));
})());
};
var G__23213 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__23214__i = 0, G__23214__a = new Array(arguments.length -  0);
while (G__23214__i < G__23214__a.length) {G__23214__a[G__23214__i] = arguments[G__23214__i + 0]; ++G__23214__i;}
  args = new cljs.core.IndexedSeq(G__23214__a,0);
} 
return G__23213__delegate.call(this,args);};
G__23213.cljs$lang$maxFixedArity = 0;
G__23213.cljs$lang$applyTo = (function (arglist__23215){
var args = cljs.core.seq(arglist__23215);
return G__23213__delegate(args);
});
G__23213.cljs$core$IFn$_invoke$arity$variadic = G__23213__delegate;
return G__23213;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__23217 = x;
return goog.isString(G__23217);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__23219 = x__$1;
return goog.typeOf(G__23219);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__15646__auto__ = ty;
if(cljs.core.truth_(and__15646__auto__)){
return ty.cljs$lang$type;
} else {
return and__15646__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__23221 = obj;
return goog.typeOf(G__23221);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__23223 = Symbol;
return goog.typeOf(G__23223);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__16545__auto___23225 = len;
var i_23226 = (0);
while(true){
if((i_23226 < n__16545__auto___23225)){
(new_arr[i_23226] = (arr[i_23226]));

var G__23227 = (i_23226 + (1));
i_23226 = G__23227;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__23228 = (i + (1));
i = G__23228;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__23237__delegate = function (array,i,idxs){
var G__23234 = aget;
var G__23235 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__23236 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__23234,G__23235,G__23236) : cljs.core.apply.call(null,G__23234,G__23235,G__23236));
};
var G__23237 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__23238__i = 0, G__23238__a = new Array(arguments.length -  2);
while (G__23238__i < G__23238__a.length) {G__23238__a[G__23238__i] = arguments[G__23238__i + 2]; ++G__23238__i;}
  idxs = new cljs.core.IndexedSeq(G__23238__a,0);
} 
return G__23237__delegate.call(this,array,i,idxs);};
G__23237.cljs$lang$maxFixedArity = 2;
G__23237.cljs$lang$applyTo = (function (arglist__23239){
var array = cljs.core.first(arglist__23239);
arglist__23239 = cljs.core.next(arglist__23239);
var i = cljs.core.first(arglist__23239);
var idxs = cljs.core.rest(arglist__23239);
return G__23237__delegate(array,i,idxs);
});
G__23237.cljs$core$IFn$_invoke$arity$variadic = G__23237__delegate;
return G__23237;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__23240 = null;
if (arguments.length > 2) {
var G__23241__i = 0, G__23241__a = new Array(arguments.length -  2);
while (G__23241__i < G__23241__a.length) {G__23241__a[G__23241__i] = arguments[G__23241__i + 2]; ++G__23241__i;}
G__23240 = new cljs.core.IndexedSeq(G__23241__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__23240);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__23250__delegate = function (array,idx,idx2,idxv){
var G__23246 = aset;
var G__23247 = (array[idx]);
var G__23248 = idx2;
var G__23249 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__23246,G__23247,G__23248,G__23249) : cljs.core.apply.call(null,G__23246,G__23247,G__23248,G__23249));
};
var G__23250 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__23251__i = 0, G__23251__a = new Array(arguments.length -  3);
while (G__23251__i < G__23251__a.length) {G__23251__a[G__23251__i] = arguments[G__23251__i + 3]; ++G__23251__i;}
  idxv = new cljs.core.IndexedSeq(G__23251__a,0);
} 
return G__23250__delegate.call(this,array,idx,idx2,idxv);};
G__23250.cljs$lang$maxFixedArity = 3;
G__23250.cljs$lang$applyTo = (function (arglist__23252){
var array = cljs.core.first(arglist__23252);
arglist__23252 = cljs.core.next(arglist__23252);
var idx = cljs.core.first(arglist__23252);
arglist__23252 = cljs.core.next(arglist__23252);
var idx2 = cljs.core.first(arglist__23252);
var idxv = cljs.core.rest(arglist__23252);
return G__23250__delegate(array,idx,idx2,idxv);
});
G__23250.cljs$core$IFn$_invoke$arity$variadic = G__23250__delegate;
return G__23250;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__23253 = null;
if (arguments.length > 3) {
var G__23254__i = 0, G__23254__a = new Array(arguments.length -  3);
while (G__23254__i < G__23254__a.length) {G__23254__a[G__23254__i] = arguments[G__23254__i + 3]; ++G__23254__i;}
G__23253 = new cljs.core.IndexedSeq(G__23254__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__23253);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__23260 = (function (a,x){
a.push(x);

return a;
});
var G__23261 = [];
var G__23262 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__23260,G__23261,G__23262) : cljs.core.reduce.call(null,G__23260,G__23261,G__23262));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__23263__i = 0, G__23263__a = new Array(arguments.length -  2);
while (G__23263__i < G__23263__a.length) {G__23263__a[G__23263__i] = arguments[G__23263__i + 2]; ++G__23263__i;}
  args = new cljs.core.IndexedSeq(G__23263__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__23264){
var obj = cljs.core.first(arglist__23264);
arglist__23264 = cljs.core.next(arglist__23264);
var s = cljs.core.first(arglist__23264);
var args = cljs.core.rest(arglist__23264);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj23266 = {};
return obj23266;
})();


cljs.core.IFn = (function (){var obj23268 = {};
return obj23268;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23314 = x__16302__auto__;
return goog.typeOf(G__23314);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23316 = x__16302__auto__;
return goog.typeOf(G__23316);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23318 = x__16302__auto__;
return goog.typeOf(G__23318);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23320 = x__16302__auto__;
return goog.typeOf(G__23320);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23322 = x__16302__auto__;
return goog.typeOf(G__23322);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23324 = x__16302__auto__;
return goog.typeOf(G__23324);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23326 = x__16302__auto__;
return goog.typeOf(G__23326);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23328 = x__16302__auto__;
return goog.typeOf(G__23328);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23330 = x__16302__auto__;
return goog.typeOf(G__23330);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23332 = x__16302__auto__;
return goog.typeOf(G__23332);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23334 = x__16302__auto__;
return goog.typeOf(G__23334);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23336 = x__16302__auto__;
return goog.typeOf(G__23336);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23338 = x__16302__auto__;
return goog.typeOf(G__23338);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23340 = x__16302__auto__;
return goog.typeOf(G__23340);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23342 = x__16302__auto__;
return goog.typeOf(G__23342);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23344 = x__16302__auto__;
return goog.typeOf(G__23344);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23346 = x__16302__auto__;
return goog.typeOf(G__23346);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23348 = x__16302__auto__;
return goog.typeOf(G__23348);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23350 = x__16302__auto__;
return goog.typeOf(G__23350);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23352 = x__16302__auto__;
return goog.typeOf(G__23352);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23354 = x__16302__auto__;
return goog.typeOf(G__23354);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23356 = x__16302__auto__;
return goog.typeOf(G__23356);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj23358 = {};
return obj23358;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__15646__auto__ = value;
if(and__15646__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__15646__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__16302__auto__ = (((value == null))?null:value);
return (function (){var or__15658__auto__ = (cljs.core._clone[(function (){var G__23362 = x__16302__auto__;
return goog.typeOf(G__23362);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._clone["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj23364 = {};
return obj23364;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._count[(function (){var G__23368 = x__16302__auto__;
return goog.typeOf(G__23368);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._count["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj23370 = {};
return obj23370;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._empty[(function (){var G__23374 = x__16302__auto__;
return goog.typeOf(G__23374);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._empty["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj23376 = {};
return obj23376;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._conj[(function (){var G__23380 = x__16302__auto__;
return goog.typeOf(G__23380);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._conj["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj23382 = {};
return obj23382;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._nth[(function (){var G__23388 = x__16302__auto__;
return goog.typeOf(G__23388);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._nth["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._nth[(function (){var G__23390 = x__16302__auto__;
return goog.typeOf(G__23390);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._nth["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj23392 = {};
return obj23392;
})();


cljs.core.ISeq = (function (){var obj23394 = {};
return obj23394;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._first[(function (){var G__23398 = x__16302__auto__;
return goog.typeOf(G__23398);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._first["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._rest[(function (){var G__23402 = x__16302__auto__;
return goog.typeOf(G__23402);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._rest["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj23404 = {};
return obj23404;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._next[(function (){var G__23408 = x__16302__auto__;
return goog.typeOf(G__23408);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._next["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj23410 = {};
return obj23410;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__15646__auto__ = o;
if(and__15646__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__15646__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__16302__auto__ = (((o == null))?null:o);
return (function (){var or__15658__auto__ = (cljs.core._lookup[(function (){var G__23416 = x__16302__auto__;
return goog.typeOf(G__23416);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._lookup["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__15646__auto__ = o;
if(and__15646__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__15646__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__16302__auto__ = (((o == null))?null:o);
return (function (){var or__15658__auto__ = (cljs.core._lookup[(function (){var G__23418 = x__16302__auto__;
return goog.typeOf(G__23418);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._lookup["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj23420 = {};
return obj23420;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__23424 = x__16302__auto__;
return goog.typeOf(G__23424);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._assoc[(function (){var G__23428 = x__16302__auto__;
return goog.typeOf(G__23428);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._assoc["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj23430 = {};
return obj23430;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._dissoc[(function (){var G__23434 = x__16302__auto__;
return goog.typeOf(G__23434);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._dissoc["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj23436 = {};
return obj23436;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._key[(function (){var G__23440 = x__16302__auto__;
return goog.typeOf(G__23440);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._key["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._val[(function (){var G__23444 = x__16302__auto__;
return goog.typeOf(G__23444);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._val["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj23446 = {};
return obj23446;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._disjoin[(function (){var G__23450 = x__16302__auto__;
return goog.typeOf(G__23450);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._disjoin["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj23452 = {};
return obj23452;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._peek[(function (){var G__23456 = x__16302__auto__;
return goog.typeOf(G__23456);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._peek["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._pop[(function (){var G__23460 = x__16302__auto__;
return goog.typeOf(G__23460);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._pop["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj23462 = {};
return obj23462;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._assoc_n[(function (){var G__23466 = x__16302__auto__;
return goog.typeOf(G__23466);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj23468 = {};
return obj23468;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__15646__auto__ = o;
if(and__15646__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__15646__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__16302__auto__ = (((o == null))?null:o);
return (function (){var or__15658__auto__ = (cljs.core._deref[(function (){var G__23472 = x__16302__auto__;
return goog.typeOf(G__23472);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._deref["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj23474 = {};
return obj23474;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__15646__auto__ = o;
if(and__15646__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__15646__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__16302__auto__ = (((o == null))?null:o);
return (function (){var or__15658__auto__ = (cljs.core._deref_with_timeout[(function (){var G__23478 = x__16302__auto__;
return goog.typeOf(G__23478);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj23480 = {};
return obj23480;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__15646__auto__ = o;
if(and__15646__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__15646__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__16302__auto__ = (((o == null))?null:o);
return (function (){var or__15658__auto__ = (cljs.core._meta[(function (){var G__23484 = x__16302__auto__;
return goog.typeOf(G__23484);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._meta["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj23486 = {};
return obj23486;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__15646__auto__ = o;
if(and__15646__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__15646__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__16302__auto__ = (((o == null))?null:o);
return (function (){var or__15658__auto__ = (cljs.core._with_meta[(function (){var G__23490 = x__16302__auto__;
return goog.typeOf(G__23490);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._with_meta["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj23492 = {};
return obj23492;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._reduce[(function (){var G__23498 = x__16302__auto__;
return goog.typeOf(G__23498);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._reduce["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._reduce[(function (){var G__23500 = x__16302__auto__;
return goog.typeOf(G__23500);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._reduce["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj23502 = {};
return obj23502;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._kv_reduce[(function (){var G__23506 = x__16302__auto__;
return goog.typeOf(G__23506);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj23508 = {};
return obj23508;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__15646__auto__ = o;
if(and__15646__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__15646__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__16302__auto__ = (((o == null))?null:o);
return (function (){var or__15658__auto__ = (cljs.core._equiv[(function (){var G__23512 = x__16302__auto__;
return goog.typeOf(G__23512);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._equiv["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj23514 = {};
return obj23514;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__15646__auto__ = o;
if(and__15646__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__15646__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__16302__auto__ = (((o == null))?null:o);
return (function (){var or__15658__auto__ = (cljs.core._hash[(function (){var G__23518 = x__16302__auto__;
return goog.typeOf(G__23518);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._hash["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj23520 = {};
return obj23520;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__15646__auto__ = o;
if(and__15646__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__15646__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__16302__auto__ = (((o == null))?null:o);
return (function (){var or__15658__auto__ = (cljs.core._seq[(function (){var G__23524 = x__16302__auto__;
return goog.typeOf(G__23524);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._seq["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj23526 = {};
return obj23526;
})();


cljs.core.IList = (function (){var obj23528 = {};
return obj23528;
})();


cljs.core.IRecord = (function (){var obj23530 = {};
return obj23530;
})();


cljs.core.IReversible = (function (){var obj23532 = {};
return obj23532;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._rseq[(function (){var G__23536 = x__16302__auto__;
return goog.typeOf(G__23536);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._rseq["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj23538 = {};
return obj23538;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._sorted_seq[(function (){var G__23542 = x__16302__auto__;
return goog.typeOf(G__23542);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._sorted_seq_from[(function (){var G__23546 = x__16302__auto__;
return goog.typeOf(G__23546);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._entry_key[(function (){var G__23550 = x__16302__auto__;
return goog.typeOf(G__23550);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._entry_key["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._comparator[(function (){var G__23554 = x__16302__auto__;
return goog.typeOf(G__23554);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._comparator["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj23556 = {};
return obj23556;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__15646__auto__ = writer;
if(and__15646__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__15646__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__16302__auto__ = (((writer == null))?null:writer);
return (function (){var or__15658__auto__ = (cljs.core._write[(function (){var G__23560 = x__16302__auto__;
return goog.typeOf(G__23560);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._write["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__15646__auto__ = writer;
if(and__15646__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__15646__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__16302__auto__ = (((writer == null))?null:writer);
return (function (){var or__15658__auto__ = (cljs.core._flush[(function (){var G__23564 = x__16302__auto__;
return goog.typeOf(G__23564);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._flush["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj23566 = {};
return obj23566;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__15646__auto__ = o;
if(and__15646__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__15646__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__16302__auto__ = (((o == null))?null:o);
return (function (){var or__15658__auto__ = (cljs.core._pr_writer[(function (){var G__23570 = x__16302__auto__;
return goog.typeOf(G__23570);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj23572 = {};
return obj23572;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__15646__auto__ = d;
if(and__15646__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__15646__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__16302__auto__ = (((d == null))?null:d);
return (function (){var or__15658__auto__ = (cljs.core._realized_QMARK_[(function (){var G__23576 = x__16302__auto__;
return goog.typeOf(G__23576);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj23578 = {};
return obj23578;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._notify_watches[(function (){var G__23582 = x__16302__auto__;
return goog.typeOf(G__23582);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._add_watch[(function (){var G__23586 = x__16302__auto__;
return goog.typeOf(G__23586);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._add_watch["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._remove_watch[(function (){var G__23590 = x__16302__auto__;
return goog.typeOf(G__23590);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj23592 = {};
return obj23592;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._as_transient[(function (){var G__23596 = x__16302__auto__;
return goog.typeOf(G__23596);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._as_transient["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj23598 = {};
return obj23598;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__15646__auto__ = tcoll;
if(and__15646__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__15646__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__16302__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__15658__auto__ = (cljs.core._conj_BANG_[(function (){var G__23602 = x__16302__auto__;
return goog.typeOf(G__23602);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__15646__auto__ = tcoll;
if(and__15646__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__15646__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__16302__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__15658__auto__ = (cljs.core._persistent_BANG_[(function (){var G__23606 = x__16302__auto__;
return goog.typeOf(G__23606);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj23608 = {};
return obj23608;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__15646__auto__ = tcoll;
if(and__15646__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__15646__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__16302__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__15658__auto__ = (cljs.core._assoc_BANG_[(function (){var G__23612 = x__16302__auto__;
return goog.typeOf(G__23612);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj23614 = {};
return obj23614;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__15646__auto__ = tcoll;
if(and__15646__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__15646__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__16302__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__15658__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__23618 = x__16302__auto__;
return goog.typeOf(G__23618);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj23620 = {};
return obj23620;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__15646__auto__ = tcoll;
if(and__15646__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__15646__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__16302__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__15658__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__23624 = x__16302__auto__;
return goog.typeOf(G__23624);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__15646__auto__ = tcoll;
if(and__15646__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__15646__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__16302__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__15658__auto__ = (cljs.core._pop_BANG_[(function (){var G__23628 = x__16302__auto__;
return goog.typeOf(G__23628);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj23630 = {};
return obj23630;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__15646__auto__ = tcoll;
if(and__15646__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__15646__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__16302__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__15658__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__23634 = x__16302__auto__;
return goog.typeOf(G__23634);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj23636 = {};
return obj23636;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__15646__auto__ = x;
if(and__15646__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__15646__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__16302__auto__ = (((x == null))?null:x);
return (function (){var or__15658__auto__ = (cljs.core._compare[(function (){var G__23640 = x__16302__auto__;
return goog.typeOf(G__23640);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._compare["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj23642 = {};
return obj23642;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._drop_first[(function (){var G__23646 = x__16302__auto__;
return goog.typeOf(G__23646);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._drop_first["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj23648 = {};
return obj23648;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._chunked_first[(function (){var G__23652 = x__16302__auto__;
return goog.typeOf(G__23652);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._chunked_rest[(function (){var G__23656 = x__16302__auto__;
return goog.typeOf(G__23656);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj23658 = {};
return obj23658;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._chunked_next[(function (){var G__23662 = x__16302__auto__;
return goog.typeOf(G__23662);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj23664 = {};
return obj23664;
})();

cljs.core._name = (function _name(x){
if((function (){var and__15646__auto__ = x;
if(and__15646__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__15646__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__16302__auto__ = (((x == null))?null:x);
return (function (){var or__15658__auto__ = (cljs.core._name[(function (){var G__23668 = x__16302__auto__;
return goog.typeOf(G__23668);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._name["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__15646__auto__ = x;
if(and__15646__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__15646__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__16302__auto__ = (((x == null))?null:x);
return (function (){var or__15658__auto__ = (cljs.core._namespace[(function (){var G__23672 = x__16302__auto__;
return goog.typeOf(G__23672);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._namespace["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj23674 = {};
return obj23674;
})();


cljs.core.IReset = (function (){var obj23676 = {};
return obj23676;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__15646__auto__ = o;
if(and__15646__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__15646__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__16302__auto__ = (((o == null))?null:o);
return (function (){var or__15658__auto__ = (cljs.core._reset_BANG_[(function (){var G__23680 = x__16302__auto__;
return goog.typeOf(G__23680);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj23682 = {};
return obj23682;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__15646__auto__ = o;
if(and__15646__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__15646__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__16302__auto__ = (((o == null))?null:o);
return (function (){var or__15658__auto__ = (cljs.core._swap_BANG_[(function (){var G__23692 = x__16302__auto__;
return goog.typeOf(G__23692);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__15646__auto__ = o;
if(and__15646__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__15646__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__16302__auto__ = (((o == null))?null:o);
return (function (){var or__15658__auto__ = (cljs.core._swap_BANG_[(function (){var G__23694 = x__16302__auto__;
return goog.typeOf(G__23694);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__15646__auto__ = o;
if(and__15646__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__15646__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__16302__auto__ = (((o == null))?null:o);
return (function (){var or__15658__auto__ = (cljs.core._swap_BANG_[(function (){var G__23696 = x__16302__auto__;
return goog.typeOf(G__23696);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__15646__auto__ = o;
if(and__15646__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__15646__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__16302__auto__ = (((o == null))?null:o);
return (function (){var or__15658__auto__ = (cljs.core._swap_BANG_[(function (){var G__23698 = x__16302__auto__;
return goog.typeOf(G__23698);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj23700 = {};
return obj23700;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__15646__auto__ = o;
if(and__15646__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__15646__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__16302__auto__ = (((o == null))?null:o);
return (function (){var or__15658__auto__ = (cljs.core._vreset_BANG_[(function (){var G__23704 = x__16302__auto__;
return goog.typeOf(G__23704);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj23706 = {};
return obj23706;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._iterator[(function (){var G__23710 = x__16302__auto__;
return goog.typeOf(G__23710);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._iterator["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__23713 = (4294967295);
var G__23714 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__23713,G__23714) : Math.imul.call(null,G__23713,G__23714));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__23717 = a;
var G__23718 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__23717,G__23718) : Math.imul.call(null,G__23717,G__23718));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__23719 = (i + (2));
var G__23720 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__23719;
h1 = G__23720;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj23722 = {};
return obj23722;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__23723 = (i + (1));
var G__23724 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__23723;
hash = G__23724;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj23728 = {};
return obj23728;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__23731 = o;
if(G__23731){
var bit__16332__auto__ = (G__23731.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__16332__auto__) || (G__23731.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__23732 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__23732) : Math.floor.call(null,G__23732));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__15646__auto__ = cljs.core.not(a.ns);
if(and__15646__auto__){
return b.ns;
} else {
return and__15646__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__23739 = a.ns;
var G__23740 = b.ns;
return goog.array.defaultCompare(G__23739,G__23740);
})();
if(((0) === nsc)){
var G__23741 = a.name;
var G__23742 = b.name;
return goog.array.defaultCompare(G__23741,G__23742);
} else {
return nsc;
}
}
} else {
var G__23743 = a.name;
var G__23744 = b.name;
return goog.array.defaultCompare(G__23743,G__23744);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__16079__auto__ = self__._hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__23746 = null;
var G__23746__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__23746__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__23746 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__23746__2.call(this,self__,coll);
case 3:
return G__23746__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23746.cljs$core$IFn$_invoke$arity$2 = G__23746__2;
G__23746.cljs$core$IFn$_invoke$arity$3 = G__23746__3;
return G__23746;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args23745){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23745)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__23794 = null;
var G__23794__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__23794__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__23794__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__23794__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__23794__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__23794__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__23794__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__23794__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__23794__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__23794__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__23794__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__23794__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__23794__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__23794__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__23794__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__23794__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__23794__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__23794__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__23794__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__23794__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__23794__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__23794__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23750 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__23751 = a;
var G__23752 = b;
var G__23753 = c;
var G__23754 = d;
var G__23755 = e;
var G__23756 = f;
var G__23757 = g;
var G__23758 = h;
var G__23759 = i;
var G__23760 = j;
var G__23761 = k;
var G__23762 = l;
var G__23763 = m;
var G__23764 = n;
var G__23765 = o;
var G__23766 = p;
var G__23767 = q;
var G__23768 = r;
var G__23769 = s;
var G__23770 = t;
var G__23771 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__23750,G__23751,G__23752,G__23753,G__23754,G__23755,G__23756,G__23757,G__23758,G__23759,G__23760,G__23761,G__23762,G__23763,G__23764,G__23765,G__23766,G__23767,G__23768,G__23769,G__23770,G__23771) : cljs.core.apply.call(null,G__23750,G__23751,G__23752,G__23753,G__23754,G__23755,G__23756,G__23757,G__23758,G__23759,G__23760,G__23761,G__23762,G__23763,G__23764,G__23765,G__23766,G__23767,G__23768,G__23769,G__23770,G__23771));
});
G__23794 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__23794__1.call(this,self__);
case 2:
return G__23794__2.call(this,self__,a);
case 3:
return G__23794__3.call(this,self__,a,b);
case 4:
return G__23794__4.call(this,self__,a,b,c);
case 5:
return G__23794__5.call(this,self__,a,b,c,d);
case 6:
return G__23794__6.call(this,self__,a,b,c,d,e);
case 7:
return G__23794__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__23794__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__23794__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__23794__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__23794__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__23794__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__23794__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__23794__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__23794__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__23794__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__23794__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__23794__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__23794__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__23794__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__23794__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__23794__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23794.cljs$core$IFn$_invoke$arity$1 = G__23794__1;
G__23794.cljs$core$IFn$_invoke$arity$2 = G__23794__2;
G__23794.cljs$core$IFn$_invoke$arity$3 = G__23794__3;
G__23794.cljs$core$IFn$_invoke$arity$4 = G__23794__4;
G__23794.cljs$core$IFn$_invoke$arity$5 = G__23794__5;
G__23794.cljs$core$IFn$_invoke$arity$6 = G__23794__6;
G__23794.cljs$core$IFn$_invoke$arity$7 = G__23794__7;
G__23794.cljs$core$IFn$_invoke$arity$8 = G__23794__8;
G__23794.cljs$core$IFn$_invoke$arity$9 = G__23794__9;
G__23794.cljs$core$IFn$_invoke$arity$10 = G__23794__10;
G__23794.cljs$core$IFn$_invoke$arity$11 = G__23794__11;
G__23794.cljs$core$IFn$_invoke$arity$12 = G__23794__12;
G__23794.cljs$core$IFn$_invoke$arity$13 = G__23794__13;
G__23794.cljs$core$IFn$_invoke$arity$14 = G__23794__14;
G__23794.cljs$core$IFn$_invoke$arity$15 = G__23794__15;
G__23794.cljs$core$IFn$_invoke$arity$16 = G__23794__16;
G__23794.cljs$core$IFn$_invoke$arity$17 = G__23794__17;
G__23794.cljs$core$IFn$_invoke$arity$18 = G__23794__18;
G__23794.cljs$core$IFn$_invoke$arity$19 = G__23794__19;
G__23794.cljs$core$IFn$_invoke$arity$20 = G__23794__20;
G__23794.cljs$core$IFn$_invoke$arity$21 = G__23794__21;
G__23794.cljs$core$IFn$_invoke$arity$22 = G__23794__22;
return G__23794;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args23749){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23749)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__23772 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__23773 = a;
var G__23774 = b;
var G__23775 = c;
var G__23776 = d;
var G__23777 = e;
var G__23778 = f;
var G__23779 = g;
var G__23780 = h;
var G__23781 = i;
var G__23782 = j;
var G__23783 = k;
var G__23784 = l;
var G__23785 = m;
var G__23786 = n;
var G__23787 = o;
var G__23788 = p;
var G__23789 = q;
var G__23790 = r;
var G__23791 = s;
var G__23792 = t;
var G__23793 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__23772,G__23773,G__23774,G__23775,G__23776,G__23777,G__23778,G__23779,G__23780,G__23781,G__23782,G__23783,G__23784,G__23785,G__23786,G__23787,G__23788,G__23789,G__23790,G__23791,G__23792,G__23793) : cljs.core.apply.call(null,G__23772,G__23773,G__23774,G__23775,G__23776,G__23777,G__23778,G__23779,G__23780,G__23781,G__23782,G__23783,G__23784,G__23785,G__23786,G__23787,G__23788,G__23789,G__23790,G__23791,G__23792,G__23793));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__23796 = x;
if(G__23796){
var bit__16339__auto__ = null;
if(cljs.core.truth_((function (){var or__15658__auto__ = bit__16339__auto__;
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return G__23796.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__23796.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__23796);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__23796);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__23798 = value;
if(G__23798){
var bit__16339__auto__ = (G__23798.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__16339__auto__) || (G__23798.cljs$core$ICloneable$)){
return true;
} else {
if((!G__23798.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__23798);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__23798);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__23800 = coll;
if(G__23800){
var bit__16332__auto__ = (G__23800.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__16332__auto__) || (G__23800.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__23802 = coll;
if(G__23802){
var bit__16332__auto__ = (G__23802.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16332__auto__) || (G__23802.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__23804 = coll;
if(G__23804){
var bit__16332__auto__ = (G__23804.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16332__auto__) || (G__23804.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__23806 = coll;
if(G__23806){
var bit__16332__auto__ = (G__23806.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16332__auto__) || (G__23806.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__23811__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__23812 = y;
var G__23813 = cljs.core.first(more);
var G__23814 = cljs.core.next(more);
x = G__23812;
y = G__23813;
more = G__23814;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__23811 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__23815__i = 0, G__23815__a = new Array(arguments.length -  2);
while (G__23815__i < G__23815__a.length) {G__23815__a[G__23815__i] = arguments[G__23815__i + 2]; ++G__23815__i;}
  more = new cljs.core.IndexedSeq(G__23815__a,0);
} 
return G__23811__delegate.call(this,x,y,more);};
G__23811.cljs$lang$maxFixedArity = 2;
G__23811.cljs$lang$applyTo = (function (arglist__23816){
var x = cljs.core.first(arglist__23816);
arglist__23816 = cljs.core.next(arglist__23816);
var y = cljs.core.first(arglist__23816);
var more = cljs.core.rest(arglist__23816);
return G__23811__delegate(x,y,more);
});
G__23811.cljs$core$IFn$_invoke$arity$variadic = G__23811__delegate;
return G__23811;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__23817 = null;
if (arguments.length > 2) {
var G__23818__i = 0, G__23818__a = new Array(arguments.length -  2);
while (G__23818__i < G__23818__a.length) {G__23818__a[G__23818__i] = arguments[G__23818__i + 2]; ++G__23818__i;}
G__23817 = new cljs.core.IndexedSeq(G__23818__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23817);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__23819 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__23819) : cljs.core.es6_iterator_seq.call(null,G__23819));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__23820 = (n + (1));
var G__23821 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__23822 = cljs.core.next(coll__$1);
n = G__23820;
hash_code = G__23821;
coll__$1 = G__23822;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__23823 = (n + (1));
var G__23824 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__23825 = cljs.core.next(coll__$1);
n = G__23823;
hash_code = G__23824;
coll__$1 = G__23825;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__23826 = o;
return goog.getUid(G__23826);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__23828 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23828) : cljs.core.deref.call(null,G__23828));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__23835 = val;
var G__23836 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23835,G__23836) : f.call(null,G__23835,G__23836));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23841 = nval;
var G__23842 = (n + (1));
val = G__23841;
n = G__23842;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__23837 = val__$1;
var G__23838 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23837,G__23838) : f.call(null,G__23837,G__23838));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23843 = nval;
var G__23844 = (n + (1));
val__$1 = G__23843;
n = G__23844;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__23839 = val__$1;
var G__23840 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23839,G__23840) : f.call(null,G__23839,G__23840));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23845 = nval;
var G__23846 = (n + (1));
val__$1 = G__23845;
n = G__23846;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__23853 = val;
var G__23854 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23853,G__23854) : f.call(null,G__23853,G__23854));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23859 = nval;
var G__23860 = (n + (1));
val = G__23859;
n = G__23860;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__23855 = val__$1;
var G__23856 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23855,G__23856) : f.call(null,G__23855,G__23856));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23861 = nval;
var G__23862 = (n + (1));
val__$1 = G__23861;
n = G__23862;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__23857 = val__$1;
var G__23858 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23857,G__23858) : f.call(null,G__23857,G__23858));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23863 = nval;
var G__23864 = (n + (1));
val__$1 = G__23863;
n = G__23864;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__23866 = x;
if(G__23866){
var bit__16339__auto__ = (G__23866.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__16339__auto__) || (G__23866.cljs$core$ICounted$)){
return true;
} else {
if((!G__23866.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__23866);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__23866);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__23868 = x;
if(G__23868){
var bit__16339__auto__ = (G__23868.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__16339__auto__) || (G__23868.cljs$core$IIndexed$)){
return true;
} else {
if((!G__23868.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__23868);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__23868);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__23869 = coll__$1;
var G__23870 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__23869,G__23870) : cljs.core.equiv_sequential.call(null,G__23869,G__23870));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__23871 = o;
var G__23872 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__23871,G__23872) : cljs.core.cons.call(null,G__23871,G__23872));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__23875 = coll__$1;
var G__23876 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__23875,G__23876) : cljs.core.equiv_sequential.call(null,G__23875,G__23876));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__23877 = cljs.core.List.EMPTY;
var G__23878 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__23877,G__23878) : cljs.core.with_meta.call(null,G__23877,G__23878));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__23879 = f;
var G__23880 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__23879,G__23880) : cljs.core.seq_reduce.call(null,G__23879,G__23880));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__23881 = f;
var G__23882 = start;
var G__23883 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__23881,G__23882,G__23883) : cljs.core.seq_reduce.call(null,G__23881,G__23882,G__23883));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__23884 = o;
var G__23885 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__23884,G__23885) : cljs.core.cons.call(null,G__23884,G__23885));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__23886 = sn;
s = G__23886;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__23891__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__23892 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__23893 = cljs.core.first(xs);
var G__23894 = cljs.core.next(xs);
coll = G__23892;
x = G__23893;
xs = G__23894;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__23891 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__23895__i = 0, G__23895__a = new Array(arguments.length -  2);
while (G__23895__i < G__23895__a.length) {G__23895__a[G__23895__i] = arguments[G__23895__i + 2]; ++G__23895__i;}
  xs = new cljs.core.IndexedSeq(G__23895__a,0);
} 
return G__23891__delegate.call(this,coll,x,xs);};
G__23891.cljs$lang$maxFixedArity = 2;
G__23891.cljs$lang$applyTo = (function (arglist__23896){
var coll = cljs.core.first(arglist__23896);
arglist__23896 = cljs.core.next(arglist__23896);
var x = cljs.core.first(arglist__23896);
var xs = cljs.core.rest(arglist__23896);
return G__23891__delegate(coll,x,xs);
});
G__23891.cljs$core$IFn$_invoke$arity$variadic = G__23891__delegate;
return G__23891;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__23897 = null;
if (arguments.length > 2) {
var G__23898__i = 0, G__23898__a = new Array(arguments.length -  2);
while (G__23898__i < G__23898__a.length) {G__23898__a[G__23898__i] = arguments[G__23898__i + 2]; ++G__23898__i;}
G__23897 = new cljs.core.IndexedSeq(G__23898__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__23897);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__23899 = cljs.core.next(s);
var G__23900 = (acc + (1));
s = G__23899;
acc = G__23900;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__23902 = coll;
if(G__23902){
var bit__16332__auto__ = (G__23902.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__16332__auto__) || (G__23902.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__23903 = cljs.core.next(coll);
var G__23904 = (n - (1));
coll = G__23903;
n = G__23904;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__23905 = cljs.core.next(coll);
var G__23906 = (n - (1));
var G__23907 = not_found;
coll = G__23905;
n = G__23906;
not_found = G__23907;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__23912 = coll;
if(G__23912){
var bit__16332__auto__ = (G__23912.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__16332__auto__) || (G__23912.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__23913 = coll;
if(G__23913){
var bit__16339__auto__ = (G__23913.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16339__auto__) || (G__23913.cljs$core$ISeq$)){
return true;
} else {
if((!G__23913.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__23913);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__23913);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__23914 = coll;
if(G__23914){
var bit__16332__auto__ = (G__23914.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__16332__auto__) || (G__23914.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__23915 = coll;
if(G__23915){
var bit__16339__auto__ = (G__23915.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16339__auto__) || (G__23915.cljs$core$ISeq$)){
return true;
} else {
if((!G__23915.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__23915);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__23915);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__23916 = (n__$1 - (1));
var G__23917 = cljs.core.rest(xs);
n__$1 = G__23916;
xs = G__23917;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__23920 = o;
if(G__23920){
var bit__16332__auto__ = (G__23920.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__16332__auto__) || (G__23920.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__23921 = o;
if(G__23921){
var bit__16332__auto__ = (G__23921.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__16332__auto__) || (G__23921.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__23925__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__23926 = ret;
var G__23927 = cljs.core.first(kvs);
var G__23928 = cljs.core.second(kvs);
var G__23929 = cljs.core.nnext(kvs);
coll = G__23926;
k = G__23927;
v = G__23928;
kvs = G__23929;
continue;
} else {
return ret;
}
break;
}
};
var G__23925 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__23930__i = 0, G__23930__a = new Array(arguments.length -  3);
while (G__23930__i < G__23930__a.length) {G__23930__a[G__23930__i] = arguments[G__23930__i + 3]; ++G__23930__i;}
  kvs = new cljs.core.IndexedSeq(G__23930__a,0);
} 
return G__23925__delegate.call(this,coll,k,v,kvs);};
G__23925.cljs$lang$maxFixedArity = 3;
G__23925.cljs$lang$applyTo = (function (arglist__23931){
var coll = cljs.core.first(arglist__23931);
arglist__23931 = cljs.core.next(arglist__23931);
var k = cljs.core.first(arglist__23931);
arglist__23931 = cljs.core.next(arglist__23931);
var v = cljs.core.first(arglist__23931);
var kvs = cljs.core.rest(arglist__23931);
return G__23925__delegate(coll,k,v,kvs);
});
G__23925.cljs$core$IFn$_invoke$arity$variadic = G__23925__delegate;
return G__23925;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__23932 = null;
if (arguments.length > 3) {
var G__23933__i = 0, G__23933__a = new Array(arguments.length -  3);
while (G__23933__i < G__23933__a.length) {G__23933__a[G__23933__i] = arguments[G__23933__i + 3]; ++G__23933__i;}
G__23932 = new cljs.core.IndexedSeq(G__23933__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__23932);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__23936__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__23937 = ret;
var G__23938 = cljs.core.first(ks);
var G__23939 = cljs.core.next(ks);
coll = G__23937;
k = G__23938;
ks = G__23939;
continue;
} else {
return ret;
}
}
break;
}
};
var G__23936 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__23940__i = 0, G__23940__a = new Array(arguments.length -  2);
while (G__23940__i < G__23940__a.length) {G__23940__a[G__23940__i] = arguments[G__23940__i + 2]; ++G__23940__i;}
  ks = new cljs.core.IndexedSeq(G__23940__a,0);
} 
return G__23936__delegate.call(this,coll,k,ks);};
G__23936.cljs$lang$maxFixedArity = 2;
G__23936.cljs$lang$applyTo = (function (arglist__23941){
var coll = cljs.core.first(arglist__23941);
arglist__23941 = cljs.core.next(arglist__23941);
var k = cljs.core.first(arglist__23941);
var ks = cljs.core.rest(arglist__23941);
return G__23936__delegate(coll,k,ks);
});
G__23936.cljs$core$IFn$_invoke$arity$variadic = G__23936__delegate;
return G__23936;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__23942 = null;
if (arguments.length > 2) {
var G__23943__i = 0, G__23943__a = new Array(arguments.length -  2);
while (G__23943__i < G__23943__a.length) {G__23943__a[G__23943__i] = arguments[G__23943__i + 2]; ++G__23943__i;}
G__23942 = new cljs.core.IndexedSeq(G__23943__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__23942);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__15658__auto__ = (function (){var G__23948 = f;
return goog.isFunction(G__23948);
})();
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
var G__23949 = f;
if(G__23949){
var bit__16339__auto__ = null;
if(cljs.core.truth_((function (){var or__15658__auto____$1 = bit__16339__auto__;
if(cljs.core.truth_(or__15658__auto____$1)){
return or__15658__auto____$1;
} else {
return G__23949.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__23949.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__23949);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__23949);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__24415 = null;
var G__24415__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__24415__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23951 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__23951) : self__.afn.call(null,G__23951));
});
var G__24415__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23952 = a;
var G__23953 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__23952,G__23953) : self__.afn.call(null,G__23952,G__23953));
});
var G__24415__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23954 = a;
var G__23955 = b;
var G__23956 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__23954,G__23955,G__23956) : self__.afn.call(null,G__23954,G__23955,G__23956));
});
var G__24415__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23957 = a;
var G__23958 = b;
var G__23959 = c;
var G__23960 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__23957,G__23958,G__23959,G__23960) : self__.afn.call(null,G__23957,G__23958,G__23959,G__23960));
});
var G__24415__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23961 = a;
var G__23962 = b;
var G__23963 = c;
var G__23964 = d;
var G__23965 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__23961,G__23962,G__23963,G__23964,G__23965) : self__.afn.call(null,G__23961,G__23962,G__23963,G__23964,G__23965));
});
var G__24415__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23966 = a;
var G__23967 = b;
var G__23968 = c;
var G__23969 = d;
var G__23970 = e;
var G__23971 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__23966,G__23967,G__23968,G__23969,G__23970,G__23971) : self__.afn.call(null,G__23966,G__23967,G__23968,G__23969,G__23970,G__23971));
});
var G__24415__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23972 = a;
var G__23973 = b;
var G__23974 = c;
var G__23975 = d;
var G__23976 = e;
var G__23977 = f;
var G__23978 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__23972,G__23973,G__23974,G__23975,G__23976,G__23977,G__23978) : self__.afn.call(null,G__23972,G__23973,G__23974,G__23975,G__23976,G__23977,G__23978));
});
var G__24415__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23979 = a;
var G__23980 = b;
var G__23981 = c;
var G__23982 = d;
var G__23983 = e;
var G__23984 = f;
var G__23985 = g;
var G__23986 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__23979,G__23980,G__23981,G__23982,G__23983,G__23984,G__23985,G__23986) : self__.afn.call(null,G__23979,G__23980,G__23981,G__23982,G__23983,G__23984,G__23985,G__23986));
});
var G__24415__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23987 = a;
var G__23988 = b;
var G__23989 = c;
var G__23990 = d;
var G__23991 = e;
var G__23992 = f;
var G__23993 = g;
var G__23994 = h;
var G__23995 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__23987,G__23988,G__23989,G__23990,G__23991,G__23992,G__23993,G__23994,G__23995) : self__.afn.call(null,G__23987,G__23988,G__23989,G__23990,G__23991,G__23992,G__23993,G__23994,G__23995));
});
var G__24415__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23996 = a;
var G__23997 = b;
var G__23998 = c;
var G__23999 = d;
var G__24000 = e;
var G__24001 = f;
var G__24002 = g;
var G__24003 = h;
var G__24004 = i;
var G__24005 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__23996,G__23997,G__23998,G__23999,G__24000,G__24001,G__24002,G__24003,G__24004,G__24005) : self__.afn.call(null,G__23996,G__23997,G__23998,G__23999,G__24000,G__24001,G__24002,G__24003,G__24004,G__24005));
});
var G__24415__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24006 = a;
var G__24007 = b;
var G__24008 = c;
var G__24009 = d;
var G__24010 = e;
var G__24011 = f;
var G__24012 = g;
var G__24013 = h;
var G__24014 = i;
var G__24015 = j;
var G__24016 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__24006,G__24007,G__24008,G__24009,G__24010,G__24011,G__24012,G__24013,G__24014,G__24015,G__24016) : self__.afn.call(null,G__24006,G__24007,G__24008,G__24009,G__24010,G__24011,G__24012,G__24013,G__24014,G__24015,G__24016));
});
var G__24415__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24017 = a;
var G__24018 = b;
var G__24019 = c;
var G__24020 = d;
var G__24021 = e;
var G__24022 = f;
var G__24023 = g;
var G__24024 = h;
var G__24025 = i;
var G__24026 = j;
var G__24027 = k;
var G__24028 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__24017,G__24018,G__24019,G__24020,G__24021,G__24022,G__24023,G__24024,G__24025,G__24026,G__24027,G__24028) : self__.afn.call(null,G__24017,G__24018,G__24019,G__24020,G__24021,G__24022,G__24023,G__24024,G__24025,G__24026,G__24027,G__24028));
});
var G__24415__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24029 = a;
var G__24030 = b;
var G__24031 = c;
var G__24032 = d;
var G__24033 = e;
var G__24034 = f;
var G__24035 = g;
var G__24036 = h;
var G__24037 = i;
var G__24038 = j;
var G__24039 = k;
var G__24040 = l;
var G__24041 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__24029,G__24030,G__24031,G__24032,G__24033,G__24034,G__24035,G__24036,G__24037,G__24038,G__24039,G__24040,G__24041) : self__.afn.call(null,G__24029,G__24030,G__24031,G__24032,G__24033,G__24034,G__24035,G__24036,G__24037,G__24038,G__24039,G__24040,G__24041));
});
var G__24415__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24042 = a;
var G__24043 = b;
var G__24044 = c;
var G__24045 = d;
var G__24046 = e;
var G__24047 = f;
var G__24048 = g;
var G__24049 = h;
var G__24050 = i;
var G__24051 = j;
var G__24052 = k;
var G__24053 = l;
var G__24054 = m;
var G__24055 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__24042,G__24043,G__24044,G__24045,G__24046,G__24047,G__24048,G__24049,G__24050,G__24051,G__24052,G__24053,G__24054,G__24055) : self__.afn.call(null,G__24042,G__24043,G__24044,G__24045,G__24046,G__24047,G__24048,G__24049,G__24050,G__24051,G__24052,G__24053,G__24054,G__24055));
});
var G__24415__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24056 = a;
var G__24057 = b;
var G__24058 = c;
var G__24059 = d;
var G__24060 = e;
var G__24061 = f;
var G__24062 = g;
var G__24063 = h;
var G__24064 = i;
var G__24065 = j;
var G__24066 = k;
var G__24067 = l;
var G__24068 = m;
var G__24069 = n;
var G__24070 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__24056,G__24057,G__24058,G__24059,G__24060,G__24061,G__24062,G__24063,G__24064,G__24065,G__24066,G__24067,G__24068,G__24069,G__24070) : self__.afn.call(null,G__24056,G__24057,G__24058,G__24059,G__24060,G__24061,G__24062,G__24063,G__24064,G__24065,G__24066,G__24067,G__24068,G__24069,G__24070));
});
var G__24415__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24071 = a;
var G__24072 = b;
var G__24073 = c;
var G__24074 = d;
var G__24075 = e;
var G__24076 = f;
var G__24077 = g;
var G__24078 = h;
var G__24079 = i;
var G__24080 = j;
var G__24081 = k;
var G__24082 = l;
var G__24083 = m;
var G__24084 = n;
var G__24085 = o;
var G__24086 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__24071,G__24072,G__24073,G__24074,G__24075,G__24076,G__24077,G__24078,G__24079,G__24080,G__24081,G__24082,G__24083,G__24084,G__24085,G__24086) : self__.afn.call(null,G__24071,G__24072,G__24073,G__24074,G__24075,G__24076,G__24077,G__24078,G__24079,G__24080,G__24081,G__24082,G__24083,G__24084,G__24085,G__24086));
});
var G__24415__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24087 = a;
var G__24088 = b;
var G__24089 = c;
var G__24090 = d;
var G__24091 = e;
var G__24092 = f;
var G__24093 = g;
var G__24094 = h;
var G__24095 = i;
var G__24096 = j;
var G__24097 = k;
var G__24098 = l;
var G__24099 = m;
var G__24100 = n;
var G__24101 = o;
var G__24102 = p;
var G__24103 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__24087,G__24088,G__24089,G__24090,G__24091,G__24092,G__24093,G__24094,G__24095,G__24096,G__24097,G__24098,G__24099,G__24100,G__24101,G__24102,G__24103) : self__.afn.call(null,G__24087,G__24088,G__24089,G__24090,G__24091,G__24092,G__24093,G__24094,G__24095,G__24096,G__24097,G__24098,G__24099,G__24100,G__24101,G__24102,G__24103));
});
var G__24415__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24104 = a;
var G__24105 = b;
var G__24106 = c;
var G__24107 = d;
var G__24108 = e;
var G__24109 = f;
var G__24110 = g;
var G__24111 = h;
var G__24112 = i;
var G__24113 = j;
var G__24114 = k;
var G__24115 = l;
var G__24116 = m;
var G__24117 = n;
var G__24118 = o;
var G__24119 = p;
var G__24120 = q;
var G__24121 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__24104,G__24105,G__24106,G__24107,G__24108,G__24109,G__24110,G__24111,G__24112,G__24113,G__24114,G__24115,G__24116,G__24117,G__24118,G__24119,G__24120,G__24121) : self__.afn.call(null,G__24104,G__24105,G__24106,G__24107,G__24108,G__24109,G__24110,G__24111,G__24112,G__24113,G__24114,G__24115,G__24116,G__24117,G__24118,G__24119,G__24120,G__24121));
});
var G__24415__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24122 = a;
var G__24123 = b;
var G__24124 = c;
var G__24125 = d;
var G__24126 = e;
var G__24127 = f;
var G__24128 = g;
var G__24129 = h;
var G__24130 = i;
var G__24131 = j;
var G__24132 = k;
var G__24133 = l;
var G__24134 = m;
var G__24135 = n;
var G__24136 = o;
var G__24137 = p;
var G__24138 = q;
var G__24139 = r;
var G__24140 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__24122,G__24123,G__24124,G__24125,G__24126,G__24127,G__24128,G__24129,G__24130,G__24131,G__24132,G__24133,G__24134,G__24135,G__24136,G__24137,G__24138,G__24139,G__24140) : self__.afn.call(null,G__24122,G__24123,G__24124,G__24125,G__24126,G__24127,G__24128,G__24129,G__24130,G__24131,G__24132,G__24133,G__24134,G__24135,G__24136,G__24137,G__24138,G__24139,G__24140));
});
var G__24415__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24141 = a;
var G__24142 = b;
var G__24143 = c;
var G__24144 = d;
var G__24145 = e;
var G__24146 = f;
var G__24147 = g;
var G__24148 = h;
var G__24149 = i;
var G__24150 = j;
var G__24151 = k;
var G__24152 = l;
var G__24153 = m;
var G__24154 = n;
var G__24155 = o;
var G__24156 = p;
var G__24157 = q;
var G__24158 = r;
var G__24159 = s;
var G__24160 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__24141,G__24142,G__24143,G__24144,G__24145,G__24146,G__24147,G__24148,G__24149,G__24150,G__24151,G__24152,G__24153,G__24154,G__24155,G__24156,G__24157,G__24158,G__24159,G__24160) : self__.afn.call(null,G__24141,G__24142,G__24143,G__24144,G__24145,G__24146,G__24147,G__24148,G__24149,G__24150,G__24151,G__24152,G__24153,G__24154,G__24155,G__24156,G__24157,G__24158,G__24159,G__24160));
});
var G__24415__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24161 = self__.afn;
var G__24162 = a;
var G__24163 = b;
var G__24164 = c;
var G__24165 = d;
var G__24166 = e;
var G__24167 = f;
var G__24168 = g;
var G__24169 = h;
var G__24170 = i;
var G__24171 = j;
var G__24172 = k;
var G__24173 = l;
var G__24174 = m;
var G__24175 = n;
var G__24176 = o;
var G__24177 = p;
var G__24178 = q;
var G__24179 = r;
var G__24180 = s;
var G__24181 = t;
var G__24182 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__24161,G__24162,G__24163,G__24164,G__24165,G__24166,G__24167,G__24168,G__24169,G__24170,G__24171,G__24172,G__24173,G__24174,G__24175,G__24176,G__24177,G__24178,G__24179,G__24180,G__24181,G__24182) : cljs.core.apply.call(null,G__24161,G__24162,G__24163,G__24164,G__24165,G__24166,G__24167,G__24168,G__24169,G__24170,G__24171,G__24172,G__24173,G__24174,G__24175,G__24176,G__24177,G__24178,G__24179,G__24180,G__24181,G__24182));
});
G__24415 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__24415__1.call(this,self__);
case 2:
return G__24415__2.call(this,self__,a);
case 3:
return G__24415__3.call(this,self__,a,b);
case 4:
return G__24415__4.call(this,self__,a,b,c);
case 5:
return G__24415__5.call(this,self__,a,b,c,d);
case 6:
return G__24415__6.call(this,self__,a,b,c,d,e);
case 7:
return G__24415__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__24415__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__24415__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__24415__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__24415__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__24415__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__24415__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__24415__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__24415__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__24415__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__24415__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__24415__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__24415__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__24415__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__24415__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__24415__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24415.cljs$core$IFn$_invoke$arity$1 = G__24415__1;
G__24415.cljs$core$IFn$_invoke$arity$2 = G__24415__2;
G__24415.cljs$core$IFn$_invoke$arity$3 = G__24415__3;
G__24415.cljs$core$IFn$_invoke$arity$4 = G__24415__4;
G__24415.cljs$core$IFn$_invoke$arity$5 = G__24415__5;
G__24415.cljs$core$IFn$_invoke$arity$6 = G__24415__6;
G__24415.cljs$core$IFn$_invoke$arity$7 = G__24415__7;
G__24415.cljs$core$IFn$_invoke$arity$8 = G__24415__8;
G__24415.cljs$core$IFn$_invoke$arity$9 = G__24415__9;
G__24415.cljs$core$IFn$_invoke$arity$10 = G__24415__10;
G__24415.cljs$core$IFn$_invoke$arity$11 = G__24415__11;
G__24415.cljs$core$IFn$_invoke$arity$12 = G__24415__12;
G__24415.cljs$core$IFn$_invoke$arity$13 = G__24415__13;
G__24415.cljs$core$IFn$_invoke$arity$14 = G__24415__14;
G__24415.cljs$core$IFn$_invoke$arity$15 = G__24415__15;
G__24415.cljs$core$IFn$_invoke$arity$16 = G__24415__16;
G__24415.cljs$core$IFn$_invoke$arity$17 = G__24415__17;
G__24415.cljs$core$IFn$_invoke$arity$18 = G__24415__18;
G__24415.cljs$core$IFn$_invoke$arity$19 = G__24415__19;
G__24415.cljs$core$IFn$_invoke$arity$20 = G__24415__20;
G__24415.cljs$core$IFn$_invoke$arity$21 = G__24415__21;
G__24415.cljs$core$IFn$_invoke$arity$22 = G__24415__22;
return G__24415;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args23950){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23950)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__24183 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__24183) : self__.afn.call(null,G__24183));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__24184 = a;
var G__24185 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__24184,G__24185) : self__.afn.call(null,G__24184,G__24185));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__24186 = a;
var G__24187 = b;
var G__24188 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__24186,G__24187,G__24188) : self__.afn.call(null,G__24186,G__24187,G__24188));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__24189 = a;
var G__24190 = b;
var G__24191 = c;
var G__24192 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__24189,G__24190,G__24191,G__24192) : self__.afn.call(null,G__24189,G__24190,G__24191,G__24192));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__24193 = a;
var G__24194 = b;
var G__24195 = c;
var G__24196 = d;
var G__24197 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__24193,G__24194,G__24195,G__24196,G__24197) : self__.afn.call(null,G__24193,G__24194,G__24195,G__24196,G__24197));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__24198 = a;
var G__24199 = b;
var G__24200 = c;
var G__24201 = d;
var G__24202 = e;
var G__24203 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__24198,G__24199,G__24200,G__24201,G__24202,G__24203) : self__.afn.call(null,G__24198,G__24199,G__24200,G__24201,G__24202,G__24203));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__24204 = a;
var G__24205 = b;
var G__24206 = c;
var G__24207 = d;
var G__24208 = e;
var G__24209 = f;
var G__24210 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__24204,G__24205,G__24206,G__24207,G__24208,G__24209,G__24210) : self__.afn.call(null,G__24204,G__24205,G__24206,G__24207,G__24208,G__24209,G__24210));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__24211 = a;
var G__24212 = b;
var G__24213 = c;
var G__24214 = d;
var G__24215 = e;
var G__24216 = f;
var G__24217 = g;
var G__24218 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__24211,G__24212,G__24213,G__24214,G__24215,G__24216,G__24217,G__24218) : self__.afn.call(null,G__24211,G__24212,G__24213,G__24214,G__24215,G__24216,G__24217,G__24218));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__24219 = a;
var G__24220 = b;
var G__24221 = c;
var G__24222 = d;
var G__24223 = e;
var G__24224 = f;
var G__24225 = g;
var G__24226 = h;
var G__24227 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__24219,G__24220,G__24221,G__24222,G__24223,G__24224,G__24225,G__24226,G__24227) : self__.afn.call(null,G__24219,G__24220,G__24221,G__24222,G__24223,G__24224,G__24225,G__24226,G__24227));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__24228 = a;
var G__24229 = b;
var G__24230 = c;
var G__24231 = d;
var G__24232 = e;
var G__24233 = f;
var G__24234 = g;
var G__24235 = h;
var G__24236 = i;
var G__24237 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__24228,G__24229,G__24230,G__24231,G__24232,G__24233,G__24234,G__24235,G__24236,G__24237) : self__.afn.call(null,G__24228,G__24229,G__24230,G__24231,G__24232,G__24233,G__24234,G__24235,G__24236,G__24237));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__24238 = a;
var G__24239 = b;
var G__24240 = c;
var G__24241 = d;
var G__24242 = e;
var G__24243 = f;
var G__24244 = g;
var G__24245 = h;
var G__24246 = i;
var G__24247 = j;
var G__24248 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__24238,G__24239,G__24240,G__24241,G__24242,G__24243,G__24244,G__24245,G__24246,G__24247,G__24248) : self__.afn.call(null,G__24238,G__24239,G__24240,G__24241,G__24242,G__24243,G__24244,G__24245,G__24246,G__24247,G__24248));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__24249 = a;
var G__24250 = b;
var G__24251 = c;
var G__24252 = d;
var G__24253 = e;
var G__24254 = f;
var G__24255 = g;
var G__24256 = h;
var G__24257 = i;
var G__24258 = j;
var G__24259 = k;
var G__24260 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__24249,G__24250,G__24251,G__24252,G__24253,G__24254,G__24255,G__24256,G__24257,G__24258,G__24259,G__24260) : self__.afn.call(null,G__24249,G__24250,G__24251,G__24252,G__24253,G__24254,G__24255,G__24256,G__24257,G__24258,G__24259,G__24260));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__24261 = a;
var G__24262 = b;
var G__24263 = c;
var G__24264 = d;
var G__24265 = e;
var G__24266 = f;
var G__24267 = g;
var G__24268 = h;
var G__24269 = i;
var G__24270 = j;
var G__24271 = k;
var G__24272 = l;
var G__24273 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__24261,G__24262,G__24263,G__24264,G__24265,G__24266,G__24267,G__24268,G__24269,G__24270,G__24271,G__24272,G__24273) : self__.afn.call(null,G__24261,G__24262,G__24263,G__24264,G__24265,G__24266,G__24267,G__24268,G__24269,G__24270,G__24271,G__24272,G__24273));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__24274 = a;
var G__24275 = b;
var G__24276 = c;
var G__24277 = d;
var G__24278 = e;
var G__24279 = f;
var G__24280 = g;
var G__24281 = h;
var G__24282 = i;
var G__24283 = j;
var G__24284 = k;
var G__24285 = l;
var G__24286 = m;
var G__24287 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__24274,G__24275,G__24276,G__24277,G__24278,G__24279,G__24280,G__24281,G__24282,G__24283,G__24284,G__24285,G__24286,G__24287) : self__.afn.call(null,G__24274,G__24275,G__24276,G__24277,G__24278,G__24279,G__24280,G__24281,G__24282,G__24283,G__24284,G__24285,G__24286,G__24287));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__24288 = a;
var G__24289 = b;
var G__24290 = c;
var G__24291 = d;
var G__24292 = e;
var G__24293 = f;
var G__24294 = g;
var G__24295 = h;
var G__24296 = i;
var G__24297 = j;
var G__24298 = k;
var G__24299 = l;
var G__24300 = m;
var G__24301 = n;
var G__24302 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__24288,G__24289,G__24290,G__24291,G__24292,G__24293,G__24294,G__24295,G__24296,G__24297,G__24298,G__24299,G__24300,G__24301,G__24302) : self__.afn.call(null,G__24288,G__24289,G__24290,G__24291,G__24292,G__24293,G__24294,G__24295,G__24296,G__24297,G__24298,G__24299,G__24300,G__24301,G__24302));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__24303 = a;
var G__24304 = b;
var G__24305 = c;
var G__24306 = d;
var G__24307 = e;
var G__24308 = f;
var G__24309 = g;
var G__24310 = h;
var G__24311 = i;
var G__24312 = j;
var G__24313 = k;
var G__24314 = l;
var G__24315 = m;
var G__24316 = n;
var G__24317 = o;
var G__24318 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__24303,G__24304,G__24305,G__24306,G__24307,G__24308,G__24309,G__24310,G__24311,G__24312,G__24313,G__24314,G__24315,G__24316,G__24317,G__24318) : self__.afn.call(null,G__24303,G__24304,G__24305,G__24306,G__24307,G__24308,G__24309,G__24310,G__24311,G__24312,G__24313,G__24314,G__24315,G__24316,G__24317,G__24318));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__24319 = a;
var G__24320 = b;
var G__24321 = c;
var G__24322 = d;
var G__24323 = e;
var G__24324 = f;
var G__24325 = g;
var G__24326 = h;
var G__24327 = i;
var G__24328 = j;
var G__24329 = k;
var G__24330 = l;
var G__24331 = m;
var G__24332 = n;
var G__24333 = o;
var G__24334 = p;
var G__24335 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__24319,G__24320,G__24321,G__24322,G__24323,G__24324,G__24325,G__24326,G__24327,G__24328,G__24329,G__24330,G__24331,G__24332,G__24333,G__24334,G__24335) : self__.afn.call(null,G__24319,G__24320,G__24321,G__24322,G__24323,G__24324,G__24325,G__24326,G__24327,G__24328,G__24329,G__24330,G__24331,G__24332,G__24333,G__24334,G__24335));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__24336 = a;
var G__24337 = b;
var G__24338 = c;
var G__24339 = d;
var G__24340 = e;
var G__24341 = f;
var G__24342 = g;
var G__24343 = h;
var G__24344 = i;
var G__24345 = j;
var G__24346 = k;
var G__24347 = l;
var G__24348 = m;
var G__24349 = n;
var G__24350 = o;
var G__24351 = p;
var G__24352 = q;
var G__24353 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__24336,G__24337,G__24338,G__24339,G__24340,G__24341,G__24342,G__24343,G__24344,G__24345,G__24346,G__24347,G__24348,G__24349,G__24350,G__24351,G__24352,G__24353) : self__.afn.call(null,G__24336,G__24337,G__24338,G__24339,G__24340,G__24341,G__24342,G__24343,G__24344,G__24345,G__24346,G__24347,G__24348,G__24349,G__24350,G__24351,G__24352,G__24353));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__24354 = a;
var G__24355 = b;
var G__24356 = c;
var G__24357 = d;
var G__24358 = e;
var G__24359 = f;
var G__24360 = g;
var G__24361 = h;
var G__24362 = i;
var G__24363 = j;
var G__24364 = k;
var G__24365 = l;
var G__24366 = m;
var G__24367 = n;
var G__24368 = o;
var G__24369 = p;
var G__24370 = q;
var G__24371 = r;
var G__24372 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__24354,G__24355,G__24356,G__24357,G__24358,G__24359,G__24360,G__24361,G__24362,G__24363,G__24364,G__24365,G__24366,G__24367,G__24368,G__24369,G__24370,G__24371,G__24372) : self__.afn.call(null,G__24354,G__24355,G__24356,G__24357,G__24358,G__24359,G__24360,G__24361,G__24362,G__24363,G__24364,G__24365,G__24366,G__24367,G__24368,G__24369,G__24370,G__24371,G__24372));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__24373 = a;
var G__24374 = b;
var G__24375 = c;
var G__24376 = d;
var G__24377 = e;
var G__24378 = f;
var G__24379 = g;
var G__24380 = h;
var G__24381 = i;
var G__24382 = j;
var G__24383 = k;
var G__24384 = l;
var G__24385 = m;
var G__24386 = n;
var G__24387 = o;
var G__24388 = p;
var G__24389 = q;
var G__24390 = r;
var G__24391 = s;
var G__24392 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__24373,G__24374,G__24375,G__24376,G__24377,G__24378,G__24379,G__24380,G__24381,G__24382,G__24383,G__24384,G__24385,G__24386,G__24387,G__24388,G__24389,G__24390,G__24391,G__24392) : self__.afn.call(null,G__24373,G__24374,G__24375,G__24376,G__24377,G__24378,G__24379,G__24380,G__24381,G__24382,G__24383,G__24384,G__24385,G__24386,G__24387,G__24388,G__24389,G__24390,G__24391,G__24392));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__24393 = self__.afn;
var G__24394 = a;
var G__24395 = b;
var G__24396 = c;
var G__24397 = d;
var G__24398 = e;
var G__24399 = f;
var G__24400 = g;
var G__24401 = h;
var G__24402 = i;
var G__24403 = j;
var G__24404 = k;
var G__24405 = l;
var G__24406 = m;
var G__24407 = n;
var G__24408 = o;
var G__24409 = p;
var G__24410 = q;
var G__24411 = r;
var G__24412 = s;
var G__24413 = t;
var G__24414 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__24393,G__24394,G__24395,G__24396,G__24397,G__24398,G__24399,G__24400,G__24401,G__24402,G__24403,G__24404,G__24405,G__24406,G__24407,G__24408,G__24409,G__24410,G__24411,G__24412,G__24413,G__24414) : cljs.core.apply.call(null,G__24393,G__24394,G__24395,G__24396,G__24397,G__24398,G__24399,G__24400,G__24401,G__24402,G__24403,G__24404,G__24405,G__24406,G__24407,G__24408,G__24409,G__24410,G__24411,G__24412,G__24413,G__24414));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__24419 = o;
if(G__24419){
var bit__16339__auto__ = (G__24419.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__16339__auto__) || (G__24419.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__24419.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__24419);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__24419);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__15646__auto__ = !((o == null));
if(and__15646__auto__){
var G__24423 = o;
if(G__24423){
var bit__16339__auto__ = (G__24423.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__16339__auto__) || (G__24423.cljs$core$IMeta$)){
return true;
} else {
if((!G__24423.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__24423);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__24423);
}
} else {
return and__15646__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__24426__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__24427 = ret;
var G__24428 = cljs.core.first(ks);
var G__24429 = cljs.core.next(ks);
coll = G__24427;
k = G__24428;
ks = G__24429;
continue;
} else {
return ret;
}
}
break;
}
};
var G__24426 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__24430__i = 0, G__24430__a = new Array(arguments.length -  2);
while (G__24430__i < G__24430__a.length) {G__24430__a[G__24430__i] = arguments[G__24430__i + 2]; ++G__24430__i;}
  ks = new cljs.core.IndexedSeq(G__24430__a,0);
} 
return G__24426__delegate.call(this,coll,k,ks);};
G__24426.cljs$lang$maxFixedArity = 2;
G__24426.cljs$lang$applyTo = (function (arglist__24431){
var coll = cljs.core.first(arglist__24431);
arglist__24431 = cljs.core.next(arglist__24431);
var k = cljs.core.first(arglist__24431);
var ks = cljs.core.rest(arglist__24431);
return G__24426__delegate(coll,k,ks);
});
G__24426.cljs$core$IFn$_invoke$arity$variadic = G__24426__delegate;
return G__24426;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__24432 = null;
if (arguments.length > 2) {
var G__24433__i = 0, G__24433__a = new Array(arguments.length -  2);
while (G__24433__i < G__24433__a.length) {G__24433__a[G__24433__i] = arguments[G__24433__i + 2]; ++G__24433__i;}
G__24432 = new cljs.core.IndexedSeq(G__24433__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__24432);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__24435 = x;
if(G__24435){
var bit__16339__auto__ = (G__24435.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__16339__auto__) || (G__24435.cljs$core$ICollection$)){
return true;
} else {
if((!G__24435.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__24435);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__24435);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__24437 = x;
if(G__24437){
var bit__16339__auto__ = (G__24437.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__16339__auto__) || (G__24437.cljs$core$ISet$)){
return true;
} else {
if((!G__24437.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__24437);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__24437);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__24439 = x;
if(G__24439){
var bit__16339__auto__ = (G__24439.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__16339__auto__) || (G__24439.cljs$core$IAssociative$)){
return true;
} else {
if((!G__24439.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__24439);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__24439);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__24441 = x;
if(G__24441){
var bit__16339__auto__ = (G__24441.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__16339__auto__) || (G__24441.cljs$core$ISequential$)){
return true;
} else {
if((!G__24441.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__24441);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__24441);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__24443 = x;
if(G__24443){
var bit__16339__auto__ = (G__24443.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__16339__auto__) || (G__24443.cljs$core$ISorted$)){
return true;
} else {
if((!G__24443.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__24443);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__24443);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__24445 = x;
if(G__24445){
var bit__16339__auto__ = (G__24445.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__16339__auto__) || (G__24445.cljs$core$IReduce$)){
return true;
} else {
if((!G__24445.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__24445);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__24445);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__24447 = x;
if(G__24447){
var bit__16339__auto__ = (G__24447.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__16339__auto__) || (G__24447.cljs$core$IMap$)){
return true;
} else {
if((!G__24447.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__24447);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__24447);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__24449 = x;
if(G__24449){
var bit__16339__auto__ = (G__24449.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__16339__auto__) || (G__24449.cljs$core$IVector$)){
return true;
} else {
if((!G__24449.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__24449);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__24449);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__24451 = x;
if(G__24451){
var bit__16332__auto__ = (G__24451.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__16332__auto__) || (G__24451.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj24457 = {};
return obj24457;
});
var js_obj__1 = (function() { 
var G__24460__delegate = function (keyvals){
var G__24458 = goog.object.create;
var G__24459 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__24458,G__24459) : cljs.core.apply.call(null,G__24458,G__24459));
};
var G__24460 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__24461__i = 0, G__24461__a = new Array(arguments.length -  0);
while (G__24461__i < G__24461__a.length) {G__24461__a[G__24461__i] = arguments[G__24461__i + 0]; ++G__24461__i;}
  keyvals = new cljs.core.IndexedSeq(G__24461__a,0);
} 
return G__24460__delegate.call(this,keyvals);};
G__24460.cljs$lang$maxFixedArity = 0;
G__24460.cljs$lang$applyTo = (function (arglist__24462){
var keyvals = cljs.core.seq(arglist__24462);
return G__24460__delegate(keyvals);
});
G__24460.cljs$core$IFn$_invoke$arity$variadic = G__24460__delegate;
return G__24460;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__24463 = null;
if (arguments.length > 0) {
var G__24464__i = 0, G__24464__a = new Array(arguments.length -  0);
while (G__24464__i < G__24464__a.length) {G__24464__a[G__24464__i] = arguments[G__24464__i + 0]; ++G__24464__i;}
G__24463 = new cljs.core.IndexedSeq(G__24464__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__24463);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__24467_24469 = obj;
var G__24468_24470 = ((function (G__24467_24469,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__24467_24469,keys))
;
goog.object.forEach(G__24467_24469,G__24468_24470);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__24471 = (i__$1 + (1));
var G__24472 = (j__$1 + (1));
var G__24473 = (len__$1 - (1));
i__$1 = G__24471;
j__$1 = G__24472;
len__$1 = G__24473;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__24474 = (i__$1 - (1));
var G__24475 = (j__$1 - (1));
var G__24476 = (len__$1 - (1));
i__$1 = G__24474;
j__$1 = G__24475;
len__$1 = G__24476;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj24478 = {};
return obj24478;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__24480 = s;
if(G__24480){
var bit__16339__auto__ = (G__24480.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16339__auto__) || (G__24480.cljs$core$ISeq$)){
return true;
} else {
if((!G__24480.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24480);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24480);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__24482 = s;
if(G__24482){
var bit__16339__auto__ = (G__24482.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__16339__auto__) || (G__24482.cljs$core$ISeqable$)){
return true;
} else {
if((!G__24482.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__24482);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__24482);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__15658__auto__ = cljs.core.fn_QMARK_(f);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var G__24486 = f;
if(G__24486){
var bit__16339__auto__ = (G__24486.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__16339__auto__) || (G__24486.cljs$core$IFn$)){
return true;
} else {
if((!G__24486.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__24486);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__24486);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__24499 = n;
return isNaN(G__24499);
})())) && (!((n === Infinity))) && (((function (){var G__24500 = n;
return parseFloat(G__24500);
})() === (function (){var G__24501 = n;
var G__24502 = (10);
return parseInt(G__24501,G__24502);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__24503__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__24504 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__24505 = etc;
s = G__24504;
xs = G__24505;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__24503 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24506__i = 0, G__24506__a = new Array(arguments.length -  2);
while (G__24506__i < G__24506__a.length) {G__24506__a[G__24506__i] = arguments[G__24506__i + 2]; ++G__24506__i;}
  more = new cljs.core.IndexedSeq(G__24506__a,0);
} 
return G__24503__delegate.call(this,x,y,more);};
G__24503.cljs$lang$maxFixedArity = 2;
G__24503.cljs$lang$applyTo = (function (arglist__24507){
var x = cljs.core.first(arglist__24507);
arglist__24507 = cljs.core.next(arglist__24507);
var y = cljs.core.first(arglist__24507);
var more = cljs.core.rest(arglist__24507);
return G__24503__delegate(x,y,more);
});
G__24503.cljs$core$IFn$_invoke$arity$variadic = G__24503__delegate;
return G__24503;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__24508 = null;
if (arguments.length > 2) {
var G__24509__i = 0, G__24509__a = new Array(arguments.length -  2);
while (G__24509__i < G__24509__a.length) {G__24509__a[G__24509__i] = arguments[G__24509__i + 2]; ++G__24509__i;}
G__24508 = new cljs.core.IndexedSeq(G__24509__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24508);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__24513 = x;
if(G__24513){
var bit__16332__auto__ = (G__24513.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__16332__auto__) || (G__24513.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__24514 = x;
var G__24515 = y;
return goog.array.defaultCompare(G__24514,G__24515);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__24520 = xs;
var G__24521 = ys;
var G__24522 = len;
var G__24523 = (n + (1));
xs = G__24520;
ys = G__24521;
len = G__24522;
n = G__24523;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__24528 = x;
var G__24529 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24528,G__24529) : f.call(null,G__24528,G__24529));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__24530 = y;
var G__24531 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24530,G__24531) : f.call(null,G__24530,G__24531));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__24537 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__24537) : cljs.core.to_array.call(null,G__24537));
})();
var G__24538_24540 = a;
var G__24539_24541 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__24538_24540,G__24539_24541);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__24547 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__24547) : keyfn.call(null,G__24547));
})(),(function (){var G__24548 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__24548) : keyfn.call(null,G__24548));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__24554 = f;
var G__24555 = cljs.core.first(s);
var G__24556 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__24554,G__24555,G__24556) : cljs.core.reduce.call(null,G__24554,G__24555,G__24556));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__24557 = val__$1;
var G__24558 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24557,G__24558) : f.call(null,G__24557,G__24558));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24559 = nval;
var G__24560 = cljs.core.next(coll__$1);
val__$1 = G__24559;
coll__$1 = G__24560;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__24564 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__24564) : cljs.core.to_array.call(null,G__24564));
})();
var G__24565_24567 = a;
goog.array.shuffle(G__24565_24567);

var G__24566 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__24566) : cljs.core.vec.call(null,G__24566));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__24570 = coll;
if(G__24570){
var bit__16332__auto__ = (G__24570.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__16332__auto__) || (G__24570.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__24571 = coll;
if(G__24571){
var bit__16332__auto__ = (G__24571.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__16332__auto__) || (G__24571.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__24580 = null;
var G__24580__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__24580__1 = (function (x){
var G__24577 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__24577) : cf.call(null,G__24577));
});
var G__24580__2 = (function (x,y){
var G__24578 = x;
var G__24579 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24578,G__24579) : f.call(null,G__24578,G__24579));
});
G__24580 = function(x,y){
switch(arguments.length){
case 0:
return G__24580__0.call(this);
case 1:
return G__24580__1.call(this,x);
case 2:
return G__24580__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24580.cljs$core$IFn$_invoke$arity$0 = G__24580__0;
G__24580.cljs$core$IFn$_invoke$arity$1 = G__24580__1;
G__24580.cljs$core$IFn$_invoke$arity$2 = G__24580__2;
return G__24580;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__24587 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__24587) : xform.call(null,G__24587));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__24588 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__24588) : f__$1.call(null,G__24588));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__24589__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__24589 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24590__i = 0, G__24590__a = new Array(arguments.length -  2);
while (G__24590__i < G__24590__a.length) {G__24590__a[G__24590__i] = arguments[G__24590__i + 2]; ++G__24590__i;}
  more = new cljs.core.IndexedSeq(G__24590__a,0);
} 
return G__24589__delegate.call(this,x,y,more);};
G__24589.cljs$lang$maxFixedArity = 2;
G__24589.cljs$lang$applyTo = (function (arglist__24591){
var x = cljs.core.first(arglist__24591);
arglist__24591 = cljs.core.next(arglist__24591);
var y = cljs.core.first(arglist__24591);
var more = cljs.core.rest(arglist__24591);
return G__24589__delegate(x,y,more);
});
G__24589.cljs$core$IFn$_invoke$arity$variadic = G__24589__delegate;
return G__24589;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__24592 = null;
if (arguments.length > 2) {
var G__24593__i = 0, G__24593__a = new Array(arguments.length -  2);
while (G__24593__i < G__24593__a.length) {G__24593__a[G__24593__i] = arguments[G__24593__i + 2]; ++G__24593__i;}
G__24592 = new cljs.core.IndexedSeq(G__24593__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24592);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__24594__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__24594 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24595__i = 0, G__24595__a = new Array(arguments.length -  2);
while (G__24595__i < G__24595__a.length) {G__24595__a[G__24595__i] = arguments[G__24595__i + 2]; ++G__24595__i;}
  more = new cljs.core.IndexedSeq(G__24595__a,0);
} 
return G__24594__delegate.call(this,x,y,more);};
G__24594.cljs$lang$maxFixedArity = 2;
G__24594.cljs$lang$applyTo = (function (arglist__24596){
var x = cljs.core.first(arglist__24596);
arglist__24596 = cljs.core.next(arglist__24596);
var y = cljs.core.first(arglist__24596);
var more = cljs.core.rest(arglist__24596);
return G__24594__delegate(x,y,more);
});
G__24594.cljs$core$IFn$_invoke$arity$variadic = G__24594__delegate;
return G__24594;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__24597 = null;
if (arguments.length > 2) {
var G__24598__i = 0, G__24598__a = new Array(arguments.length -  2);
while (G__24598__i < G__24598__a.length) {G__24598__a[G__24598__i] = arguments[G__24598__i + 2]; ++G__24598__i;}
G__24597 = new cljs.core.IndexedSeq(G__24598__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24597);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__24599__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__24599 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24600__i = 0, G__24600__a = new Array(arguments.length -  2);
while (G__24600__i < G__24600__a.length) {G__24600__a[G__24600__i] = arguments[G__24600__i + 2]; ++G__24600__i;}
  more = new cljs.core.IndexedSeq(G__24600__a,0);
} 
return G__24599__delegate.call(this,x,y,more);};
G__24599.cljs$lang$maxFixedArity = 2;
G__24599.cljs$lang$applyTo = (function (arglist__24601){
var x = cljs.core.first(arglist__24601);
arglist__24601 = cljs.core.next(arglist__24601);
var y = cljs.core.first(arglist__24601);
var more = cljs.core.rest(arglist__24601);
return G__24599__delegate(x,y,more);
});
G__24599.cljs$core$IFn$_invoke$arity$variadic = G__24599__delegate;
return G__24599;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__24602 = null;
if (arguments.length > 2) {
var G__24603__i = 0, G__24603__a = new Array(arguments.length -  2);
while (G__24603__i < G__24603__a.length) {G__24603__a[G__24603__i] = arguments[G__24603__i + 2]; ++G__24603__i;}
G__24602 = new cljs.core.IndexedSeq(G__24603__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24602);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__24608__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__24608 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24609__i = 0, G__24609__a = new Array(arguments.length -  2);
while (G__24609__i < G__24609__a.length) {G__24609__a[G__24609__i] = arguments[G__24609__i + 2]; ++G__24609__i;}
  more = new cljs.core.IndexedSeq(G__24609__a,0);
} 
return G__24608__delegate.call(this,x,y,more);};
G__24608.cljs$lang$maxFixedArity = 2;
G__24608.cljs$lang$applyTo = (function (arglist__24610){
var x = cljs.core.first(arglist__24610);
arglist__24610 = cljs.core.next(arglist__24610);
var y = cljs.core.first(arglist__24610);
var more = cljs.core.rest(arglist__24610);
return G__24608__delegate(x,y,more);
});
G__24608.cljs$core$IFn$_invoke$arity$variadic = G__24608__delegate;
return G__24608;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__24611 = null;
if (arguments.length > 2) {
var G__24612__i = 0, G__24612__a = new Array(arguments.length -  2);
while (G__24612__i < G__24612__a.length) {G__24612__a[G__24612__i] = arguments[G__24612__i + 2]; ++G__24612__i;}
G__24611 = new cljs.core.IndexedSeq(G__24612__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24611);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__24613__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__24614 = y;
var G__24615 = cljs.core.first(more);
var G__24616 = cljs.core.next(more);
x = G__24614;
y = G__24615;
more = G__24616;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24613 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24617__i = 0, G__24617__a = new Array(arguments.length -  2);
while (G__24617__i < G__24617__a.length) {G__24617__a[G__24617__i] = arguments[G__24617__i + 2]; ++G__24617__i;}
  more = new cljs.core.IndexedSeq(G__24617__a,0);
} 
return G__24613__delegate.call(this,x,y,more);};
G__24613.cljs$lang$maxFixedArity = 2;
G__24613.cljs$lang$applyTo = (function (arglist__24618){
var x = cljs.core.first(arglist__24618);
arglist__24618 = cljs.core.next(arglist__24618);
var y = cljs.core.first(arglist__24618);
var more = cljs.core.rest(arglist__24618);
return G__24613__delegate(x,y,more);
});
G__24613.cljs$core$IFn$_invoke$arity$variadic = G__24613__delegate;
return G__24613;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__24619 = null;
if (arguments.length > 2) {
var G__24620__i = 0, G__24620__a = new Array(arguments.length -  2);
while (G__24620__i < G__24620__a.length) {G__24620__a[G__24620__i] = arguments[G__24620__i + 2]; ++G__24620__i;}
G__24619 = new cljs.core.IndexedSeq(G__24620__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24619);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__24621__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__24622 = y;
var G__24623 = cljs.core.first(more);
var G__24624 = cljs.core.next(more);
x = G__24622;
y = G__24623;
more = G__24624;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24621 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24625__i = 0, G__24625__a = new Array(arguments.length -  2);
while (G__24625__i < G__24625__a.length) {G__24625__a[G__24625__i] = arguments[G__24625__i + 2]; ++G__24625__i;}
  more = new cljs.core.IndexedSeq(G__24625__a,0);
} 
return G__24621__delegate.call(this,x,y,more);};
G__24621.cljs$lang$maxFixedArity = 2;
G__24621.cljs$lang$applyTo = (function (arglist__24626){
var x = cljs.core.first(arglist__24626);
arglist__24626 = cljs.core.next(arglist__24626);
var y = cljs.core.first(arglist__24626);
var more = cljs.core.rest(arglist__24626);
return G__24621__delegate(x,y,more);
});
G__24621.cljs$core$IFn$_invoke$arity$variadic = G__24621__delegate;
return G__24621;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__24627 = null;
if (arguments.length > 2) {
var G__24628__i = 0, G__24628__a = new Array(arguments.length -  2);
while (G__24628__i < G__24628__a.length) {G__24628__a[G__24628__i] = arguments[G__24628__i + 2]; ++G__24628__i;}
G__24627 = new cljs.core.IndexedSeq(G__24628__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24627);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__24629__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__24630 = y;
var G__24631 = cljs.core.first(more);
var G__24632 = cljs.core.next(more);
x = G__24630;
y = G__24631;
more = G__24632;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24629 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24633__i = 0, G__24633__a = new Array(arguments.length -  2);
while (G__24633__i < G__24633__a.length) {G__24633__a[G__24633__i] = arguments[G__24633__i + 2]; ++G__24633__i;}
  more = new cljs.core.IndexedSeq(G__24633__a,0);
} 
return G__24629__delegate.call(this,x,y,more);};
G__24629.cljs$lang$maxFixedArity = 2;
G__24629.cljs$lang$applyTo = (function (arglist__24634){
var x = cljs.core.first(arglist__24634);
arglist__24634 = cljs.core.next(arglist__24634);
var y = cljs.core.first(arglist__24634);
var more = cljs.core.rest(arglist__24634);
return G__24629__delegate(x,y,more);
});
G__24629.cljs$core$IFn$_invoke$arity$variadic = G__24629__delegate;
return G__24629;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__24635 = null;
if (arguments.length > 2) {
var G__24636__i = 0, G__24636__a = new Array(arguments.length -  2);
while (G__24636__i < G__24636__a.length) {G__24636__a[G__24636__i] = arguments[G__24636__i + 2]; ++G__24636__i;}
G__24635 = new cljs.core.IndexedSeq(G__24636__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24635);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__24637__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__24638 = y;
var G__24639 = cljs.core.first(more);
var G__24640 = cljs.core.next(more);
x = G__24638;
y = G__24639;
more = G__24640;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24637 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24641__i = 0, G__24641__a = new Array(arguments.length -  2);
while (G__24641__i < G__24641__a.length) {G__24641__a[G__24641__i] = arguments[G__24641__i + 2]; ++G__24641__i;}
  more = new cljs.core.IndexedSeq(G__24641__a,0);
} 
return G__24637__delegate.call(this,x,y,more);};
G__24637.cljs$lang$maxFixedArity = 2;
G__24637.cljs$lang$applyTo = (function (arglist__24642){
var x = cljs.core.first(arglist__24642);
arglist__24642 = cljs.core.next(arglist__24642);
var y = cljs.core.first(arglist__24642);
var more = cljs.core.rest(arglist__24642);
return G__24637__delegate(x,y,more);
});
G__24637.cljs$core$IFn$_invoke$arity$variadic = G__24637__delegate;
return G__24637;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__24643 = null;
if (arguments.length > 2) {
var G__24644__i = 0, G__24644__a = new Array(arguments.length -  2);
while (G__24644__i < G__24644__a.length) {G__24644__a[G__24644__i] = arguments[G__24644__i + 2]; ++G__24644__i;}
G__24643 = new cljs.core.IndexedSeq(G__24644__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24643);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__15975__auto__ = x;
var y__15976__auto__ = y;
return ((x__15975__auto__ > y__15976__auto__) ? x__15975__auto__ : y__15976__auto__);
});
var max__3 = (function() { 
var G__24645__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__15975__auto__ = x;
var y__15976__auto__ = y;
return ((x__15975__auto__ > y__15976__auto__) ? x__15975__auto__ : y__15976__auto__);
})(),more);
};
var G__24645 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24646__i = 0, G__24646__a = new Array(arguments.length -  2);
while (G__24646__i < G__24646__a.length) {G__24646__a[G__24646__i] = arguments[G__24646__i + 2]; ++G__24646__i;}
  more = new cljs.core.IndexedSeq(G__24646__a,0);
} 
return G__24645__delegate.call(this,x,y,more);};
G__24645.cljs$lang$maxFixedArity = 2;
G__24645.cljs$lang$applyTo = (function (arglist__24647){
var x = cljs.core.first(arglist__24647);
arglist__24647 = cljs.core.next(arglist__24647);
var y = cljs.core.first(arglist__24647);
var more = cljs.core.rest(arglist__24647);
return G__24645__delegate(x,y,more);
});
G__24645.cljs$core$IFn$_invoke$arity$variadic = G__24645__delegate;
return G__24645;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__24648 = null;
if (arguments.length > 2) {
var G__24649__i = 0, G__24649__a = new Array(arguments.length -  2);
while (G__24649__i < G__24649__a.length) {G__24649__a[G__24649__i] = arguments[G__24649__i + 2]; ++G__24649__i;}
G__24648 = new cljs.core.IndexedSeq(G__24649__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24648);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__15982__auto__ = x;
var y__15983__auto__ = y;
return ((x__15982__auto__ < y__15983__auto__) ? x__15982__auto__ : y__15983__auto__);
});
var min__3 = (function() { 
var G__24650__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__15982__auto__ = x;
var y__15983__auto__ = y;
return ((x__15982__auto__ < y__15983__auto__) ? x__15982__auto__ : y__15983__auto__);
})(),more);
};
var G__24650 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24651__i = 0, G__24651__a = new Array(arguments.length -  2);
while (G__24651__i < G__24651__a.length) {G__24651__a[G__24651__i] = arguments[G__24651__i + 2]; ++G__24651__i;}
  more = new cljs.core.IndexedSeq(G__24651__a,0);
} 
return G__24650__delegate.call(this,x,y,more);};
G__24650.cljs$lang$maxFixedArity = 2;
G__24650.cljs$lang$applyTo = (function (arglist__24652){
var x = cljs.core.first(arglist__24652);
arglist__24652 = cljs.core.next(arglist__24652);
var y = cljs.core.first(arglist__24652);
var more = cljs.core.rest(arglist__24652);
return G__24650__delegate(x,y,more);
});
G__24650.cljs$core$IFn$_invoke$arity$variadic = G__24650__delegate;
return G__24650;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__24653 = null;
if (arguments.length > 2) {
var G__24654__i = 0, G__24654__a = new Array(arguments.length -  2);
while (G__24654__i < G__24654__a.length) {G__24654__a[G__24654__i] = arguments[G__24654__i + 2]; ++G__24654__i;}
G__24653 = new cljs.core.IndexedSeq(G__24654__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24653);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__24655__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__24655 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24656__i = 0, G__24656__a = new Array(arguments.length -  2);
while (G__24656__i < G__24656__a.length) {G__24656__a[G__24656__i] = arguments[G__24656__i + 2]; ++G__24656__i;}
  more = new cljs.core.IndexedSeq(G__24656__a,0);
} 
return G__24655__delegate.call(this,x,y,more);};
G__24655.cljs$lang$maxFixedArity = 2;
G__24655.cljs$lang$applyTo = (function (arglist__24657){
var x = cljs.core.first(arglist__24657);
arglist__24657 = cljs.core.next(arglist__24657);
var y = cljs.core.first(arglist__24657);
var more = cljs.core.rest(arglist__24657);
return G__24655__delegate(x,y,more);
});
G__24655.cljs$core$IFn$_invoke$arity$variadic = G__24655__delegate;
return G__24655;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__24658 = null;
if (arguments.length > 2) {
var G__24659__i = 0, G__24659__a = new Array(arguments.length -  2);
while (G__24659__i < G__24659__a.length) {G__24659__a[G__24659__i] = arguments[G__24659__i + 2]; ++G__24659__i;}
G__24658 = new cljs.core.IndexedSeq(G__24659__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24658);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__24660__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__24660 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24661__i = 0, G__24661__a = new Array(arguments.length -  2);
while (G__24661__i < G__24661__a.length) {G__24661__a[G__24661__i] = arguments[G__24661__i + 2]; ++G__24661__i;}
  more = new cljs.core.IndexedSeq(G__24661__a,0);
} 
return G__24660__delegate.call(this,x,y,more);};
G__24660.cljs$lang$maxFixedArity = 2;
G__24660.cljs$lang$applyTo = (function (arglist__24662){
var x = cljs.core.first(arglist__24662);
arglist__24662 = cljs.core.next(arglist__24662);
var y = cljs.core.first(arglist__24662);
var more = cljs.core.rest(arglist__24662);
return G__24660__delegate(x,y,more);
});
G__24660.cljs$core$IFn$_invoke$arity$variadic = G__24660__delegate;
return G__24660;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__24663 = null;
if (arguments.length > 2) {
var G__24664__i = 0, G__24664__a = new Array(arguments.length -  2);
while (G__24664__i < G__24664__a.length) {G__24664__a[G__24664__i] = arguments[G__24664__i + 2]; ++G__24664__i;}
G__24663 = new cljs.core.IndexedSeq(G__24664__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24663);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__24669__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__24669 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24670__i = 0, G__24670__a = new Array(arguments.length -  2);
while (G__24670__i < G__24670__a.length) {G__24670__a[G__24670__i] = arguments[G__24670__i + 2]; ++G__24670__i;}
  more = new cljs.core.IndexedSeq(G__24670__a,0);
} 
return G__24669__delegate.call(this,x,y,more);};
G__24669.cljs$lang$maxFixedArity = 2;
G__24669.cljs$lang$applyTo = (function (arglist__24671){
var x = cljs.core.first(arglist__24671);
arglist__24671 = cljs.core.next(arglist__24671);
var y = cljs.core.first(arglist__24671);
var more = cljs.core.rest(arglist__24671);
return G__24669__delegate(x,y,more);
});
G__24669.cljs$core$IFn$_invoke$arity$variadic = G__24669__delegate;
return G__24669;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__24672 = null;
if (arguments.length > 2) {
var G__24673__i = 0, G__24673__a = new Array(arguments.length -  2);
while (G__24673__i < G__24673__a.length) {G__24673__a[G__24673__i] = arguments[G__24673__i + 2]; ++G__24673__i;}
G__24672 = new cljs.core.IndexedSeq(G__24673__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24672);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__24674__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__24674 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24675__i = 0, G__24675__a = new Array(arguments.length -  2);
while (G__24675__i < G__24675__a.length) {G__24675__a[G__24675__i] = arguments[G__24675__i + 2]; ++G__24675__i;}
  more = new cljs.core.IndexedSeq(G__24675__a,0);
} 
return G__24674__delegate.call(this,x,y,more);};
G__24674.cljs$lang$maxFixedArity = 2;
G__24674.cljs$lang$applyTo = (function (arglist__24676){
var x = cljs.core.first(arglist__24676);
arglist__24676 = cljs.core.next(arglist__24676);
var y = cljs.core.first(arglist__24676);
var more = cljs.core.rest(arglist__24676);
return G__24674__delegate(x,y,more);
});
G__24674.cljs$core$IFn$_invoke$arity$variadic = G__24674__delegate;
return G__24674;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__24677 = null;
if (arguments.length > 2) {
var G__24678__i = 0, G__24678__a = new Array(arguments.length -  2);
while (G__24678__i < G__24678__a.length) {G__24678__a[G__24678__i] = arguments[G__24678__i + 2]; ++G__24678__i;}
G__24677 = new cljs.core.IndexedSeq(G__24678__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24677);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__24679__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__24679 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24680__i = 0, G__24680__a = new Array(arguments.length -  2);
while (G__24680__i < G__24680__a.length) {G__24680__a[G__24680__i] = arguments[G__24680__i + 2]; ++G__24680__i;}
  more = new cljs.core.IndexedSeq(G__24680__a,0);
} 
return G__24679__delegate.call(this,x,y,more);};
G__24679.cljs$lang$maxFixedArity = 2;
G__24679.cljs$lang$applyTo = (function (arglist__24681){
var x = cljs.core.first(arglist__24681);
arglist__24681 = cljs.core.next(arglist__24681);
var y = cljs.core.first(arglist__24681);
var more = cljs.core.rest(arglist__24681);
return G__24679__delegate(x,y,more);
});
G__24679.cljs$core$IFn$_invoke$arity$variadic = G__24679__delegate;
return G__24679;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__24682 = null;
if (arguments.length > 2) {
var G__24683__i = 0, G__24683__a = new Array(arguments.length -  2);
while (G__24683__i < G__24683__a.length) {G__24683__a[G__24683__i] = arguments[G__24683__i + 2]; ++G__24683__i;}
G__24682 = new cljs.core.IndexedSeq(G__24683__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24682);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__24686 = x;
var G__24687 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__24686,G__24687) : cljs.core.mod.call(null,G__24686,G__24687));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__24688__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__24688 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24689__i = 0, G__24689__a = new Array(arguments.length -  2);
while (G__24689__i < G__24689__a.length) {G__24689__a[G__24689__i] = arguments[G__24689__i + 2]; ++G__24689__i;}
  more = new cljs.core.IndexedSeq(G__24689__a,0);
} 
return G__24688__delegate.call(this,x,y,more);};
G__24688.cljs$lang$maxFixedArity = 2;
G__24688.cljs$lang$applyTo = (function (arglist__24690){
var x = cljs.core.first(arglist__24690);
arglist__24690 = cljs.core.next(arglist__24690);
var y = cljs.core.first(arglist__24690);
var more = cljs.core.rest(arglist__24690);
return G__24688__delegate(x,y,more);
});
G__24688.cljs$core$IFn$_invoke$arity$variadic = G__24688__delegate;
return G__24688;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__24691 = null;
if (arguments.length > 2) {
var G__24692__i = 0, G__24692__a = new Array(arguments.length -  2);
while (G__24692__i < G__24692__a.length) {G__24692__a[G__24692__i] = arguments[G__24692__i + 2]; ++G__24692__i;}
G__24691 = new cljs.core.IndexedSeq(G__24692__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24691);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__24693__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__24693 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24694__i = 0, G__24694__a = new Array(arguments.length -  2);
while (G__24694__i < G__24694__a.length) {G__24694__a[G__24694__i] = arguments[G__24694__i + 2]; ++G__24694__i;}
  more = new cljs.core.IndexedSeq(G__24694__a,0);
} 
return G__24693__delegate.call(this,x,y,more);};
G__24693.cljs$lang$maxFixedArity = 2;
G__24693.cljs$lang$applyTo = (function (arglist__24695){
var x = cljs.core.first(arglist__24695);
arglist__24695 = cljs.core.next(arglist__24695);
var y = cljs.core.first(arglist__24695);
var more = cljs.core.rest(arglist__24695);
return G__24693__delegate(x,y,more);
});
G__24693.cljs$core$IFn$_invoke$arity$variadic = G__24693__delegate;
return G__24693;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__24696 = null;
if (arguments.length > 2) {
var G__24697__i = 0, G__24697__a = new Array(arguments.length -  2);
while (G__24697__i < G__24697__a.length) {G__24697__a[G__24697__i] = arguments[G__24697__i + 2]; ++G__24697__i;}
G__24696 = new cljs.core.IndexedSeq(G__24697__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24696);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__24700 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__24700) : Math.floor.call(null,G__24700));
} else {
var G__24701 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__24701) : Math.ceil.call(null,G__24701));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__24702__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__24702 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24703__i = 0, G__24703__a = new Array(arguments.length -  2);
while (G__24703__i < G__24703__a.length) {G__24703__a[G__24703__i] = arguments[G__24703__i + 2]; ++G__24703__i;}
  more = new cljs.core.IndexedSeq(G__24703__a,0);
} 
return G__24702__delegate.call(this,x,y,more);};
G__24702.cljs$lang$maxFixedArity = 2;
G__24702.cljs$lang$applyTo = (function (arglist__24704){
var x = cljs.core.first(arglist__24704);
arglist__24704 = cljs.core.next(arglist__24704);
var y = cljs.core.first(arglist__24704);
var more = cljs.core.rest(arglist__24704);
return G__24702__delegate(x,y,more);
});
G__24702.cljs$core$IFn$_invoke$arity$variadic = G__24702__delegate;
return G__24702;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__24705 = null;
if (arguments.length > 2) {
var G__24706__i = 0, G__24706__a = new Array(arguments.length -  2);
while (G__24706__i < G__24706__a.length) {G__24706__a[G__24706__i] = arguments[G__24706__i + 2]; ++G__24706__i;}
G__24705 = new cljs.core.IndexedSeq(G__24706__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24705);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__24707__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__24707 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24708__i = 0, G__24708__a = new Array(arguments.length -  2);
while (G__24708__i < G__24708__a.length) {G__24708__a[G__24708__i] = arguments[G__24708__i + 2]; ++G__24708__i;}
  more = new cljs.core.IndexedSeq(G__24708__a,0);
} 
return G__24707__delegate.call(this,x,y,more);};
G__24707.cljs$lang$maxFixedArity = 2;
G__24707.cljs$lang$applyTo = (function (arglist__24709){
var x = cljs.core.first(arglist__24709);
arglist__24709 = cljs.core.next(arglist__24709);
var y = cljs.core.first(arglist__24709);
var more = cljs.core.rest(arglist__24709);
return G__24707__delegate(x,y,more);
});
G__24707.cljs$core$IFn$_invoke$arity$variadic = G__24707__delegate;
return G__24707;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__24710 = null;
if (arguments.length > 2) {
var G__24711__i = 0, G__24711__a = new Array(arguments.length -  2);
while (G__24711__i < G__24711__a.length) {G__24711__a[G__24711__i] = arguments[G__24711__i + 2]; ++G__24711__i;}
G__24710 = new cljs.core.IndexedSeq(G__24711__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24710);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__24712__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__24712 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24713__i = 0, G__24713__a = new Array(arguments.length -  2);
while (G__24713__i < G__24713__a.length) {G__24713__a[G__24713__i] = arguments[G__24713__i + 2]; ++G__24713__i;}
  more = new cljs.core.IndexedSeq(G__24713__a,0);
} 
return G__24712__delegate.call(this,x,y,more);};
G__24712.cljs$lang$maxFixedArity = 2;
G__24712.cljs$lang$applyTo = (function (arglist__24714){
var x = cljs.core.first(arglist__24714);
arglist__24714 = cljs.core.next(arglist__24714);
var y = cljs.core.first(arglist__24714);
var more = cljs.core.rest(arglist__24714);
return G__24712__delegate(x,y,more);
});
G__24712.cljs$core$IFn$_invoke$arity$variadic = G__24712__delegate;
return G__24712;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__24715 = null;
if (arguments.length > 2) {
var G__24716__i = 0, G__24716__a = new Array(arguments.length -  2);
while (G__24716__i < G__24716__a.length) {G__24716__a[G__24716__i] = arguments[G__24716__i + 2]; ++G__24716__i;}
G__24715 = new cljs.core.IndexedSeq(G__24716__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24715);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__24717__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__24717 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24718__i = 0, G__24718__a = new Array(arguments.length -  2);
while (G__24718__i < G__24718__a.length) {G__24718__a[G__24718__i] = arguments[G__24718__i + 2]; ++G__24718__i;}
  more = new cljs.core.IndexedSeq(G__24718__a,0);
} 
return G__24717__delegate.call(this,x,y,more);};
G__24717.cljs$lang$maxFixedArity = 2;
G__24717.cljs$lang$applyTo = (function (arglist__24719){
var x = cljs.core.first(arglist__24719);
arglist__24719 = cljs.core.next(arglist__24719);
var y = cljs.core.first(arglist__24719);
var more = cljs.core.rest(arglist__24719);
return G__24717__delegate(x,y,more);
});
G__24717.cljs$core$IFn$_invoke$arity$variadic = G__24717__delegate;
return G__24717;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__24720 = null;
if (arguments.length > 2) {
var G__24721__i = 0, G__24721__a = new Array(arguments.length -  2);
while (G__24721__i < G__24721__a.length) {G__24721__a[G__24721__i] = arguments[G__24721__i + 2]; ++G__24721__i;}
G__24720 = new cljs.core.IndexedSeq(G__24721__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24720);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__24726__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__24727 = y;
var G__24728 = cljs.core.first(more);
var G__24729 = cljs.core.next(more);
x = G__24727;
y = G__24728;
more = G__24729;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24726 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24730__i = 0, G__24730__a = new Array(arguments.length -  2);
while (G__24730__i < G__24730__a.length) {G__24730__a[G__24730__i] = arguments[G__24730__i + 2]; ++G__24730__i;}
  more = new cljs.core.IndexedSeq(G__24730__a,0);
} 
return G__24726__delegate.call(this,x,y,more);};
G__24726.cljs$lang$maxFixedArity = 2;
G__24726.cljs$lang$applyTo = (function (arglist__24731){
var x = cljs.core.first(arglist__24731);
arglist__24731 = cljs.core.next(arglist__24731);
var y = cljs.core.first(arglist__24731);
var more = cljs.core.rest(arglist__24731);
return G__24726__delegate(x,y,more);
});
G__24726.cljs$core$IFn$_invoke$arity$variadic = G__24726__delegate;
return G__24726;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__24732 = null;
if (arguments.length > 2) {
var G__24733__i = 0, G__24733__a = new Array(arguments.length -  2);
while (G__24733__i < G__24733__a.length) {G__24733__a[G__24733__i] = arguments[G__24733__i + 2]; ++G__24733__i;}
G__24732 = new cljs.core.IndexedSeq(G__24733__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24732);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__24734 = (n__$1 - (1));
var G__24735 = cljs.core.next(xs);
n__$1 = G__24734;
xs = G__24735;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__24739 = x;
return goog.string.buildString(G__24739);
}
});
var str__2 = (function() { 
var G__24740__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__24741 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__24742 = cljs.core.next(more);
sb = G__24741;
more = G__24742;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__24740 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__24743__i = 0, G__24743__a = new Array(arguments.length -  1);
while (G__24743__i < G__24743__a.length) {G__24743__a[G__24743__i] = arguments[G__24743__i + 1]; ++G__24743__i;}
  ys = new cljs.core.IndexedSeq(G__24743__a,0);
} 
return G__24740__delegate.call(this,x,ys);};
G__24740.cljs$lang$maxFixedArity = 1;
G__24740.cljs$lang$applyTo = (function (arglist__24744){
var x = cljs.core.first(arglist__24744);
var ys = cljs.core.rest(arglist__24744);
return G__24740__delegate(x,ys);
});
G__24740.cljs$core$IFn$_invoke$arity$variadic = G__24740__delegate;
return G__24740;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__24745 = null;
if (arguments.length > 1) {
var G__24746__i = 0, G__24746__a = new Array(arguments.length -  1);
while (G__24746__i < G__24746__a.length) {G__24746__a[G__24746__i] = arguments[G__24746__i + 1]; ++G__24746__i;}
G__24745 = new cljs.core.IndexedSeq(G__24746__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__24745);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__24747 = cljs.core.next(xs);
var G__24748 = cljs.core.next(ys);
xs = G__24747;
ys = G__24748;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__24749 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__24750 = cljs.core.next(s);
res = G__24749;
s = G__24750;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__24755 = ((h + (cljs.core.hash((function (){var G__24753 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__24753) : cljs.core.key.call(null,G__24753));
})()) ^ cljs.core.hash((function (){var G__24754 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__24754) : cljs.core.val.call(null,G__24754));
})()))) % (4503599627370496));
var G__24756 = cljs.core.next(s);
h = G__24755;
s = G__24756;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__24757 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__24758 = cljs.core.next(s__$1);
h = G__24757;
s__$1 = G__24758;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__24769_24779 = cljs.core.seq(fn_map);
var chunk__24770_24780 = null;
var count__24771_24781 = (0);
var i__24772_24782 = (0);
while(true){
if((i__24772_24782 < count__24771_24781)){
var vec__24773_24783 = chunk__24770_24780.cljs$core$IIndexed$_nth$arity$2(null,i__24772_24782);
var key_name_24784 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24773_24783,(0),null);
var f_24785 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24773_24783,(1),null);
var str_name_24786 = (function (){var G__24774 = key_name_24784;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__24774) : cljs.core.name.call(null,G__24774));
})();
(obj[str_name_24786] = f_24785);

var G__24787 = seq__24769_24779;
var G__24788 = chunk__24770_24780;
var G__24789 = count__24771_24781;
var G__24790 = (i__24772_24782 + (1));
seq__24769_24779 = G__24787;
chunk__24770_24780 = G__24788;
count__24771_24781 = G__24789;
i__24772_24782 = G__24790;
continue;
} else {
var temp__4126__auto___24791 = cljs.core.seq(seq__24769_24779);
if(temp__4126__auto___24791){
var seq__24769_24792__$1 = temp__4126__auto___24791;
if(cljs.core.chunked_seq_QMARK_(seq__24769_24792__$1)){
var c__16445__auto___24793 = (function (){var G__24775 = seq__24769_24792__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__24775) : cljs.core.chunk_first.call(null,G__24775));
})();
var G__24794 = (function (){var G__24776 = seq__24769_24792__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__24776) : cljs.core.chunk_rest.call(null,G__24776));
})();
var G__24795 = c__16445__auto___24793;
var G__24796 = cljs.core.count(c__16445__auto___24793);
var G__24797 = (0);
seq__24769_24779 = G__24794;
chunk__24770_24780 = G__24795;
count__24771_24781 = G__24796;
i__24772_24782 = G__24797;
continue;
} else {
var vec__24777_24798 = cljs.core.first(seq__24769_24792__$1);
var key_name_24799 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24777_24798,(0),null);
var f_24800 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24777_24798,(1),null);
var str_name_24801 = (function (){var G__24778 = key_name_24799;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__24778) : cljs.core.name.call(null,G__24778));
})();
(obj[str_name_24801] = f_24800);

var G__24802 = cljs.core.next(seq__24769_24792__$1);
var G__24803 = null;
var G__24804 = (0);
var G__24805 = (0);
seq__24769_24779 = G__24802;
chunk__24770_24780 = G__24803;
count__24771_24781 = G__24804;
i__24772_24782 = G__24805;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__24807 = coll;
if(G__24807){
var bit__16339__auto__ = (G__24807.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__16339__auto__) || (G__24807.cljs$core$IReversible$)){
return true;
} else {
if((!G__24807.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__24807);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__24807);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__24808 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__24808;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__24809 = (i - (1));
var G__24810 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__24809;
r = G__24810;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__24811__i = 0, G__24811__a = new Array(arguments.length -  0);
while (G__24811__i < G__24811__a.length) {G__24811__a[G__24811__i] = arguments[G__24811__i + 0]; ++G__24811__i;}
  xs = new cljs.core.IndexedSeq(G__24811__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__24812){
var xs = cljs.core.seq(arglist__24812);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__15658__auto__ = (coll == null);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var G__24816 = coll;
if(G__24816){
var bit__16332__auto__ = (G__24816.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16332__auto__) || (G__24816.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__24818 = x;
if(G__24818){
var bit__16339__auto__ = (G__24818.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__16339__auto__) || (G__24818.cljs$core$IList$)){
return true;
} else {
if((!G__24818.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__24818);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__24818);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__15646__auto__ = cljs.core.not(a.ns);
if(and__15646__auto__){
return b.ns;
} else {
return and__15646__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__24825 = a.ns;
var G__24826 = b.ns;
return goog.array.defaultCompare(G__24825,G__24826);
})();
if(((0) === nsc)){
var G__24827 = a.name;
var G__24828 = b.name;
return goog.array.defaultCompare(G__24827,G__24828);
} else {
return nsc;
}
}
} else {
var G__24829 = a.name;
var G__24830 = b.name;
return goog.array.defaultCompare(G__24829,G__24830);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__16079__auto__ = self__._hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__24832 = null;
var G__24832__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__24832__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__24832 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__24832__2.call(this,self__,coll);
case 3:
return G__24832__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24832.cljs$core$IFn$_invoke$arity$2 = G__24832__2;
G__24832.cljs$core$IFn$_invoke$arity$3 = G__24832__3;
return G__24832;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args24831){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24831)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__24834 = x;
if(G__24834){
var bit__16332__auto__ = (G__24834.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__16332__auto__) || (G__24834.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__24836 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__24836) : cljs.core.name.call(null,G__24836));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__24837 = ls.sval();
ls = G__24837;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__24839 = s;
if(G__24839){
var bit__16332__auto__ = (G__24839.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__16332__auto__) || (G__24839.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__24840 = cljs.core.next(s__$1);
s__$1 = G__24840;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_24841 = (0);
var xs_24842 = cljs.core.seq(coll);
while(true){
if(xs_24842){
(ret[i_24841] = cljs.core.to_array(cljs.core.first(xs_24842)));

var G__24843 = (i_24841 + (1));
var G__24844 = cljs.core.next(xs_24842);
i_24841 = G__24843;
xs_24842 = G__24844;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__24847 = (i + (1));
var G__24848 = cljs.core.next(s__$1);
i = G__24847;
s__$1 = G__24848;
continue;
} else {
return a;
}
break;
}
} else {
var n__16545__auto___24849 = size;
var i_24850 = (0);
while(true){
if((i_24850 < n__16545__auto___24849)){
(a[i_24850] = init_val_or_seq);

var G__24851 = (i_24850 + (1));
i_24850 = G__24851;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__24854 = (i + (1));
var G__24855 = cljs.core.next(s__$1);
i = G__24854;
s__$1 = G__24855;
continue;
} else {
return a;
}
break;
}
} else {
var n__16545__auto___24856 = size;
var i_24857 = (0);
while(true){
if((i_24857 < n__16545__auto___24856)){
(a[i_24857] = init_val_or_seq);

var G__24858 = (i_24857 + (1));
i_24857 = G__24858;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__24861 = (i + (1));
var G__24862 = cljs.core.next(s__$1);
i = G__24861;
s__$1 = G__24862;
continue;
} else {
return a;
}
break;
}
} else {
var n__16545__auto___24863 = size;
var i_24864 = (0);
while(true){
if((i_24864 < n__16545__auto___24863)){
(a[i_24864] = init_val_or_seq);

var G__24865 = (i_24864 + (1));
i_24864 = G__24865;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__24868 = (i + (1));
var G__24869 = cljs.core.next(s__$1);
i = G__24868;
s__$1 = G__24869;
continue;
} else {
return a;
}
break;
}
} else {
var n__16545__auto___24870 = size;
var i_24871 = (0);
while(true){
if((i_24871 < n__16545__auto___24870)){
(a[i_24871] = init_val_or_seq);

var G__24872 = (i_24871 + (1));
i_24871 = G__24872;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__24873 = cljs.core.next(s__$1);
var G__24874 = (i - (1));
var G__24875 = (sum + (1));
s__$1 = G__24873;
i = G__24874;
sum = G__24875;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__24895__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__24895 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__24896__i = 0, G__24896__a = new Array(arguments.length -  2);
while (G__24896__i < G__24896__a.length) {G__24896__a[G__24896__i] = arguments[G__24896__i + 2]; ++G__24896__i;}
  zs = new cljs.core.IndexedSeq(G__24896__a,0);
} 
return G__24895__delegate.call(this,x,y,zs);};
G__24895.cljs$lang$maxFixedArity = 2;
G__24895.cljs$lang$applyTo = (function (arglist__24897){
var x = cljs.core.first(arglist__24897);
arglist__24897 = cljs.core.next(arglist__24897);
var y = cljs.core.first(arglist__24897);
var zs = cljs.core.rest(arglist__24897);
return G__24895__delegate(x,y,zs);
});
G__24895.cljs$core$IFn$_invoke$arity$variadic = G__24895__delegate;
return G__24895;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__24898 = null;
if (arguments.length > 2) {
var G__24899__i = 0, G__24899__a = new Array(arguments.length -  2);
while (G__24899__i < G__24899__a.length) {G__24899__a[G__24899__i] = arguments[G__24899__i + 2]; ++G__24899__i;}
G__24898 = new cljs.core.IndexedSeq(G__24899__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24898);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__24900__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__24900 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__24901__i = 0, G__24901__a = new Array(arguments.length -  4);
while (G__24901__i < G__24901__a.length) {G__24901__a[G__24901__i] = arguments[G__24901__i + 4]; ++G__24901__i;}
  more = new cljs.core.IndexedSeq(G__24901__a,0);
} 
return G__24900__delegate.call(this,a,b,c,d,more);};
G__24900.cljs$lang$maxFixedArity = 4;
G__24900.cljs$lang$applyTo = (function (arglist__24902){
var a = cljs.core.first(arglist__24902);
arglist__24902 = cljs.core.next(arglist__24902);
var b = cljs.core.first(arglist__24902);
arglist__24902 = cljs.core.next(arglist__24902);
var c = cljs.core.first(arglist__24902);
arglist__24902 = cljs.core.next(arglist__24902);
var d = cljs.core.first(arglist__24902);
var more = cljs.core.rest(arglist__24902);
return G__24900__delegate(a,b,c,d,more);
});
G__24900.cljs$core$IFn$_invoke$arity$variadic = G__24900__delegate;
return G__24900;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__24903 = null;
if (arguments.length > 4) {
var G__24904__i = 0, G__24904__a = new Array(arguments.length -  4);
while (G__24904__i < G__24904__a.length) {G__24904__a[G__24904__i] = arguments[G__24904__i + 4]; ++G__24904__i;}
G__24903 = new cljs.core.IndexedSeq(G__24904__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__24903);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__24905__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__24906 = ntcoll;
var G__24907 = cljs.core.first(vals);
var G__24908 = cljs.core.next(vals);
tcoll = G__24906;
val = G__24907;
vals = G__24908;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__24905 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__24909__i = 0, G__24909__a = new Array(arguments.length -  2);
while (G__24909__i < G__24909__a.length) {G__24909__a[G__24909__i] = arguments[G__24909__i + 2]; ++G__24909__i;}
  vals = new cljs.core.IndexedSeq(G__24909__a,0);
} 
return G__24905__delegate.call(this,tcoll,val,vals);};
G__24905.cljs$lang$maxFixedArity = 2;
G__24905.cljs$lang$applyTo = (function (arglist__24910){
var tcoll = cljs.core.first(arglist__24910);
arglist__24910 = cljs.core.next(arglist__24910);
var val = cljs.core.first(arglist__24910);
var vals = cljs.core.rest(arglist__24910);
return G__24905__delegate(tcoll,val,vals);
});
G__24905.cljs$core$IFn$_invoke$arity$variadic = G__24905__delegate;
return G__24905;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__24911 = null;
if (arguments.length > 2) {
var G__24912__i = 0, G__24912__a = new Array(arguments.length -  2);
while (G__24912__i < G__24912__a.length) {G__24912__a[G__24912__i] = arguments[G__24912__i + 2]; ++G__24912__i;}
G__24911 = new cljs.core.IndexedSeq(G__24912__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__24911);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__24913__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__24914 = ntcoll;
var G__24915 = cljs.core.first(kvs);
var G__24916 = cljs.core.second(kvs);
var G__24917 = cljs.core.nnext(kvs);
tcoll = G__24914;
key = G__24915;
val = G__24916;
kvs = G__24917;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__24913 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__24918__i = 0, G__24918__a = new Array(arguments.length -  3);
while (G__24918__i < G__24918__a.length) {G__24918__a[G__24918__i] = arguments[G__24918__i + 3]; ++G__24918__i;}
  kvs = new cljs.core.IndexedSeq(G__24918__a,0);
} 
return G__24913__delegate.call(this,tcoll,key,val,kvs);};
G__24913.cljs$lang$maxFixedArity = 3;
G__24913.cljs$lang$applyTo = (function (arglist__24919){
var tcoll = cljs.core.first(arglist__24919);
arglist__24919 = cljs.core.next(arglist__24919);
var key = cljs.core.first(arglist__24919);
arglist__24919 = cljs.core.next(arglist__24919);
var val = cljs.core.first(arglist__24919);
var kvs = cljs.core.rest(arglist__24919);
return G__24913__delegate(tcoll,key,val,kvs);
});
G__24913.cljs$core$IFn$_invoke$arity$variadic = G__24913__delegate;
return G__24913;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__24920 = null;
if (arguments.length > 3) {
var G__24921__i = 0, G__24921__a = new Array(arguments.length -  3);
while (G__24921__i < G__24921__a.length) {G__24921__a[G__24921__i] = arguments[G__24921__i + 3]; ++G__24921__i;}
G__24920 = new cljs.core.IndexedSeq(G__24921__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__24920);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__24922__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__24923 = ntcoll;
var G__24924 = cljs.core.first(ks);
var G__24925 = cljs.core.next(ks);
tcoll = G__24923;
key = G__24924;
ks = G__24925;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__24922 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__24926__i = 0, G__24926__a = new Array(arguments.length -  2);
while (G__24926__i < G__24926__a.length) {G__24926__a[G__24926__i] = arguments[G__24926__i + 2]; ++G__24926__i;}
  ks = new cljs.core.IndexedSeq(G__24926__a,0);
} 
return G__24922__delegate.call(this,tcoll,key,ks);};
G__24922.cljs$lang$maxFixedArity = 2;
G__24922.cljs$lang$applyTo = (function (arglist__24927){
var tcoll = cljs.core.first(arglist__24927);
arglist__24927 = cljs.core.next(arglist__24927);
var key = cljs.core.first(arglist__24927);
var ks = cljs.core.rest(arglist__24927);
return G__24922__delegate(tcoll,key,ks);
});
G__24922.cljs$core$IFn$_invoke$arity$variadic = G__24922__delegate;
return G__24922;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__24928 = null;
if (arguments.length > 2) {
var G__24929__i = 0, G__24929__a = new Array(arguments.length -  2);
while (G__24929__i < G__24929__a.length) {G__24929__a[G__24929__i] = arguments[G__24929__i + 2]; ++G__24929__i;}
G__24928 = new cljs.core.IndexedSeq(G__24929__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__24928);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__24930__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__24931 = ntcoll;
var G__24932 = cljs.core.first(vals);
var G__24933 = cljs.core.next(vals);
tcoll = G__24931;
val = G__24932;
vals = G__24933;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__24930 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__24934__i = 0, G__24934__a = new Array(arguments.length -  2);
while (G__24934__i < G__24934__a.length) {G__24934__a[G__24934__i] = arguments[G__24934__i + 2]; ++G__24934__i;}
  vals = new cljs.core.IndexedSeq(G__24934__a,0);
} 
return G__24930__delegate.call(this,tcoll,val,vals);};
G__24930.cljs$lang$maxFixedArity = 2;
G__24930.cljs$lang$applyTo = (function (arglist__24935){
var tcoll = cljs.core.first(arglist__24935);
arglist__24935 = cljs.core.next(arglist__24935);
var val = cljs.core.first(arglist__24935);
var vals = cljs.core.rest(arglist__24935);
return G__24930__delegate(tcoll,val,vals);
});
G__24930.cljs$core$IFn$_invoke$arity$variadic = G__24930__delegate;
return G__24930;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__24936 = null;
if (arguments.length > 2) {
var G__24937__i = 0, G__24937__a = new Array(arguments.length -  2);
while (G__24937__i < G__24937__a.length) {G__24937__a[G__24937__i] = arguments[G__24937__i + 2]; ++G__24937__i;}
G__24936 = new cljs.core.IndexedSeq(G__24937__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__24936);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a16589 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a16589);
} else {
var G__25148 = a16589;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25148) : f.call(null,G__25148));
}
} else {
var b16590 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a16589,b16590);
} else {
var G__25149 = a16589;
var G__25150 = b16590;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25149,G__25150) : f.call(null,G__25149,G__25150));
}
} else {
var c16591 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a16589,b16590,c16591);
} else {
var G__25151 = a16589;
var G__25152 = b16590;
var G__25153 = c16591;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25151,G__25152,G__25153) : f.call(null,G__25151,G__25152,G__25153));
}
} else {
var d16592 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a16589,b16590,c16591,d16592);
} else {
var G__25154 = a16589;
var G__25155 = b16590;
var G__25156 = c16591;
var G__25157 = d16592;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25154,G__25155,G__25156,G__25157) : f.call(null,G__25154,G__25155,G__25156,G__25157));
}
} else {
var e16593 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a16589,b16590,c16591,d16592,e16593);
} else {
var G__25158 = a16589;
var G__25159 = b16590;
var G__25160 = c16591;
var G__25161 = d16592;
var G__25162 = e16593;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__25158,G__25159,G__25160,G__25161,G__25162) : f.call(null,G__25158,G__25159,G__25160,G__25161,G__25162));
}
} else {
var f16594 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a16589,b16590,c16591,d16592,e16593,f16594);
} else {
var G__25163 = a16589;
var G__25164 = b16590;
var G__25165 = c16591;
var G__25166 = d16592;
var G__25167 = e16593;
var G__25168 = f16594;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__25163,G__25164,G__25165,G__25166,G__25167,G__25168) : f.call(null,G__25163,G__25164,G__25165,G__25166,G__25167,G__25168));
}
} else {
var g16595 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a16589,b16590,c16591,d16592,e16593,f16594,g16595);
} else {
var G__25169 = a16589;
var G__25170 = b16590;
var G__25171 = c16591;
var G__25172 = d16592;
var G__25173 = e16593;
var G__25174 = f16594;
var G__25175 = g16595;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__25169,G__25170,G__25171,G__25172,G__25173,G__25174,G__25175) : f.call(null,G__25169,G__25170,G__25171,G__25172,G__25173,G__25174,G__25175));
}
} else {
var h16596 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a16589,b16590,c16591,d16592,e16593,f16594,g16595,h16596);
} else {
var G__25176 = a16589;
var G__25177 = b16590;
var G__25178 = c16591;
var G__25179 = d16592;
var G__25180 = e16593;
var G__25181 = f16594;
var G__25182 = g16595;
var G__25183 = h16596;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__25176,G__25177,G__25178,G__25179,G__25180,G__25181,G__25182,G__25183) : f.call(null,G__25176,G__25177,G__25178,G__25179,G__25180,G__25181,G__25182,G__25183));
}
} else {
var i16597 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a16589,b16590,c16591,d16592,e16593,f16594,g16595,h16596,i16597);
} else {
var G__25184 = a16589;
var G__25185 = b16590;
var G__25186 = c16591;
var G__25187 = d16592;
var G__25188 = e16593;
var G__25189 = f16594;
var G__25190 = g16595;
var G__25191 = h16596;
var G__25192 = i16597;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__25184,G__25185,G__25186,G__25187,G__25188,G__25189,G__25190,G__25191,G__25192) : f.call(null,G__25184,G__25185,G__25186,G__25187,G__25188,G__25189,G__25190,G__25191,G__25192));
}
} else {
var j16598 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a16589,b16590,c16591,d16592,e16593,f16594,g16595,h16596,i16597,j16598);
} else {
var G__25193 = a16589;
var G__25194 = b16590;
var G__25195 = c16591;
var G__25196 = d16592;
var G__25197 = e16593;
var G__25198 = f16594;
var G__25199 = g16595;
var G__25200 = h16596;
var G__25201 = i16597;
var G__25202 = j16598;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__25193,G__25194,G__25195,G__25196,G__25197,G__25198,G__25199,G__25200,G__25201,G__25202) : f.call(null,G__25193,G__25194,G__25195,G__25196,G__25197,G__25198,G__25199,G__25200,G__25201,G__25202));
}
} else {
var k16599 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a16589,b16590,c16591,d16592,e16593,f16594,g16595,h16596,i16597,j16598,k16599);
} else {
var G__25203 = a16589;
var G__25204 = b16590;
var G__25205 = c16591;
var G__25206 = d16592;
var G__25207 = e16593;
var G__25208 = f16594;
var G__25209 = g16595;
var G__25210 = h16596;
var G__25211 = i16597;
var G__25212 = j16598;
var G__25213 = k16599;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__25203,G__25204,G__25205,G__25206,G__25207,G__25208,G__25209,G__25210,G__25211,G__25212,G__25213) : f.call(null,G__25203,G__25204,G__25205,G__25206,G__25207,G__25208,G__25209,G__25210,G__25211,G__25212,G__25213));
}
} else {
var l16600 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a16589,b16590,c16591,d16592,e16593,f16594,g16595,h16596,i16597,j16598,k16599,l16600);
} else {
var G__25214 = a16589;
var G__25215 = b16590;
var G__25216 = c16591;
var G__25217 = d16592;
var G__25218 = e16593;
var G__25219 = f16594;
var G__25220 = g16595;
var G__25221 = h16596;
var G__25222 = i16597;
var G__25223 = j16598;
var G__25224 = k16599;
var G__25225 = l16600;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__25214,G__25215,G__25216,G__25217,G__25218,G__25219,G__25220,G__25221,G__25222,G__25223,G__25224,G__25225) : f.call(null,G__25214,G__25215,G__25216,G__25217,G__25218,G__25219,G__25220,G__25221,G__25222,G__25223,G__25224,G__25225));
}
} else {
var m16601 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a16589,b16590,c16591,d16592,e16593,f16594,g16595,h16596,i16597,j16598,k16599,l16600,m16601);
} else {
var G__25226 = a16589;
var G__25227 = b16590;
var G__25228 = c16591;
var G__25229 = d16592;
var G__25230 = e16593;
var G__25231 = f16594;
var G__25232 = g16595;
var G__25233 = h16596;
var G__25234 = i16597;
var G__25235 = j16598;
var G__25236 = k16599;
var G__25237 = l16600;
var G__25238 = m16601;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__25226,G__25227,G__25228,G__25229,G__25230,G__25231,G__25232,G__25233,G__25234,G__25235,G__25236,G__25237,G__25238) : f.call(null,G__25226,G__25227,G__25228,G__25229,G__25230,G__25231,G__25232,G__25233,G__25234,G__25235,G__25236,G__25237,G__25238));
}
} else {
var n16602 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a16589,b16590,c16591,d16592,e16593,f16594,g16595,h16596,i16597,j16598,k16599,l16600,m16601,n16602);
} else {
var G__25239 = a16589;
var G__25240 = b16590;
var G__25241 = c16591;
var G__25242 = d16592;
var G__25243 = e16593;
var G__25244 = f16594;
var G__25245 = g16595;
var G__25246 = h16596;
var G__25247 = i16597;
var G__25248 = j16598;
var G__25249 = k16599;
var G__25250 = l16600;
var G__25251 = m16601;
var G__25252 = n16602;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__25239,G__25240,G__25241,G__25242,G__25243,G__25244,G__25245,G__25246,G__25247,G__25248,G__25249,G__25250,G__25251,G__25252) : f.call(null,G__25239,G__25240,G__25241,G__25242,G__25243,G__25244,G__25245,G__25246,G__25247,G__25248,G__25249,G__25250,G__25251,G__25252));
}
} else {
var o16603 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a16589,b16590,c16591,d16592,e16593,f16594,g16595,h16596,i16597,j16598,k16599,l16600,m16601,n16602,o16603);
} else {
var G__25253 = a16589;
var G__25254 = b16590;
var G__25255 = c16591;
var G__25256 = d16592;
var G__25257 = e16593;
var G__25258 = f16594;
var G__25259 = g16595;
var G__25260 = h16596;
var G__25261 = i16597;
var G__25262 = j16598;
var G__25263 = k16599;
var G__25264 = l16600;
var G__25265 = m16601;
var G__25266 = n16602;
var G__25267 = o16603;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__25253,G__25254,G__25255,G__25256,G__25257,G__25258,G__25259,G__25260,G__25261,G__25262,G__25263,G__25264,G__25265,G__25266,G__25267) : f.call(null,G__25253,G__25254,G__25255,G__25256,G__25257,G__25258,G__25259,G__25260,G__25261,G__25262,G__25263,G__25264,G__25265,G__25266,G__25267));
}
} else {
var p16604 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a16589,b16590,c16591,d16592,e16593,f16594,g16595,h16596,i16597,j16598,k16599,l16600,m16601,n16602,o16603,p16604);
} else {
var G__25268 = a16589;
var G__25269 = b16590;
var G__25270 = c16591;
var G__25271 = d16592;
var G__25272 = e16593;
var G__25273 = f16594;
var G__25274 = g16595;
var G__25275 = h16596;
var G__25276 = i16597;
var G__25277 = j16598;
var G__25278 = k16599;
var G__25279 = l16600;
var G__25280 = m16601;
var G__25281 = n16602;
var G__25282 = o16603;
var G__25283 = p16604;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__25268,G__25269,G__25270,G__25271,G__25272,G__25273,G__25274,G__25275,G__25276,G__25277,G__25278,G__25279,G__25280,G__25281,G__25282,G__25283) : f.call(null,G__25268,G__25269,G__25270,G__25271,G__25272,G__25273,G__25274,G__25275,G__25276,G__25277,G__25278,G__25279,G__25280,G__25281,G__25282,G__25283));
}
} else {
var q16605 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a16589,b16590,c16591,d16592,e16593,f16594,g16595,h16596,i16597,j16598,k16599,l16600,m16601,n16602,o16603,p16604,q16605);
} else {
var G__25284 = a16589;
var G__25285 = b16590;
var G__25286 = c16591;
var G__25287 = d16592;
var G__25288 = e16593;
var G__25289 = f16594;
var G__25290 = g16595;
var G__25291 = h16596;
var G__25292 = i16597;
var G__25293 = j16598;
var G__25294 = k16599;
var G__25295 = l16600;
var G__25296 = m16601;
var G__25297 = n16602;
var G__25298 = o16603;
var G__25299 = p16604;
var G__25300 = q16605;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__25284,G__25285,G__25286,G__25287,G__25288,G__25289,G__25290,G__25291,G__25292,G__25293,G__25294,G__25295,G__25296,G__25297,G__25298,G__25299,G__25300) : f.call(null,G__25284,G__25285,G__25286,G__25287,G__25288,G__25289,G__25290,G__25291,G__25292,G__25293,G__25294,G__25295,G__25296,G__25297,G__25298,G__25299,G__25300));
}
} else {
var r16606 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a16589,b16590,c16591,d16592,e16593,f16594,g16595,h16596,i16597,j16598,k16599,l16600,m16601,n16602,o16603,p16604,q16605,r16606);
} else {
var G__25301 = a16589;
var G__25302 = b16590;
var G__25303 = c16591;
var G__25304 = d16592;
var G__25305 = e16593;
var G__25306 = f16594;
var G__25307 = g16595;
var G__25308 = h16596;
var G__25309 = i16597;
var G__25310 = j16598;
var G__25311 = k16599;
var G__25312 = l16600;
var G__25313 = m16601;
var G__25314 = n16602;
var G__25315 = o16603;
var G__25316 = p16604;
var G__25317 = q16605;
var G__25318 = r16606;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__25301,G__25302,G__25303,G__25304,G__25305,G__25306,G__25307,G__25308,G__25309,G__25310,G__25311,G__25312,G__25313,G__25314,G__25315,G__25316,G__25317,G__25318) : f.call(null,G__25301,G__25302,G__25303,G__25304,G__25305,G__25306,G__25307,G__25308,G__25309,G__25310,G__25311,G__25312,G__25313,G__25314,G__25315,G__25316,G__25317,G__25318));
}
} else {
var s16607 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a16589,b16590,c16591,d16592,e16593,f16594,g16595,h16596,i16597,j16598,k16599,l16600,m16601,n16602,o16603,p16604,q16605,r16606,s16607);
} else {
var G__25319 = a16589;
var G__25320 = b16590;
var G__25321 = c16591;
var G__25322 = d16592;
var G__25323 = e16593;
var G__25324 = f16594;
var G__25325 = g16595;
var G__25326 = h16596;
var G__25327 = i16597;
var G__25328 = j16598;
var G__25329 = k16599;
var G__25330 = l16600;
var G__25331 = m16601;
var G__25332 = n16602;
var G__25333 = o16603;
var G__25334 = p16604;
var G__25335 = q16605;
var G__25336 = r16606;
var G__25337 = s16607;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__25319,G__25320,G__25321,G__25322,G__25323,G__25324,G__25325,G__25326,G__25327,G__25328,G__25329,G__25330,G__25331,G__25332,G__25333,G__25334,G__25335,G__25336,G__25337) : f.call(null,G__25319,G__25320,G__25321,G__25322,G__25323,G__25324,G__25325,G__25326,G__25327,G__25328,G__25329,G__25330,G__25331,G__25332,G__25333,G__25334,G__25335,G__25336,G__25337));
}
} else {
var t16608 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a16589,b16590,c16591,d16592,e16593,f16594,g16595,h16596,i16597,j16598,k16599,l16600,m16601,n16602,o16603,p16604,q16605,r16606,s16607,t16608);
} else {
var G__25338 = a16589;
var G__25339 = b16590;
var G__25340 = c16591;
var G__25341 = d16592;
var G__25342 = e16593;
var G__25343 = f16594;
var G__25344 = g16595;
var G__25345 = h16596;
var G__25346 = i16597;
var G__25347 = j16598;
var G__25348 = k16599;
var G__25349 = l16600;
var G__25350 = m16601;
var G__25351 = n16602;
var G__25352 = o16603;
var G__25353 = p16604;
var G__25354 = q16605;
var G__25355 = r16606;
var G__25356 = s16607;
var G__25357 = t16608;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__25338,G__25339,G__25340,G__25341,G__25342,G__25343,G__25344,G__25345,G__25346,G__25347,G__25348,G__25349,G__25350,G__25351,G__25352,G__25353,G__25354,G__25355,G__25356,G__25357) : f.call(null,G__25338,G__25339,G__25340,G__25341,G__25342,G__25343,G__25344,G__25345,G__25346,G__25347,G__25348,G__25349,G__25350,G__25351,G__25352,G__25353,G__25354,G__25355,G__25356,G__25357));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__25358__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__25358 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__25359__i = 0, G__25359__a = new Array(arguments.length -  5);
while (G__25359__i < G__25359__a.length) {G__25359__a[G__25359__i] = arguments[G__25359__i + 5]; ++G__25359__i;}
  args = new cljs.core.IndexedSeq(G__25359__a,0);
} 
return G__25358__delegate.call(this,f,a,b,c,d,args);};
G__25358.cljs$lang$maxFixedArity = 5;
G__25358.cljs$lang$applyTo = (function (arglist__25360){
var f = cljs.core.first(arglist__25360);
arglist__25360 = cljs.core.next(arglist__25360);
var a = cljs.core.first(arglist__25360);
arglist__25360 = cljs.core.next(arglist__25360);
var b = cljs.core.first(arglist__25360);
arglist__25360 = cljs.core.next(arglist__25360);
var c = cljs.core.first(arglist__25360);
arglist__25360 = cljs.core.next(arglist__25360);
var d = cljs.core.first(arglist__25360);
var args = cljs.core.rest(arglist__25360);
return G__25358__delegate(f,a,b,c,d,args);
});
G__25358.cljs$core$IFn$_invoke$arity$variadic = G__25358__delegate;
return G__25358;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__25361 = null;
if (arguments.length > 5) {
var G__25362__i = 0, G__25362__a = new Array(arguments.length -  5);
while (G__25362__i < G__25362__a.length) {G__25362__a[G__25362__i] = arguments[G__25362__i + 5]; ++G__25362__i;}
G__25361 = new cljs.core.IndexedSeq(G__25362__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__25361);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__25378 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25378) : f.call(null,G__25378));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__25379 = cljs.core.meta(obj);
var G__25380 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25379,G__25380) : f.call(null,G__25379,G__25380));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__25381 = cljs.core.meta(obj);
var G__25382 = a;
var G__25383 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25381,G__25382,G__25383) : f.call(null,G__25381,G__25382,G__25383));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__25384 = cljs.core.meta(obj);
var G__25385 = a;
var G__25386 = b;
var G__25387 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25384,G__25385,G__25386,G__25387) : f.call(null,G__25384,G__25385,G__25386,G__25387));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__25388 = cljs.core.meta(obj);
var G__25389 = a;
var G__25390 = b;
var G__25391 = c;
var G__25392 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__25388,G__25389,G__25390,G__25391,G__25392) : f.call(null,G__25388,G__25389,G__25390,G__25391,G__25392));
})());
});
var vary_meta__7 = (function() { 
var G__25393__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__25393 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__25394__i = 0, G__25394__a = new Array(arguments.length -  6);
while (G__25394__i < G__25394__a.length) {G__25394__a[G__25394__i] = arguments[G__25394__i + 6]; ++G__25394__i;}
  args = new cljs.core.IndexedSeq(G__25394__a,0);
} 
return G__25393__delegate.call(this,obj,f,a,b,c,d,args);};
G__25393.cljs$lang$maxFixedArity = 6;
G__25393.cljs$lang$applyTo = (function (arglist__25395){
var obj = cljs.core.first(arglist__25395);
arglist__25395 = cljs.core.next(arglist__25395);
var f = cljs.core.first(arglist__25395);
arglist__25395 = cljs.core.next(arglist__25395);
var a = cljs.core.first(arglist__25395);
arglist__25395 = cljs.core.next(arglist__25395);
var b = cljs.core.first(arglist__25395);
arglist__25395 = cljs.core.next(arglist__25395);
var c = cljs.core.first(arglist__25395);
arglist__25395 = cljs.core.next(arglist__25395);
var d = cljs.core.first(arglist__25395);
var args = cljs.core.rest(arglist__25395);
return G__25393__delegate(obj,f,a,b,c,d,args);
});
G__25393.cljs$core$IFn$_invoke$arity$variadic = G__25393__delegate;
return G__25393;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__25396 = null;
if (arguments.length > 6) {
var G__25397__i = 0, G__25397__a = new Array(arguments.length -  6);
while (G__25397__i < G__25397__a.length) {G__25397__a[G__25397__i] = arguments[G__25397__i + 6]; ++G__25397__i;}
G__25396 = new cljs.core.IndexedSeq(G__25397__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__25396);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__25398__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__25398 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25399__i = 0, G__25399__a = new Array(arguments.length -  2);
while (G__25399__i < G__25399__a.length) {G__25399__a[G__25399__i] = arguments[G__25399__i + 2]; ++G__25399__i;}
  more = new cljs.core.IndexedSeq(G__25399__a,0);
} 
return G__25398__delegate.call(this,x,y,more);};
G__25398.cljs$lang$maxFixedArity = 2;
G__25398.cljs$lang$applyTo = (function (arglist__25400){
var x = cljs.core.first(arglist__25400);
arglist__25400 = cljs.core.next(arglist__25400);
var y = cljs.core.first(arglist__25400);
var more = cljs.core.rest(arglist__25400);
return G__25398__delegate(x,y,more);
});
G__25398.cljs$core$IFn$_invoke$arity$variadic = G__25398__delegate;
return G__25398;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__25401 = null;
if (arguments.length > 2) {
var G__25402__i = 0, G__25402__a = new Array(arguments.length -  2);
while (G__25402__i < G__25402__a.length) {G__25402__a[G__25402__i] = arguments[G__25402__i + 2]; ++G__25402__i;}
G__25401 = new cljs.core.IndexedSeq(G__25402__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25401);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t25406 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t25406 = (function (nil_iter,meta25407){
this.nil_iter = nil_iter;
this.meta25407 = meta25407;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t25406.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t25406.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t25406.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t25406.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_25408){
var self__ = this;
var _25408__$1 = this;
return self__.meta25407;
});

cljs.core.t25406.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_25408,meta25407__$1){
var self__ = this;
var _25408__$1 = this;
return (new cljs.core.t25406(self__.nil_iter,meta25407__$1));
});

cljs.core.t25406.cljs$lang$type = true;

cljs.core.t25406.cljs$lang$ctorStr = "cljs.core/t25406";

cljs.core.t25406.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/t25406");
});

cljs.core.__GT_t25406 = (function __GT_t25406(nil_iter__$1,meta25407){
return (new cljs.core.t25406(nil_iter__$1,meta25407));
});

}

return (new cljs.core.t25406(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__15646__auto__ = !((lt.stepper == null));
if(and__15646__auto__){
return self__.iter.hasNext();
} else {
return and__15646__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__25409 = lt;
var G__25410 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__25409,G__25410) : self__.xform.call(null,G__25409,G__25410));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__25411 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__25411) : self__.xform.call(null,G__25411));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__25413 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__25413) : xform.call(null,G__25413));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__25415 = cljs.core.next(iters__$1);
iters__$1 = G__25415;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__16545__auto___25416 = self__.iters.length;
var i_25417 = (0);
while(true){
if((i_25417 < n__16545__auto___25416)){
(self__.nexts[i_25417] = (self__.iters[i_25417]).next());

var G__25418 = (i_25417 + (1));
i_25417 = G__25418;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__15646__auto__ = !((lt.stepper == null));
if(and__15646__auto__){
return this$.hasNext();
} else {
return and__15646__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__25414 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__25414) : self__.xform.call(null,G__25414));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__25423 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__25423) : xform.call(null,G__25423));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__25424_25428 = cljs.core.seq(colls);
var chunk__25425_25429 = null;
var count__25426_25430 = (0);
var i__25427_25431 = (0);
while(true){
if((i__25427_25431 < count__25426_25430)){
var coll_25432 = chunk__25425_25429.cljs$core$IIndexed$_nth$arity$2(null,i__25427_25431);
iters.push(cljs.core.iter(coll_25432));

var G__25433 = seq__25424_25428;
var G__25434 = chunk__25425_25429;
var G__25435 = count__25426_25430;
var G__25436 = (i__25427_25431 + (1));
seq__25424_25428 = G__25433;
chunk__25425_25429 = G__25434;
count__25426_25430 = G__25435;
i__25427_25431 = G__25436;
continue;
} else {
var temp__4126__auto___25437 = cljs.core.seq(seq__25424_25428);
if(temp__4126__auto___25437){
var seq__25424_25438__$1 = temp__4126__auto___25437;
if(cljs.core.chunked_seq_QMARK_(seq__25424_25438__$1)){
var c__16445__auto___25439 = cljs.core.chunk_first(seq__25424_25438__$1);
var G__25440 = cljs.core.chunk_rest(seq__25424_25438__$1);
var G__25441 = c__16445__auto___25439;
var G__25442 = cljs.core.count(c__16445__auto___25439);
var G__25443 = (0);
seq__25424_25428 = G__25440;
chunk__25425_25429 = G__25441;
count__25426_25430 = G__25442;
i__25427_25431 = G__25443;
continue;
} else {
var coll_25444 = cljs.core.first(seq__25424_25438__$1);
iters.push(cljs.core.iter(coll_25444));

var G__25445 = cljs.core.next(seq__25424_25438__$1);
var G__25446 = null;
var G__25447 = (0);
var G__25448 = (0);
seq__25424_25428 = G__25445;
chunk__25425_25429 = G__25446;
count__25426_25430 = G__25447;
i__25427_25431 = G__25448;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__15658__auto__ = cljs.core.seq(coll);
if(or__15658__auto__){
return or__15658__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__25449__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__25449 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__25450__i = 0, G__25450__a = new Array(arguments.length -  2);
while (G__25450__i < G__25450__a.length) {G__25450__a[G__25450__i] = arguments[G__25450__i + 2]; ++G__25450__i;}
  colls = new cljs.core.IndexedSeq(G__25450__a,0);
} 
return G__25449__delegate.call(this,xform,coll,colls);};
G__25449.cljs$lang$maxFixedArity = 2;
G__25449.cljs$lang$applyTo = (function (arglist__25451){
var xform = cljs.core.first(arglist__25451);
arglist__25451 = cljs.core.next(arglist__25451);
var coll = cljs.core.first(arglist__25451);
var colls = cljs.core.rest(arglist__25451);
return G__25449__delegate(xform,coll,colls);
});
G__25449.cljs$core$IFn$_invoke$arity$variadic = G__25449__delegate;
return G__25449;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__25452 = null;
if (arguments.length > 2) {
var G__25453__i = 0, G__25453__a = new Array(arguments.length -  2);
while (G__25453__i < G__25453__a.length) {G__25453__a[G__25453__i] = arguments[G__25453__i + 2]; ++G__25453__i;}
G__25452 = new cljs.core.IndexedSeq(G__25453__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__25452);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__25455 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__25455) : pred.call(null,G__25455));
})())){
var G__25456 = pred;
var G__25457 = cljs.core.next(coll);
pred = G__25456;
coll = G__25457;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__15658__auto__ = (function (){var G__25461 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__25461) : pred.call(null,G__25461));
})();
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
var G__25462 = pred;
var G__25463 = cljs.core.next(coll);
pred = G__25462;
coll = G__25463;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__25470 = null;
var G__25470__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__25470__1 = (function (x){
return cljs.core.not((function (){var G__25467 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25467) : f.call(null,G__25467));
})());
});
var G__25470__2 = (function (x,y){
return cljs.core.not((function (){var G__25468 = x;
var G__25469 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25468,G__25469) : f.call(null,G__25468,G__25469));
})());
});
var G__25470__3 = (function() { 
var G__25471__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__25471 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__25472__i = 0, G__25472__a = new Array(arguments.length -  2);
while (G__25472__i < G__25472__a.length) {G__25472__a[G__25472__i] = arguments[G__25472__i + 2]; ++G__25472__i;}
  zs = new cljs.core.IndexedSeq(G__25472__a,0);
} 
return G__25471__delegate.call(this,x,y,zs);};
G__25471.cljs$lang$maxFixedArity = 2;
G__25471.cljs$lang$applyTo = (function (arglist__25473){
var x = cljs.core.first(arglist__25473);
arglist__25473 = cljs.core.next(arglist__25473);
var y = cljs.core.first(arglist__25473);
var zs = cljs.core.rest(arglist__25473);
return G__25471__delegate(x,y,zs);
});
G__25471.cljs$core$IFn$_invoke$arity$variadic = G__25471__delegate;
return G__25471;
})()
;
G__25470 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__25470__0.call(this);
case 1:
return G__25470__1.call(this,x);
case 2:
return G__25470__2.call(this,x,y);
default:
var G__25474 = null;
if (arguments.length > 2) {
var G__25475__i = 0, G__25475__a = new Array(arguments.length -  2);
while (G__25475__i < G__25475__a.length) {G__25475__a[G__25475__i] = arguments[G__25475__i + 2]; ++G__25475__i;}
G__25474 = new cljs.core.IndexedSeq(G__25475__a,0);
}
return G__25470__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25474);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25470.cljs$lang$maxFixedArity = 2;
G__25470.cljs$lang$applyTo = G__25470__3.cljs$lang$applyTo;
G__25470.cljs$core$IFn$_invoke$arity$0 = G__25470__0;
G__25470.cljs$core$IFn$_invoke$arity$1 = G__25470__1;
G__25470.cljs$core$IFn$_invoke$arity$2 = G__25470__2;
G__25470.cljs$core$IFn$_invoke$arity$variadic = G__25470__3.cljs$core$IFn$_invoke$arity$variadic;
return G__25470;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__25476__delegate = function (args){
return x;
};
var G__25476 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__25477__i = 0, G__25477__a = new Array(arguments.length -  0);
while (G__25477__i < G__25477__a.length) {G__25477__a[G__25477__i] = arguments[G__25477__i + 0]; ++G__25477__i;}
  args = new cljs.core.IndexedSeq(G__25477__a,0);
} 
return G__25476__delegate.call(this,args);};
G__25476.cljs$lang$maxFixedArity = 0;
G__25476.cljs$lang$applyTo = (function (arglist__25478){
var args = cljs.core.seq(arglist__25478);
return G__25476__delegate(args);
});
G__25476.cljs$core$IFn$_invoke$arity$variadic = G__25476__delegate;
return G__25476;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__25533 = null;
var G__25533__0 = (function (){
var G__25506 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25506) : f.call(null,G__25506));
});
var G__25533__1 = (function (x){
var G__25507 = (function (){var G__25508 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25508) : g.call(null,G__25508));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25507) : f.call(null,G__25507));
});
var G__25533__2 = (function (x,y){
var G__25509 = (function (){var G__25510 = x;
var G__25511 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__25510,G__25511) : g.call(null,G__25510,G__25511));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25509) : f.call(null,G__25509));
});
var G__25533__3 = (function (x,y,z){
var G__25512 = (function (){var G__25513 = x;
var G__25514 = y;
var G__25515 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__25513,G__25514,G__25515) : g.call(null,G__25513,G__25514,G__25515));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25512) : f.call(null,G__25512));
});
var G__25533__4 = (function() { 
var G__25534__delegate = function (x,y,z,args){
var G__25516 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25516) : f.call(null,G__25516));
};
var G__25534 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25535__i = 0, G__25535__a = new Array(arguments.length -  3);
while (G__25535__i < G__25535__a.length) {G__25535__a[G__25535__i] = arguments[G__25535__i + 3]; ++G__25535__i;}
  args = new cljs.core.IndexedSeq(G__25535__a,0);
} 
return G__25534__delegate.call(this,x,y,z,args);};
G__25534.cljs$lang$maxFixedArity = 3;
G__25534.cljs$lang$applyTo = (function (arglist__25536){
var x = cljs.core.first(arglist__25536);
arglist__25536 = cljs.core.next(arglist__25536);
var y = cljs.core.first(arglist__25536);
arglist__25536 = cljs.core.next(arglist__25536);
var z = cljs.core.first(arglist__25536);
var args = cljs.core.rest(arglist__25536);
return G__25534__delegate(x,y,z,args);
});
G__25534.cljs$core$IFn$_invoke$arity$variadic = G__25534__delegate;
return G__25534;
})()
;
G__25533 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25533__0.call(this);
case 1:
return G__25533__1.call(this,x);
case 2:
return G__25533__2.call(this,x,y);
case 3:
return G__25533__3.call(this,x,y,z);
default:
var G__25537 = null;
if (arguments.length > 3) {
var G__25538__i = 0, G__25538__a = new Array(arguments.length -  3);
while (G__25538__i < G__25538__a.length) {G__25538__a[G__25538__i] = arguments[G__25538__i + 3]; ++G__25538__i;}
G__25537 = new cljs.core.IndexedSeq(G__25538__a,0);
}
return G__25533__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25537);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25533.cljs$lang$maxFixedArity = 3;
G__25533.cljs$lang$applyTo = G__25533__4.cljs$lang$applyTo;
G__25533.cljs$core$IFn$_invoke$arity$0 = G__25533__0;
G__25533.cljs$core$IFn$_invoke$arity$1 = G__25533__1;
G__25533.cljs$core$IFn$_invoke$arity$2 = G__25533__2;
G__25533.cljs$core$IFn$_invoke$arity$3 = G__25533__3;
G__25533.cljs$core$IFn$_invoke$arity$variadic = G__25533__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25533;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__25539 = null;
var G__25539__0 = (function (){
var G__25517 = (function (){var G__25518 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25518) : g.call(null,G__25518));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25517) : f.call(null,G__25517));
});
var G__25539__1 = (function (x){
var G__25519 = (function (){var G__25520 = (function (){var G__25521 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__25521) : h.call(null,G__25521));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25520) : g.call(null,G__25520));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25519) : f.call(null,G__25519));
});
var G__25539__2 = (function (x,y){
var G__25522 = (function (){var G__25523 = (function (){var G__25524 = x;
var G__25525 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__25524,G__25525) : h.call(null,G__25524,G__25525));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25523) : g.call(null,G__25523));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25522) : f.call(null,G__25522));
});
var G__25539__3 = (function (x,y,z){
var G__25526 = (function (){var G__25527 = (function (){var G__25528 = x;
var G__25529 = y;
var G__25530 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__25528,G__25529,G__25530) : h.call(null,G__25528,G__25529,G__25530));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25527) : g.call(null,G__25527));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25526) : f.call(null,G__25526));
});
var G__25539__4 = (function() { 
var G__25540__delegate = function (x,y,z,args){
var G__25531 = (function (){var G__25532 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25532) : g.call(null,G__25532));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25531) : f.call(null,G__25531));
};
var G__25540 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25541__i = 0, G__25541__a = new Array(arguments.length -  3);
while (G__25541__i < G__25541__a.length) {G__25541__a[G__25541__i] = arguments[G__25541__i + 3]; ++G__25541__i;}
  args = new cljs.core.IndexedSeq(G__25541__a,0);
} 
return G__25540__delegate.call(this,x,y,z,args);};
G__25540.cljs$lang$maxFixedArity = 3;
G__25540.cljs$lang$applyTo = (function (arglist__25542){
var x = cljs.core.first(arglist__25542);
arglist__25542 = cljs.core.next(arglist__25542);
var y = cljs.core.first(arglist__25542);
arglist__25542 = cljs.core.next(arglist__25542);
var z = cljs.core.first(arglist__25542);
var args = cljs.core.rest(arglist__25542);
return G__25540__delegate(x,y,z,args);
});
G__25540.cljs$core$IFn$_invoke$arity$variadic = G__25540__delegate;
return G__25540;
})()
;
G__25539 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25539__0.call(this);
case 1:
return G__25539__1.call(this,x);
case 2:
return G__25539__2.call(this,x,y);
case 3:
return G__25539__3.call(this,x,y,z);
default:
var G__25543 = null;
if (arguments.length > 3) {
var G__25544__i = 0, G__25544__a = new Array(arguments.length -  3);
while (G__25544__i < G__25544__a.length) {G__25544__a[G__25544__i] = arguments[G__25544__i + 3]; ++G__25544__i;}
G__25543 = new cljs.core.IndexedSeq(G__25544__a,0);
}
return G__25539__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25543);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25539.cljs$lang$maxFixedArity = 3;
G__25539.cljs$lang$applyTo = G__25539__4.cljs$lang$applyTo;
G__25539.cljs$core$IFn$_invoke$arity$0 = G__25539__0;
G__25539.cljs$core$IFn$_invoke$arity$1 = G__25539__1;
G__25539.cljs$core$IFn$_invoke$arity$2 = G__25539__2;
G__25539.cljs$core$IFn$_invoke$arity$3 = G__25539__3;
G__25539.cljs$core$IFn$_invoke$arity$variadic = G__25539__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25539;
})()
});
var comp__4 = (function() { 
var G__25545__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__25546__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__25547 = cljs.core.first(fs__$2).call(null,ret);
var G__25548 = cljs.core.next(fs__$2);
ret = G__25547;
fs__$2 = G__25548;
continue;
} else {
return ret;
}
break;
}
};
var G__25546 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__25549__i = 0, G__25549__a = new Array(arguments.length -  0);
while (G__25549__i < G__25549__a.length) {G__25549__a[G__25549__i] = arguments[G__25549__i + 0]; ++G__25549__i;}
  args = new cljs.core.IndexedSeq(G__25549__a,0);
} 
return G__25546__delegate.call(this,args);};
G__25546.cljs$lang$maxFixedArity = 0;
G__25546.cljs$lang$applyTo = (function (arglist__25550){
var args = cljs.core.seq(arglist__25550);
return G__25546__delegate(args);
});
G__25546.cljs$core$IFn$_invoke$arity$variadic = G__25546__delegate;
return G__25546;
})()
;
;})(fs__$1))
};
var G__25545 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__25551__i = 0, G__25551__a = new Array(arguments.length -  3);
while (G__25551__i < G__25551__a.length) {G__25551__a[G__25551__i] = arguments[G__25551__i + 3]; ++G__25551__i;}
  fs = new cljs.core.IndexedSeq(G__25551__a,0);
} 
return G__25545__delegate.call(this,f1,f2,f3,fs);};
G__25545.cljs$lang$maxFixedArity = 3;
G__25545.cljs$lang$applyTo = (function (arglist__25552){
var f1 = cljs.core.first(arglist__25552);
arglist__25552 = cljs.core.next(arglist__25552);
var f2 = cljs.core.first(arglist__25552);
arglist__25552 = cljs.core.next(arglist__25552);
var f3 = cljs.core.first(arglist__25552);
var fs = cljs.core.rest(arglist__25552);
return G__25545__delegate(f1,f2,f3,fs);
});
G__25545.cljs$core$IFn$_invoke$arity$variadic = G__25545__delegate;
return G__25545;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__25553 = null;
if (arguments.length > 3) {
var G__25554__i = 0, G__25554__a = new Array(arguments.length -  3);
while (G__25554__i < G__25554__a.length) {G__25554__a[G__25554__i] = arguments[G__25554__i + 3]; ++G__25554__i;}
G__25553 = new cljs.core.IndexedSeq(G__25554__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__25553);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__25639 = null;
var G__25639__0 = (function (){
var G__25597 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25597) : f.call(null,G__25597));
});
var G__25639__1 = (function (x){
var G__25598 = arg1;
var G__25599 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25598,G__25599) : f.call(null,G__25598,G__25599));
});
var G__25639__2 = (function (x,y){
var G__25600 = arg1;
var G__25601 = x;
var G__25602 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25600,G__25601,G__25602) : f.call(null,G__25600,G__25601,G__25602));
});
var G__25639__3 = (function (x,y,z){
var G__25603 = arg1;
var G__25604 = x;
var G__25605 = y;
var G__25606 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25603,G__25604,G__25605,G__25606) : f.call(null,G__25603,G__25604,G__25605,G__25606));
});
var G__25639__4 = (function() { 
var G__25640__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__25640 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25641__i = 0, G__25641__a = new Array(arguments.length -  3);
while (G__25641__i < G__25641__a.length) {G__25641__a[G__25641__i] = arguments[G__25641__i + 3]; ++G__25641__i;}
  args = new cljs.core.IndexedSeq(G__25641__a,0);
} 
return G__25640__delegate.call(this,x,y,z,args);};
G__25640.cljs$lang$maxFixedArity = 3;
G__25640.cljs$lang$applyTo = (function (arglist__25642){
var x = cljs.core.first(arglist__25642);
arglist__25642 = cljs.core.next(arglist__25642);
var y = cljs.core.first(arglist__25642);
arglist__25642 = cljs.core.next(arglist__25642);
var z = cljs.core.first(arglist__25642);
var args = cljs.core.rest(arglist__25642);
return G__25640__delegate(x,y,z,args);
});
G__25640.cljs$core$IFn$_invoke$arity$variadic = G__25640__delegate;
return G__25640;
})()
;
G__25639 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25639__0.call(this);
case 1:
return G__25639__1.call(this,x);
case 2:
return G__25639__2.call(this,x,y);
case 3:
return G__25639__3.call(this,x,y,z);
default:
var G__25643 = null;
if (arguments.length > 3) {
var G__25644__i = 0, G__25644__a = new Array(arguments.length -  3);
while (G__25644__i < G__25644__a.length) {G__25644__a[G__25644__i] = arguments[G__25644__i + 3]; ++G__25644__i;}
G__25643 = new cljs.core.IndexedSeq(G__25644__a,0);
}
return G__25639__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25643);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25639.cljs$lang$maxFixedArity = 3;
G__25639.cljs$lang$applyTo = G__25639__4.cljs$lang$applyTo;
G__25639.cljs$core$IFn$_invoke$arity$0 = G__25639__0;
G__25639.cljs$core$IFn$_invoke$arity$1 = G__25639__1;
G__25639.cljs$core$IFn$_invoke$arity$2 = G__25639__2;
G__25639.cljs$core$IFn$_invoke$arity$3 = G__25639__3;
G__25639.cljs$core$IFn$_invoke$arity$variadic = G__25639__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25639;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__25645 = null;
var G__25645__0 = (function (){
var G__25607 = arg1;
var G__25608 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25607,G__25608) : f.call(null,G__25607,G__25608));
});
var G__25645__1 = (function (x){
var G__25609 = arg1;
var G__25610 = arg2;
var G__25611 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25609,G__25610,G__25611) : f.call(null,G__25609,G__25610,G__25611));
});
var G__25645__2 = (function (x,y){
var G__25612 = arg1;
var G__25613 = arg2;
var G__25614 = x;
var G__25615 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25612,G__25613,G__25614,G__25615) : f.call(null,G__25612,G__25613,G__25614,G__25615));
});
var G__25645__3 = (function (x,y,z){
var G__25616 = arg1;
var G__25617 = arg2;
var G__25618 = x;
var G__25619 = y;
var G__25620 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__25616,G__25617,G__25618,G__25619,G__25620) : f.call(null,G__25616,G__25617,G__25618,G__25619,G__25620));
});
var G__25645__4 = (function() { 
var G__25646__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__25646 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25647__i = 0, G__25647__a = new Array(arguments.length -  3);
while (G__25647__i < G__25647__a.length) {G__25647__a[G__25647__i] = arguments[G__25647__i + 3]; ++G__25647__i;}
  args = new cljs.core.IndexedSeq(G__25647__a,0);
} 
return G__25646__delegate.call(this,x,y,z,args);};
G__25646.cljs$lang$maxFixedArity = 3;
G__25646.cljs$lang$applyTo = (function (arglist__25648){
var x = cljs.core.first(arglist__25648);
arglist__25648 = cljs.core.next(arglist__25648);
var y = cljs.core.first(arglist__25648);
arglist__25648 = cljs.core.next(arglist__25648);
var z = cljs.core.first(arglist__25648);
var args = cljs.core.rest(arglist__25648);
return G__25646__delegate(x,y,z,args);
});
G__25646.cljs$core$IFn$_invoke$arity$variadic = G__25646__delegate;
return G__25646;
})()
;
G__25645 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25645__0.call(this);
case 1:
return G__25645__1.call(this,x);
case 2:
return G__25645__2.call(this,x,y);
case 3:
return G__25645__3.call(this,x,y,z);
default:
var G__25649 = null;
if (arguments.length > 3) {
var G__25650__i = 0, G__25650__a = new Array(arguments.length -  3);
while (G__25650__i < G__25650__a.length) {G__25650__a[G__25650__i] = arguments[G__25650__i + 3]; ++G__25650__i;}
G__25649 = new cljs.core.IndexedSeq(G__25650__a,0);
}
return G__25645__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25649);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25645.cljs$lang$maxFixedArity = 3;
G__25645.cljs$lang$applyTo = G__25645__4.cljs$lang$applyTo;
G__25645.cljs$core$IFn$_invoke$arity$0 = G__25645__0;
G__25645.cljs$core$IFn$_invoke$arity$1 = G__25645__1;
G__25645.cljs$core$IFn$_invoke$arity$2 = G__25645__2;
G__25645.cljs$core$IFn$_invoke$arity$3 = G__25645__3;
G__25645.cljs$core$IFn$_invoke$arity$variadic = G__25645__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25645;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__25651 = null;
var G__25651__0 = (function (){
var G__25621 = arg1;
var G__25622 = arg2;
var G__25623 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25621,G__25622,G__25623) : f.call(null,G__25621,G__25622,G__25623));
});
var G__25651__1 = (function (x){
var G__25624 = arg1;
var G__25625 = arg2;
var G__25626 = arg3;
var G__25627 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25624,G__25625,G__25626,G__25627) : f.call(null,G__25624,G__25625,G__25626,G__25627));
});
var G__25651__2 = (function (x,y){
var G__25628 = arg1;
var G__25629 = arg2;
var G__25630 = arg3;
var G__25631 = x;
var G__25632 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__25628,G__25629,G__25630,G__25631,G__25632) : f.call(null,G__25628,G__25629,G__25630,G__25631,G__25632));
});
var G__25651__3 = (function (x,y,z){
var G__25633 = arg1;
var G__25634 = arg2;
var G__25635 = arg3;
var G__25636 = x;
var G__25637 = y;
var G__25638 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__25633,G__25634,G__25635,G__25636,G__25637,G__25638) : f.call(null,G__25633,G__25634,G__25635,G__25636,G__25637,G__25638));
});
var G__25651__4 = (function() { 
var G__25652__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__25652 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25653__i = 0, G__25653__a = new Array(arguments.length -  3);
while (G__25653__i < G__25653__a.length) {G__25653__a[G__25653__i] = arguments[G__25653__i + 3]; ++G__25653__i;}
  args = new cljs.core.IndexedSeq(G__25653__a,0);
} 
return G__25652__delegate.call(this,x,y,z,args);};
G__25652.cljs$lang$maxFixedArity = 3;
G__25652.cljs$lang$applyTo = (function (arglist__25654){
var x = cljs.core.first(arglist__25654);
arglist__25654 = cljs.core.next(arglist__25654);
var y = cljs.core.first(arglist__25654);
arglist__25654 = cljs.core.next(arglist__25654);
var z = cljs.core.first(arglist__25654);
var args = cljs.core.rest(arglist__25654);
return G__25652__delegate(x,y,z,args);
});
G__25652.cljs$core$IFn$_invoke$arity$variadic = G__25652__delegate;
return G__25652;
})()
;
G__25651 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25651__0.call(this);
case 1:
return G__25651__1.call(this,x);
case 2:
return G__25651__2.call(this,x,y);
case 3:
return G__25651__3.call(this,x,y,z);
default:
var G__25655 = null;
if (arguments.length > 3) {
var G__25656__i = 0, G__25656__a = new Array(arguments.length -  3);
while (G__25656__i < G__25656__a.length) {G__25656__a[G__25656__i] = arguments[G__25656__i + 3]; ++G__25656__i;}
G__25655 = new cljs.core.IndexedSeq(G__25656__a,0);
}
return G__25651__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25655);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25651.cljs$lang$maxFixedArity = 3;
G__25651.cljs$lang$applyTo = G__25651__4.cljs$lang$applyTo;
G__25651.cljs$core$IFn$_invoke$arity$0 = G__25651__0;
G__25651.cljs$core$IFn$_invoke$arity$1 = G__25651__1;
G__25651.cljs$core$IFn$_invoke$arity$2 = G__25651__2;
G__25651.cljs$core$IFn$_invoke$arity$3 = G__25651__3;
G__25651.cljs$core$IFn$_invoke$arity$variadic = G__25651__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25651;
})()
});
var partial__5 = (function() { 
var G__25657__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__25658__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__25658 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__25659__i = 0, G__25659__a = new Array(arguments.length -  0);
while (G__25659__i < G__25659__a.length) {G__25659__a[G__25659__i] = arguments[G__25659__i + 0]; ++G__25659__i;}
  args = new cljs.core.IndexedSeq(G__25659__a,0);
} 
return G__25658__delegate.call(this,args);};
G__25658.cljs$lang$maxFixedArity = 0;
G__25658.cljs$lang$applyTo = (function (arglist__25660){
var args = cljs.core.seq(arglist__25660);
return G__25658__delegate(args);
});
G__25658.cljs$core$IFn$_invoke$arity$variadic = G__25658__delegate;
return G__25658;
})()
;
};
var G__25657 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__25661__i = 0, G__25661__a = new Array(arguments.length -  4);
while (G__25661__i < G__25661__a.length) {G__25661__a[G__25661__i] = arguments[G__25661__i + 4]; ++G__25661__i;}
  more = new cljs.core.IndexedSeq(G__25661__a,0);
} 
return G__25657__delegate.call(this,f,arg1,arg2,arg3,more);};
G__25657.cljs$lang$maxFixedArity = 4;
G__25657.cljs$lang$applyTo = (function (arglist__25662){
var f = cljs.core.first(arglist__25662);
arglist__25662 = cljs.core.next(arglist__25662);
var arg1 = cljs.core.first(arglist__25662);
arglist__25662 = cljs.core.next(arglist__25662);
var arg2 = cljs.core.first(arglist__25662);
arglist__25662 = cljs.core.next(arglist__25662);
var arg3 = cljs.core.first(arglist__25662);
var more = cljs.core.rest(arglist__25662);
return G__25657__delegate(f,arg1,arg2,arg3,more);
});
G__25657.cljs$core$IFn$_invoke$arity$variadic = G__25657__delegate;
return G__25657;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__25663 = null;
if (arguments.length > 4) {
var G__25664__i = 0, G__25664__a = new Array(arguments.length -  4);
while (G__25664__i < G__25664__a.length) {G__25664__a[G__25664__i] = arguments[G__25664__i + 4]; ++G__25664__i;}
G__25663 = new cljs.core.IndexedSeq(G__25664__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__25663);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__25697 = null;
var G__25697__1 = (function (a){
var G__25681 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25681) : f.call(null,G__25681));
});
var G__25697__2 = (function (a,b){
var G__25682 = (((a == null))?x:a);
var G__25683 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25682,G__25683) : f.call(null,G__25682,G__25683));
});
var G__25697__3 = (function (a,b,c){
var G__25684 = (((a == null))?x:a);
var G__25685 = b;
var G__25686 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25684,G__25685,G__25686) : f.call(null,G__25684,G__25685,G__25686));
});
var G__25697__4 = (function() { 
var G__25698__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__25698 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__25699__i = 0, G__25699__a = new Array(arguments.length -  3);
while (G__25699__i < G__25699__a.length) {G__25699__a[G__25699__i] = arguments[G__25699__i + 3]; ++G__25699__i;}
  ds = new cljs.core.IndexedSeq(G__25699__a,0);
} 
return G__25698__delegate.call(this,a,b,c,ds);};
G__25698.cljs$lang$maxFixedArity = 3;
G__25698.cljs$lang$applyTo = (function (arglist__25700){
var a = cljs.core.first(arglist__25700);
arglist__25700 = cljs.core.next(arglist__25700);
var b = cljs.core.first(arglist__25700);
arglist__25700 = cljs.core.next(arglist__25700);
var c = cljs.core.first(arglist__25700);
var ds = cljs.core.rest(arglist__25700);
return G__25698__delegate(a,b,c,ds);
});
G__25698.cljs$core$IFn$_invoke$arity$variadic = G__25698__delegate;
return G__25698;
})()
;
G__25697 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__25697__1.call(this,a);
case 2:
return G__25697__2.call(this,a,b);
case 3:
return G__25697__3.call(this,a,b,c);
default:
var G__25701 = null;
if (arguments.length > 3) {
var G__25702__i = 0, G__25702__a = new Array(arguments.length -  3);
while (G__25702__i < G__25702__a.length) {G__25702__a[G__25702__i] = arguments[G__25702__i + 3]; ++G__25702__i;}
G__25701 = new cljs.core.IndexedSeq(G__25702__a,0);
}
return G__25697__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__25701);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25697.cljs$lang$maxFixedArity = 3;
G__25697.cljs$lang$applyTo = G__25697__4.cljs$lang$applyTo;
G__25697.cljs$core$IFn$_invoke$arity$1 = G__25697__1;
G__25697.cljs$core$IFn$_invoke$arity$2 = G__25697__2;
G__25697.cljs$core$IFn$_invoke$arity$3 = G__25697__3;
G__25697.cljs$core$IFn$_invoke$arity$variadic = G__25697__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25697;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__25703 = null;
var G__25703__2 = (function (a,b){
var G__25687 = (((a == null))?x:a);
var G__25688 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25687,G__25688) : f.call(null,G__25687,G__25688));
});
var G__25703__3 = (function (a,b,c){
var G__25689 = (((a == null))?x:a);
var G__25690 = (((b == null))?y:b);
var G__25691 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25689,G__25690,G__25691) : f.call(null,G__25689,G__25690,G__25691));
});
var G__25703__4 = (function() { 
var G__25704__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__25704 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__25705__i = 0, G__25705__a = new Array(arguments.length -  3);
while (G__25705__i < G__25705__a.length) {G__25705__a[G__25705__i] = arguments[G__25705__i + 3]; ++G__25705__i;}
  ds = new cljs.core.IndexedSeq(G__25705__a,0);
} 
return G__25704__delegate.call(this,a,b,c,ds);};
G__25704.cljs$lang$maxFixedArity = 3;
G__25704.cljs$lang$applyTo = (function (arglist__25706){
var a = cljs.core.first(arglist__25706);
arglist__25706 = cljs.core.next(arglist__25706);
var b = cljs.core.first(arglist__25706);
arglist__25706 = cljs.core.next(arglist__25706);
var c = cljs.core.first(arglist__25706);
var ds = cljs.core.rest(arglist__25706);
return G__25704__delegate(a,b,c,ds);
});
G__25704.cljs$core$IFn$_invoke$arity$variadic = G__25704__delegate;
return G__25704;
})()
;
G__25703 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__25703__2.call(this,a,b);
case 3:
return G__25703__3.call(this,a,b,c);
default:
var G__25707 = null;
if (arguments.length > 3) {
var G__25708__i = 0, G__25708__a = new Array(arguments.length -  3);
while (G__25708__i < G__25708__a.length) {G__25708__a[G__25708__i] = arguments[G__25708__i + 3]; ++G__25708__i;}
G__25707 = new cljs.core.IndexedSeq(G__25708__a,0);
}
return G__25703__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__25707);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25703.cljs$lang$maxFixedArity = 3;
G__25703.cljs$lang$applyTo = G__25703__4.cljs$lang$applyTo;
G__25703.cljs$core$IFn$_invoke$arity$2 = G__25703__2;
G__25703.cljs$core$IFn$_invoke$arity$3 = G__25703__3;
G__25703.cljs$core$IFn$_invoke$arity$variadic = G__25703__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25703;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__25709 = null;
var G__25709__2 = (function (a,b){
var G__25692 = (((a == null))?x:a);
var G__25693 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25692,G__25693) : f.call(null,G__25692,G__25693));
});
var G__25709__3 = (function (a,b,c){
var G__25694 = (((a == null))?x:a);
var G__25695 = (((b == null))?y:b);
var G__25696 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25694,G__25695,G__25696) : f.call(null,G__25694,G__25695,G__25696));
});
var G__25709__4 = (function() { 
var G__25710__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__25710 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__25711__i = 0, G__25711__a = new Array(arguments.length -  3);
while (G__25711__i < G__25711__a.length) {G__25711__a[G__25711__i] = arguments[G__25711__i + 3]; ++G__25711__i;}
  ds = new cljs.core.IndexedSeq(G__25711__a,0);
} 
return G__25710__delegate.call(this,a,b,c,ds);};
G__25710.cljs$lang$maxFixedArity = 3;
G__25710.cljs$lang$applyTo = (function (arglist__25712){
var a = cljs.core.first(arglist__25712);
arglist__25712 = cljs.core.next(arglist__25712);
var b = cljs.core.first(arglist__25712);
arglist__25712 = cljs.core.next(arglist__25712);
var c = cljs.core.first(arglist__25712);
var ds = cljs.core.rest(arglist__25712);
return G__25710__delegate(a,b,c,ds);
});
G__25710.cljs$core$IFn$_invoke$arity$variadic = G__25710__delegate;
return G__25710;
})()
;
G__25709 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__25709__2.call(this,a,b);
case 3:
return G__25709__3.call(this,a,b,c);
default:
var G__25713 = null;
if (arguments.length > 3) {
var G__25714__i = 0, G__25714__a = new Array(arguments.length -  3);
while (G__25714__i < G__25714__a.length) {G__25714__a[G__25714__i] = arguments[G__25714__i + 3]; ++G__25714__i;}
G__25713 = new cljs.core.IndexedSeq(G__25714__a,0);
}
return G__25709__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__25713);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25709.cljs$lang$maxFixedArity = 3;
G__25709.cljs$lang$applyTo = G__25709__4.cljs$lang$applyTo;
G__25709.cljs$core$IFn$_invoke$arity$2 = G__25709__2;
G__25709.cljs$core$IFn$_invoke$arity$3 = G__25709__3;
G__25709.cljs$core$IFn$_invoke$arity$variadic = G__25709__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25709;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__25745 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__25745) : cljs.core.volatile_BANG_.call(null,G__25745));
})();
return ((function (i){
return (function() {
var G__25775 = null;
var G__25775__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25775__1 = (function (result){
var G__25746 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25746) : rf.call(null,G__25746));
});
var G__25775__2 = (function (result,input){
var G__25747 = result;
var G__25748 = (function (){var G__25749 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__25750 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25749,G__25750) : f.call(null,G__25749,G__25750));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25747,G__25748) : rf.call(null,G__25747,G__25748));
});
G__25775 = function(result,input){
switch(arguments.length){
case 0:
return G__25775__0.call(this);
case 1:
return G__25775__1.call(this,result);
case 2:
return G__25775__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25775.cljs$core$IFn$_invoke$arity$0 = G__25775__0;
G__25775.cljs$core$IFn$_invoke$arity$1 = G__25775__1;
G__25775.cljs$core$IFn$_invoke$arity$2 = G__25775__2;
return G__25775;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__16545__auto___25776 = size;
var i_25777 = (0);
while(true){
if((i_25777 < n__16545__auto___25776)){
cljs.core.chunk_append(b,(function (){var G__25771 = (idx + i_25777);
var G__25772 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_25777);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25771,G__25772) : f.call(null,G__25771,G__25772));
})());

var G__25778 = (i_25777 + (1));
i_25777 = G__25778;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__25773 = idx;
var G__25774 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25773,G__25774) : f.call(null,G__25773,G__25774));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__25797 = null;
var G__25797__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25797__1 = (function (result){
var G__25791 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25791) : rf.call(null,G__25791));
});
var G__25797__2 = (function (result,input){
var v = (function (){var G__25792 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25792) : f.call(null,G__25792));
})();
if((v == null)){
return result;
} else {
var G__25793 = result;
var G__25794 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25793,G__25794) : rf.call(null,G__25793,G__25794));
}
});
G__25797 = function(result,input){
switch(arguments.length){
case 0:
return G__25797__0.call(this);
case 1:
return G__25797__1.call(this,result);
case 2:
return G__25797__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25797.cljs$core$IFn$_invoke$arity$0 = G__25797__0;
G__25797.cljs$core$IFn$_invoke$arity$1 = G__25797__1;
G__25797.cljs$core$IFn$_invoke$arity$2 = G__25797__2;
return G__25797;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__16545__auto___25798 = size;
var i_25799 = (0);
while(true){
if((i_25799 < n__16545__auto___25798)){
var x_25800 = (function (){var G__25795 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_25799);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25795) : f.call(null,G__25795));
})();
if((x_25800 == null)){
} else {
cljs.core.chunk_append(b,x_25800);
}

var G__25801 = (i_25799 + (1));
i_25799 = G__25801;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__25796 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25796) : f.call(null,G__25796));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__25802 = this$__$1;
return goog.getUid(G__25802);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__25803 = cljs.core.seq(self__.watches);
var chunk__25804 = null;
var count__25805 = (0);
var i__25806 = (0);
while(true){
if((i__25806 < count__25805)){
var vec__25807 = chunk__25804.cljs$core$IIndexed$_nth$arity$2(null,i__25806);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25807,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25807,(1),null);
var G__25808_25817 = key;
var G__25809_25818 = this$__$1;
var G__25810_25819 = oldval;
var G__25811_25820 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25808_25817,G__25809_25818,G__25810_25819,G__25811_25820) : f.call(null,G__25808_25817,G__25809_25818,G__25810_25819,G__25811_25820));

var G__25821 = seq__25803;
var G__25822 = chunk__25804;
var G__25823 = count__25805;
var G__25824 = (i__25806 + (1));
seq__25803 = G__25821;
chunk__25804 = G__25822;
count__25805 = G__25823;
i__25806 = G__25824;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__25803);
if(temp__4126__auto__){
var seq__25803__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__25803__$1)){
var c__16445__auto__ = cljs.core.chunk_first(seq__25803__$1);
var G__25825 = cljs.core.chunk_rest(seq__25803__$1);
var G__25826 = c__16445__auto__;
var G__25827 = cljs.core.count(c__16445__auto__);
var G__25828 = (0);
seq__25803 = G__25825;
chunk__25804 = G__25826;
count__25805 = G__25827;
i__25806 = G__25828;
continue;
} else {
var vec__25812 = cljs.core.first(seq__25803__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25812,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25812,(1),null);
var G__25813_25829 = key;
var G__25814_25830 = this$__$1;
var G__25815_25831 = oldval;
var G__25816_25832 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25813_25829,G__25814_25830,G__25815_25831,G__25816_25832) : f.call(null,G__25813_25829,G__25814_25830,G__25815_25831,G__25816_25832));

var G__25833 = cljs.core.next(seq__25803__$1);
var G__25834 = null;
var G__25835 = (0);
var G__25836 = (0);
seq__25803 = G__25833;
chunk__25804 = G__25834;
count__25805 = G__25835;
i__25806 = G__25836;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__25840__delegate = function (x,p__25837){
var map__25839 = p__25837;
var map__25839__$1 = ((cljs.core.seq_QMARK_(map__25839))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__25839):map__25839);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__25839__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__25839__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__25840 = function (x,var_args){
var p__25837 = null;
if (arguments.length > 1) {
var G__25841__i = 0, G__25841__a = new Array(arguments.length -  1);
while (G__25841__i < G__25841__a.length) {G__25841__a[G__25841__i] = arguments[G__25841__i + 1]; ++G__25841__i;}
  p__25837 = new cljs.core.IndexedSeq(G__25841__a,0);
} 
return G__25840__delegate.call(this,x,p__25837);};
G__25840.cljs$lang$maxFixedArity = 1;
G__25840.cljs$lang$applyTo = (function (arglist__25842){
var x = cljs.core.first(arglist__25842);
var p__25837 = cljs.core.rest(arglist__25842);
return G__25840__delegate(x,p__25837);
});
G__25840.cljs$core$IFn$_invoke$arity$variadic = G__25840__delegate;
return G__25840;
})()
;
atom = function(x,var_args){
var p__25837 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__25843 = null;
if (arguments.length > 1) {
var G__25844__i = 0, G__25844__a = new Array(arguments.length -  1);
while (G__25844__i < G__25844__a.length) {G__25844__a[G__25844__i] = arguments[G__25844__i + 1]; ++G__25844__i;}
G__25843 = new cljs.core.IndexedSeq(G__25844__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__25843);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__25847 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__25847) : validate.call(null,G__25847));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__25848 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__25848) : cljs.core.pr_str.call(null,G__25848));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__25855 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25855) : f.call(null,G__25855));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__25856 = a.state;
var G__25857 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25856,G__25857) : f.call(null,G__25856,G__25857));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__25858 = a.state;
var G__25859 = x;
var G__25860 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25858,G__25859,G__25860) : f.call(null,G__25858,G__25859,G__25860));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__25861__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__25861 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__25862__i = 0, G__25862__a = new Array(arguments.length -  4);
while (G__25862__i < G__25862__a.length) {G__25862__a[G__25862__i] = arguments[G__25862__i + 4]; ++G__25862__i;}
  more = new cljs.core.IndexedSeq(G__25862__a,0);
} 
return G__25861__delegate.call(this,a,f,x,y,more);};
G__25861.cljs$lang$maxFixedArity = 4;
G__25861.cljs$lang$applyTo = (function (arglist__25863){
var a = cljs.core.first(arglist__25863);
arglist__25863 = cljs.core.next(arglist__25863);
var f = cljs.core.first(arglist__25863);
arglist__25863 = cljs.core.next(arglist__25863);
var x = cljs.core.first(arglist__25863);
arglist__25863 = cljs.core.next(arglist__25863);
var y = cljs.core.first(arglist__25863);
var more = cljs.core.rest(arglist__25863);
return G__25861__delegate(a,f,x,y,more);
});
G__25861.cljs$core$IFn$_invoke$arity$variadic = G__25861__delegate;
return G__25861;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__25864 = null;
if (arguments.length > 4) {
var G__25865__i = 0, G__25865__a = new Array(arguments.length -  4);
while (G__25865__i < G__25865__a.length) {G__25865__a[G__25865__i] = arguments[G__25865__i + 4]; ++G__25865__i;}
G__25864 = new cljs.core.IndexedSeq(G__25865__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__25864);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__25932 = null;
var G__25932__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25932__1 = (function (result){
var G__25899 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25899) : rf.call(null,G__25899));
});
var G__25932__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__25900 = i;
var G__25901 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25900,G__25901) : f.call(null,G__25900,G__25901));
})();
if((v == null)){
return result;
} else {
var G__25902 = result;
var G__25903 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25902,G__25903) : rf.call(null,G__25902,G__25903));
}
});
G__25932 = function(result,input){
switch(arguments.length){
case 0:
return G__25932__0.call(this);
case 1:
return G__25932__1.call(this,result);
case 2:
return G__25932__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25932.cljs$core$IFn$_invoke$arity$0 = G__25932__0;
G__25932.cljs$core$IFn$_invoke$arity$1 = G__25932__1;
G__25932.cljs$core$IFn$_invoke$arity$2 = G__25932__2;
return G__25932;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__16545__auto___25933 = size;
var i_25934 = (0);
while(true){
if((i_25934 < n__16545__auto___25933)){
var x_25935 = (function (){var G__25928 = (idx + i_25934);
var G__25929 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_25934);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25928,G__25929) : f.call(null,G__25928,G__25929));
})();
if((x_25935 == null)){
} else {
cljs.core.chunk_append(b,x_25935);
}

var G__25936 = (i_25934 + (1));
i_25934 = G__25936;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__25930 = idx;
var G__25931 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25930,G__25931) : f.call(null,G__25930,G__25931));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__26150 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26150) : p.call(null,G__26150));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__15646__auto__ = (function (){var G__26152 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26152) : p.call(null,G__26152));
})();
if(cljs.core.truth_(and__15646__auto__)){
var G__26153 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26153) : p.call(null,G__26153));
} else {
return and__15646__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__15646__auto__ = (function (){var G__26155 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26155) : p.call(null,G__26155));
})();
if(cljs.core.truth_(and__15646__auto__)){
var and__15646__auto____$1 = (function (){var G__26157 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26157) : p.call(null,G__26157));
})();
if(cljs.core.truth_(and__15646__auto____$1)){
var G__26158 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26158) : p.call(null,G__26158));
} else {
return and__15646__auto____$1;
}
} else {
return and__15646__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__26327__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__26327 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26328__i = 0, G__26328__a = new Array(arguments.length -  3);
while (G__26328__i < G__26328__a.length) {G__26328__a[G__26328__i] = arguments[G__26328__i + 3]; ++G__26328__i;}
  args = new cljs.core.IndexedSeq(G__26328__a,0);
} 
return G__26327__delegate.call(this,x,y,z,args);};
G__26327.cljs$lang$maxFixedArity = 3;
G__26327.cljs$lang$applyTo = (function (arglist__26329){
var x = cljs.core.first(arglist__26329);
arglist__26329 = cljs.core.next(arglist__26329);
var y = cljs.core.first(arglist__26329);
arglist__26329 = cljs.core.next(arglist__26329);
var z = cljs.core.first(arglist__26329);
var args = cljs.core.rest(arglist__26329);
return G__26327__delegate(x,y,z,args);
});
G__26327.cljs$core$IFn$_invoke$arity$variadic = G__26327__delegate;
return G__26327;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__26330 = null;
if (arguments.length > 3) {
var G__26331__i = 0, G__26331__a = new Array(arguments.length -  3);
while (G__26331__i < G__26331__a.length) {G__26331__a[G__26331__i] = arguments[G__26331__i + 3]; ++G__26331__i;}
G__26330 = new cljs.core.IndexedSeq(G__26331__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26330);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__15646__auto__ = (function (){var G__26190 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26190) : p1.call(null,G__26190));
})();
if(cljs.core.truth_(and__15646__auto__)){
var G__26191 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26191) : p2.call(null,G__26191));
} else {
return and__15646__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__15646__auto__ = (function (){var G__26193 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26193) : p1.call(null,G__26193));
})();
if(cljs.core.truth_(and__15646__auto__)){
var and__15646__auto____$1 = (function (){var G__26195 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26195) : p1.call(null,G__26195));
})();
if(cljs.core.truth_(and__15646__auto____$1)){
var and__15646__auto____$2 = (function (){var G__26197 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26197) : p2.call(null,G__26197));
})();
if(cljs.core.truth_(and__15646__auto____$2)){
var G__26198 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26198) : p2.call(null,G__26198));
} else {
return and__15646__auto____$2;
}
} else {
return and__15646__auto____$1;
}
} else {
return and__15646__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__15646__auto__ = (function (){var G__26200 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26200) : p1.call(null,G__26200));
})();
if(cljs.core.truth_(and__15646__auto__)){
var and__15646__auto____$1 = (function (){var G__26202 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26202) : p1.call(null,G__26202));
})();
if(cljs.core.truth_(and__15646__auto____$1)){
var and__15646__auto____$2 = (function (){var G__26204 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26204) : p1.call(null,G__26204));
})();
if(cljs.core.truth_(and__15646__auto____$2)){
var and__15646__auto____$3 = (function (){var G__26206 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26206) : p2.call(null,G__26206));
})();
if(cljs.core.truth_(and__15646__auto____$3)){
var and__15646__auto____$4 = (function (){var G__26208 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26208) : p2.call(null,G__26208));
})();
if(cljs.core.truth_(and__15646__auto____$4)){
var G__26209 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26209) : p2.call(null,G__26209));
} else {
return and__15646__auto____$4;
}
} else {
return and__15646__auto____$3;
}
} else {
return and__15646__auto____$2;
}
} else {
return and__15646__auto____$1;
}
} else {
return and__15646__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__26332__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__25937_SHARP_){
var and__15646__auto__ = (function (){var G__26214 = p1__25937_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26214) : p1.call(null,G__26214));
})();
if(cljs.core.truth_(and__15646__auto__)){
var G__26215 = p1__25937_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26215) : p2.call(null,G__26215));
} else {
return and__15646__auto__;
}
}),args)));
};
var G__26332 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26333__i = 0, G__26333__a = new Array(arguments.length -  3);
while (G__26333__i < G__26333__a.length) {G__26333__a[G__26333__i] = arguments[G__26333__i + 3]; ++G__26333__i;}
  args = new cljs.core.IndexedSeq(G__26333__a,0);
} 
return G__26332__delegate.call(this,x,y,z,args);};
G__26332.cljs$lang$maxFixedArity = 3;
G__26332.cljs$lang$applyTo = (function (arglist__26334){
var x = cljs.core.first(arglist__26334);
arglist__26334 = cljs.core.next(arglist__26334);
var y = cljs.core.first(arglist__26334);
arglist__26334 = cljs.core.next(arglist__26334);
var z = cljs.core.first(arglist__26334);
var args = cljs.core.rest(arglist__26334);
return G__26332__delegate(x,y,z,args);
});
G__26332.cljs$core$IFn$_invoke$arity$variadic = G__26332__delegate;
return G__26332;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__26335 = null;
if (arguments.length > 3) {
var G__26336__i = 0, G__26336__a = new Array(arguments.length -  3);
while (G__26336__i < G__26336__a.length) {G__26336__a[G__26336__i] = arguments[G__26336__i + 3]; ++G__26336__i;}
G__26335 = new cljs.core.IndexedSeq(G__26336__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26335);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__15646__auto__ = (function (){var G__26261 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26261) : p1.call(null,G__26261));
})();
if(cljs.core.truth_(and__15646__auto__)){
var and__15646__auto____$1 = (function (){var G__26263 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26263) : p2.call(null,G__26263));
})();
if(cljs.core.truth_(and__15646__auto____$1)){
var G__26264 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26264) : p3.call(null,G__26264));
} else {
return and__15646__auto____$1;
}
} else {
return and__15646__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__15646__auto__ = (function (){var G__26266 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26266) : p1.call(null,G__26266));
})();
if(cljs.core.truth_(and__15646__auto__)){
var and__15646__auto____$1 = (function (){var G__26268 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26268) : p2.call(null,G__26268));
})();
if(cljs.core.truth_(and__15646__auto____$1)){
var and__15646__auto____$2 = (function (){var G__26270 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26270) : p3.call(null,G__26270));
})();
if(cljs.core.truth_(and__15646__auto____$2)){
var and__15646__auto____$3 = (function (){var G__26272 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26272) : p1.call(null,G__26272));
})();
if(cljs.core.truth_(and__15646__auto____$3)){
var and__15646__auto____$4 = (function (){var G__26274 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26274) : p2.call(null,G__26274));
})();
if(cljs.core.truth_(and__15646__auto____$4)){
var G__26275 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26275) : p3.call(null,G__26275));
} else {
return and__15646__auto____$4;
}
} else {
return and__15646__auto____$3;
}
} else {
return and__15646__auto____$2;
}
} else {
return and__15646__auto____$1;
}
} else {
return and__15646__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__15646__auto__ = (function (){var G__26277 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26277) : p1.call(null,G__26277));
})();
if(cljs.core.truth_(and__15646__auto__)){
var and__15646__auto____$1 = (function (){var G__26279 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26279) : p2.call(null,G__26279));
})();
if(cljs.core.truth_(and__15646__auto____$1)){
var and__15646__auto____$2 = (function (){var G__26281 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26281) : p3.call(null,G__26281));
})();
if(cljs.core.truth_(and__15646__auto____$2)){
var and__15646__auto____$3 = (function (){var G__26283 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26283) : p1.call(null,G__26283));
})();
if(cljs.core.truth_(and__15646__auto____$3)){
var and__15646__auto____$4 = (function (){var G__26285 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26285) : p2.call(null,G__26285));
})();
if(cljs.core.truth_(and__15646__auto____$4)){
var and__15646__auto____$5 = (function (){var G__26287 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26287) : p3.call(null,G__26287));
})();
if(cljs.core.truth_(and__15646__auto____$5)){
var and__15646__auto____$6 = (function (){var G__26289 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26289) : p1.call(null,G__26289));
})();
if(cljs.core.truth_(and__15646__auto____$6)){
var and__15646__auto____$7 = (function (){var G__26291 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26291) : p2.call(null,G__26291));
})();
if(cljs.core.truth_(and__15646__auto____$7)){
var G__26292 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26292) : p3.call(null,G__26292));
} else {
return and__15646__auto____$7;
}
} else {
return and__15646__auto____$6;
}
} else {
return and__15646__auto____$5;
}
} else {
return and__15646__auto____$4;
}
} else {
return and__15646__auto____$3;
}
} else {
return and__15646__auto____$2;
}
} else {
return and__15646__auto____$1;
}
} else {
return and__15646__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__26337__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__25938_SHARP_){
var and__15646__auto__ = (function (){var G__26299 = p1__25938_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26299) : p1.call(null,G__26299));
})();
if(cljs.core.truth_(and__15646__auto__)){
var and__15646__auto____$1 = (function (){var G__26301 = p1__25938_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26301) : p2.call(null,G__26301));
})();
if(cljs.core.truth_(and__15646__auto____$1)){
var G__26302 = p1__25938_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26302) : p3.call(null,G__26302));
} else {
return and__15646__auto____$1;
}
} else {
return and__15646__auto__;
}
}),args)));
};
var G__26337 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26338__i = 0, G__26338__a = new Array(arguments.length -  3);
while (G__26338__i < G__26338__a.length) {G__26338__a[G__26338__i] = arguments[G__26338__i + 3]; ++G__26338__i;}
  args = new cljs.core.IndexedSeq(G__26338__a,0);
} 
return G__26337__delegate.call(this,x,y,z,args);};
G__26337.cljs$lang$maxFixedArity = 3;
G__26337.cljs$lang$applyTo = (function (arglist__26339){
var x = cljs.core.first(arglist__26339);
arglist__26339 = cljs.core.next(arglist__26339);
var y = cljs.core.first(arglist__26339);
arglist__26339 = cljs.core.next(arglist__26339);
var z = cljs.core.first(arglist__26339);
var args = cljs.core.rest(arglist__26339);
return G__26337__delegate(x,y,z,args);
});
G__26337.cljs$core$IFn$_invoke$arity$variadic = G__26337__delegate;
return G__26337;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__26340 = null;
if (arguments.length > 3) {
var G__26341__i = 0, G__26341__a = new Array(arguments.length -  3);
while (G__26341__i < G__26341__a.length) {G__26341__a[G__26341__i] = arguments[G__26341__i + 3]; ++G__26341__i;}
G__26340 = new cljs.core.IndexedSeq(G__26341__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26340);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__26342__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__25939_SHARP_){
var G__26318 = x;
return (p1__25939_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25939_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26318) : p1__25939_SHARP_.call(null,G__26318));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__25940_SHARP_){
var and__15646__auto__ = (function (){var G__26320 = x;
return (p1__25940_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25940_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26320) : p1__25940_SHARP_.call(null,G__26320));
})();
if(cljs.core.truth_(and__15646__auto__)){
var G__26321 = y;
return (p1__25940_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25940_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26321) : p1__25940_SHARP_.call(null,G__26321));
} else {
return and__15646__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__25941_SHARP_){
var and__15646__auto__ = (function (){var G__26323 = x;
return (p1__25941_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25941_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26323) : p1__25941_SHARP_.call(null,G__26323));
})();
if(cljs.core.truth_(and__15646__auto__)){
var and__15646__auto____$1 = (function (){var G__26325 = y;
return (p1__25941_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25941_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26325) : p1__25941_SHARP_.call(null,G__26325));
})();
if(cljs.core.truth_(and__15646__auto____$1)){
var G__26326 = z;
return (p1__25941_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25941_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26326) : p1__25941_SHARP_.call(null,G__26326));
} else {
return and__15646__auto____$1;
}
} else {
return and__15646__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__26343__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__25942_SHARP_){
return cljs.core.every_QMARK_(p1__25942_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__26343 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26344__i = 0, G__26344__a = new Array(arguments.length -  3);
while (G__26344__i < G__26344__a.length) {G__26344__a[G__26344__i] = arguments[G__26344__i + 3]; ++G__26344__i;}
  args = new cljs.core.IndexedSeq(G__26344__a,0);
} 
return G__26343__delegate.call(this,x,y,z,args);};
G__26343.cljs$lang$maxFixedArity = 3;
G__26343.cljs$lang$applyTo = (function (arglist__26345){
var x = cljs.core.first(arglist__26345);
arglist__26345 = cljs.core.next(arglist__26345);
var y = cljs.core.first(arglist__26345);
arglist__26345 = cljs.core.next(arglist__26345);
var z = cljs.core.first(arglist__26345);
var args = cljs.core.rest(arglist__26345);
return G__26343__delegate(x,y,z,args);
});
G__26343.cljs$core$IFn$_invoke$arity$variadic = G__26343__delegate;
return G__26343;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__26346 = null;
if (arguments.length > 3) {
var G__26347__i = 0, G__26347__a = new Array(arguments.length -  3);
while (G__26347__i < G__26347__a.length) {G__26347__a[G__26347__i] = arguments[G__26347__i + 3]; ++G__26347__i;}
G__26346 = new cljs.core.IndexedSeq(G__26347__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26346);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__26342 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__26348__i = 0, G__26348__a = new Array(arguments.length -  3);
while (G__26348__i < G__26348__a.length) {G__26348__a[G__26348__i] = arguments[G__26348__i + 3]; ++G__26348__i;}
  ps = new cljs.core.IndexedSeq(G__26348__a,0);
} 
return G__26342__delegate.call(this,p1,p2,p3,ps);};
G__26342.cljs$lang$maxFixedArity = 3;
G__26342.cljs$lang$applyTo = (function (arglist__26349){
var p1 = cljs.core.first(arglist__26349);
arglist__26349 = cljs.core.next(arglist__26349);
var p2 = cljs.core.first(arglist__26349);
arglist__26349 = cljs.core.next(arglist__26349);
var p3 = cljs.core.first(arglist__26349);
var ps = cljs.core.rest(arglist__26349);
return G__26342__delegate(p1,p2,p3,ps);
});
G__26342.cljs$core$IFn$_invoke$arity$variadic = G__26342__delegate;
return G__26342;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__26350 = null;
if (arguments.length > 3) {
var G__26351__i = 0, G__26351__a = new Array(arguments.length -  3);
while (G__26351__i < G__26351__a.length) {G__26351__a[G__26351__i] = arguments[G__26351__i + 3]; ++G__26351__i;}
G__26350 = new cljs.core.IndexedSeq(G__26351__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__26350);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__26557 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26557) : p.call(null,G__26557));
});
var sp1__2 = (function (x,y){
var or__15658__auto__ = (function (){var G__26559 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26559) : p.call(null,G__26559));
})();
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
var G__26560 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26560) : p.call(null,G__26560));
}
});
var sp1__3 = (function (x,y,z){
var or__15658__auto__ = (function (){var G__26562 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26562) : p.call(null,G__26562));
})();
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (function (){var G__26564 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26564) : p.call(null,G__26564));
})();
if(cljs.core.truth_(or__15658__auto____$1)){
return or__15658__auto____$1;
} else {
var G__26565 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26565) : p.call(null,G__26565));
}
}
});
var sp1__4 = (function() { 
var G__26726__delegate = function (x,y,z,args){
var or__15658__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__26726 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26727__i = 0, G__26727__a = new Array(arguments.length -  3);
while (G__26727__i < G__26727__a.length) {G__26727__a[G__26727__i] = arguments[G__26727__i + 3]; ++G__26727__i;}
  args = new cljs.core.IndexedSeq(G__26727__a,0);
} 
return G__26726__delegate.call(this,x,y,z,args);};
G__26726.cljs$lang$maxFixedArity = 3;
G__26726.cljs$lang$applyTo = (function (arglist__26728){
var x = cljs.core.first(arglist__26728);
arglist__26728 = cljs.core.next(arglist__26728);
var y = cljs.core.first(arglist__26728);
arglist__26728 = cljs.core.next(arglist__26728);
var z = cljs.core.first(arglist__26728);
var args = cljs.core.rest(arglist__26728);
return G__26726__delegate(x,y,z,args);
});
G__26726.cljs$core$IFn$_invoke$arity$variadic = G__26726__delegate;
return G__26726;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__26729 = null;
if (arguments.length > 3) {
var G__26730__i = 0, G__26730__a = new Array(arguments.length -  3);
while (G__26730__i < G__26730__a.length) {G__26730__a[G__26730__i] = arguments[G__26730__i + 3]; ++G__26730__i;}
G__26729 = new cljs.core.IndexedSeq(G__26730__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26729);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__15658__auto__ = (function (){var G__26597 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26597) : p1.call(null,G__26597));
})();
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
var G__26598 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26598) : p2.call(null,G__26598));
}
});
var sp2__2 = (function (x,y){
var or__15658__auto__ = (function (){var G__26600 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26600) : p1.call(null,G__26600));
})();
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (function (){var G__26602 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26602) : p1.call(null,G__26602));
})();
if(cljs.core.truth_(or__15658__auto____$1)){
return or__15658__auto____$1;
} else {
var or__15658__auto____$2 = (function (){var G__26604 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26604) : p2.call(null,G__26604));
})();
if(cljs.core.truth_(or__15658__auto____$2)){
return or__15658__auto____$2;
} else {
var G__26605 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26605) : p2.call(null,G__26605));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__15658__auto__ = (function (){var G__26607 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26607) : p1.call(null,G__26607));
})();
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (function (){var G__26609 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26609) : p1.call(null,G__26609));
})();
if(cljs.core.truth_(or__15658__auto____$1)){
return or__15658__auto____$1;
} else {
var or__15658__auto____$2 = (function (){var G__26611 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26611) : p1.call(null,G__26611));
})();
if(cljs.core.truth_(or__15658__auto____$2)){
return or__15658__auto____$2;
} else {
var or__15658__auto____$3 = (function (){var G__26613 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26613) : p2.call(null,G__26613));
})();
if(cljs.core.truth_(or__15658__auto____$3)){
return or__15658__auto____$3;
} else {
var or__15658__auto____$4 = (function (){var G__26615 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26615) : p2.call(null,G__26615));
})();
if(cljs.core.truth_(or__15658__auto____$4)){
return or__15658__auto____$4;
} else {
var G__26616 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26616) : p2.call(null,G__26616));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__26731__delegate = function (x,y,z,args){
var or__15658__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return cljs.core.some(((function (or__15658__auto__){
return (function (p1__26352_SHARP_){
var or__15658__auto____$1 = (function (){var G__26618 = p1__26352_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26618) : p1.call(null,G__26618));
})();
if(cljs.core.truth_(or__15658__auto____$1)){
return or__15658__auto____$1;
} else {
var G__26619 = p1__26352_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26619) : p2.call(null,G__26619));
}
});})(or__15658__auto__))
,args);
}
};
var G__26731 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26732__i = 0, G__26732__a = new Array(arguments.length -  3);
while (G__26732__i < G__26732__a.length) {G__26732__a[G__26732__i] = arguments[G__26732__i + 3]; ++G__26732__i;}
  args = new cljs.core.IndexedSeq(G__26732__a,0);
} 
return G__26731__delegate.call(this,x,y,z,args);};
G__26731.cljs$lang$maxFixedArity = 3;
G__26731.cljs$lang$applyTo = (function (arglist__26733){
var x = cljs.core.first(arglist__26733);
arglist__26733 = cljs.core.next(arglist__26733);
var y = cljs.core.first(arglist__26733);
arglist__26733 = cljs.core.next(arglist__26733);
var z = cljs.core.first(arglist__26733);
var args = cljs.core.rest(arglist__26733);
return G__26731__delegate(x,y,z,args);
});
G__26731.cljs$core$IFn$_invoke$arity$variadic = G__26731__delegate;
return G__26731;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__26734 = null;
if (arguments.length > 3) {
var G__26735__i = 0, G__26735__a = new Array(arguments.length -  3);
while (G__26735__i < G__26735__a.length) {G__26735__a[G__26735__i] = arguments[G__26735__i + 3]; ++G__26735__i;}
G__26734 = new cljs.core.IndexedSeq(G__26735__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26734);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__15658__auto__ = (function (){var G__26665 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26665) : p1.call(null,G__26665));
})();
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (function (){var G__26667 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26667) : p2.call(null,G__26667));
})();
if(cljs.core.truth_(or__15658__auto____$1)){
return or__15658__auto____$1;
} else {
var G__26668 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26668) : p3.call(null,G__26668));
}
}
});
var sp3__2 = (function (x,y){
var or__15658__auto__ = (function (){var G__26670 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26670) : p1.call(null,G__26670));
})();
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (function (){var G__26672 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26672) : p2.call(null,G__26672));
})();
if(cljs.core.truth_(or__15658__auto____$1)){
return or__15658__auto____$1;
} else {
var or__15658__auto____$2 = (function (){var G__26674 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26674) : p3.call(null,G__26674));
})();
if(cljs.core.truth_(or__15658__auto____$2)){
return or__15658__auto____$2;
} else {
var or__15658__auto____$3 = (function (){var G__26676 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26676) : p1.call(null,G__26676));
})();
if(cljs.core.truth_(or__15658__auto____$3)){
return or__15658__auto____$3;
} else {
var or__15658__auto____$4 = (function (){var G__26678 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26678) : p2.call(null,G__26678));
})();
if(cljs.core.truth_(or__15658__auto____$4)){
return or__15658__auto____$4;
} else {
var G__26679 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26679) : p3.call(null,G__26679));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__15658__auto__ = (function (){var G__26681 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26681) : p1.call(null,G__26681));
})();
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (function (){var G__26683 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26683) : p2.call(null,G__26683));
})();
if(cljs.core.truth_(or__15658__auto____$1)){
return or__15658__auto____$1;
} else {
var or__15658__auto____$2 = (function (){var G__26685 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26685) : p3.call(null,G__26685));
})();
if(cljs.core.truth_(or__15658__auto____$2)){
return or__15658__auto____$2;
} else {
var or__15658__auto____$3 = (function (){var G__26687 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26687) : p1.call(null,G__26687));
})();
if(cljs.core.truth_(or__15658__auto____$3)){
return or__15658__auto____$3;
} else {
var or__15658__auto____$4 = (function (){var G__26689 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26689) : p2.call(null,G__26689));
})();
if(cljs.core.truth_(or__15658__auto____$4)){
return or__15658__auto____$4;
} else {
var or__15658__auto____$5 = (function (){var G__26691 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26691) : p3.call(null,G__26691));
})();
if(cljs.core.truth_(or__15658__auto____$5)){
return or__15658__auto____$5;
} else {
var or__15658__auto____$6 = (function (){var G__26693 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26693) : p1.call(null,G__26693));
})();
if(cljs.core.truth_(or__15658__auto____$6)){
return or__15658__auto____$6;
} else {
var or__15658__auto____$7 = (function (){var G__26695 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26695) : p2.call(null,G__26695));
})();
if(cljs.core.truth_(or__15658__auto____$7)){
return or__15658__auto____$7;
} else {
var G__26696 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26696) : p3.call(null,G__26696));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__26736__delegate = function (x,y,z,args){
var or__15658__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return cljs.core.some(((function (or__15658__auto__){
return (function (p1__26353_SHARP_){
var or__15658__auto____$1 = (function (){var G__26698 = p1__26353_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26698) : p1.call(null,G__26698));
})();
if(cljs.core.truth_(or__15658__auto____$1)){
return or__15658__auto____$1;
} else {
var or__15658__auto____$2 = (function (){var G__26700 = p1__26353_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26700) : p2.call(null,G__26700));
})();
if(cljs.core.truth_(or__15658__auto____$2)){
return or__15658__auto____$2;
} else {
var G__26701 = p1__26353_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26701) : p3.call(null,G__26701));
}
}
});})(or__15658__auto__))
,args);
}
};
var G__26736 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26737__i = 0, G__26737__a = new Array(arguments.length -  3);
while (G__26737__i < G__26737__a.length) {G__26737__a[G__26737__i] = arguments[G__26737__i + 3]; ++G__26737__i;}
  args = new cljs.core.IndexedSeq(G__26737__a,0);
} 
return G__26736__delegate.call(this,x,y,z,args);};
G__26736.cljs$lang$maxFixedArity = 3;
G__26736.cljs$lang$applyTo = (function (arglist__26738){
var x = cljs.core.first(arglist__26738);
arglist__26738 = cljs.core.next(arglist__26738);
var y = cljs.core.first(arglist__26738);
arglist__26738 = cljs.core.next(arglist__26738);
var z = cljs.core.first(arglist__26738);
var args = cljs.core.rest(arglist__26738);
return G__26736__delegate(x,y,z,args);
});
G__26736.cljs$core$IFn$_invoke$arity$variadic = G__26736__delegate;
return G__26736;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__26739 = null;
if (arguments.length > 3) {
var G__26740__i = 0, G__26740__a = new Array(arguments.length -  3);
while (G__26740__i < G__26740__a.length) {G__26740__a[G__26740__i] = arguments[G__26740__i + 3]; ++G__26740__i;}
G__26739 = new cljs.core.IndexedSeq(G__26740__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26739);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__26741__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__26354_SHARP_){
var G__26717 = x;
return (p1__26354_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26354_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26717) : p1__26354_SHARP_.call(null,G__26717));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__26355_SHARP_){
var or__15658__auto__ = (function (){var G__26719 = x;
return (p1__26355_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26355_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26719) : p1__26355_SHARP_.call(null,G__26719));
})();
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
var G__26720 = y;
return (p1__26355_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26355_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26720) : p1__26355_SHARP_.call(null,G__26720));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__26356_SHARP_){
var or__15658__auto__ = (function (){var G__26722 = x;
return (p1__26356_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26356_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26722) : p1__26356_SHARP_.call(null,G__26722));
})();
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (function (){var G__26724 = y;
return (p1__26356_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26356_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26724) : p1__26356_SHARP_.call(null,G__26724));
})();
if(cljs.core.truth_(or__15658__auto____$1)){
return or__15658__auto____$1;
} else {
var G__26725 = z;
return (p1__26356_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26356_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26725) : p1__26356_SHARP_.call(null,G__26725));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__26742__delegate = function (x,y,z,args){
var or__15658__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return cljs.core.some(((function (or__15658__auto__,ps__$1){
return (function (p1__26357_SHARP_){
return cljs.core.some(p1__26357_SHARP_,args);
});})(or__15658__auto__,ps__$1))
,ps__$1);
}
};
var G__26742 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26743__i = 0, G__26743__a = new Array(arguments.length -  3);
while (G__26743__i < G__26743__a.length) {G__26743__a[G__26743__i] = arguments[G__26743__i + 3]; ++G__26743__i;}
  args = new cljs.core.IndexedSeq(G__26743__a,0);
} 
return G__26742__delegate.call(this,x,y,z,args);};
G__26742.cljs$lang$maxFixedArity = 3;
G__26742.cljs$lang$applyTo = (function (arglist__26744){
var x = cljs.core.first(arglist__26744);
arglist__26744 = cljs.core.next(arglist__26744);
var y = cljs.core.first(arglist__26744);
arglist__26744 = cljs.core.next(arglist__26744);
var z = cljs.core.first(arglist__26744);
var args = cljs.core.rest(arglist__26744);
return G__26742__delegate(x,y,z,args);
});
G__26742.cljs$core$IFn$_invoke$arity$variadic = G__26742__delegate;
return G__26742;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__26745 = null;
if (arguments.length > 3) {
var G__26746__i = 0, G__26746__a = new Array(arguments.length -  3);
while (G__26746__i < G__26746__a.length) {G__26746__a[G__26746__i] = arguments[G__26746__i + 3]; ++G__26746__i;}
G__26745 = new cljs.core.IndexedSeq(G__26746__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26745);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__26741 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__26747__i = 0, G__26747__a = new Array(arguments.length -  3);
while (G__26747__i < G__26747__a.length) {G__26747__a[G__26747__i] = arguments[G__26747__i + 3]; ++G__26747__i;}
  ps = new cljs.core.IndexedSeq(G__26747__a,0);
} 
return G__26741__delegate.call(this,p1,p2,p3,ps);};
G__26741.cljs$lang$maxFixedArity = 3;
G__26741.cljs$lang$applyTo = (function (arglist__26748){
var p1 = cljs.core.first(arglist__26748);
arglist__26748 = cljs.core.next(arglist__26748);
var p2 = cljs.core.first(arglist__26748);
arglist__26748 = cljs.core.next(arglist__26748);
var p3 = cljs.core.first(arglist__26748);
var ps = cljs.core.rest(arglist__26748);
return G__26741__delegate(p1,p2,p3,ps);
});
G__26741.cljs$core$IFn$_invoke$arity$variadic = G__26741__delegate;
return G__26741;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__26749 = null;
if (arguments.length > 3) {
var G__26750__i = 0, G__26750__a = new Array(arguments.length -  3);
while (G__26750__i < G__26750__a.length) {G__26750__a[G__26750__i] = arguments[G__26750__i + 3]; ++G__26750__i;}
G__26749 = new cljs.core.IndexedSeq(G__26750__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__26749);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__26805 = null;
var G__26805__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26805__1 = (function (result){
var G__26791 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26791) : rf.call(null,G__26791));
});
var G__26805__2 = (function (result,input){
var G__26792 = result;
var G__26793 = (function (){var G__26794 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26794) : f.call(null,G__26794));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26792,G__26793) : rf.call(null,G__26792,G__26793));
});
var G__26805__3 = (function() { 
var G__26806__delegate = function (result,input,inputs){
var G__26795 = result;
var G__26796 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26795,G__26796) : rf.call(null,G__26795,G__26796));
};
var G__26806 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__26807__i = 0, G__26807__a = new Array(arguments.length -  2);
while (G__26807__i < G__26807__a.length) {G__26807__a[G__26807__i] = arguments[G__26807__i + 2]; ++G__26807__i;}
  inputs = new cljs.core.IndexedSeq(G__26807__a,0);
} 
return G__26806__delegate.call(this,result,input,inputs);};
G__26806.cljs$lang$maxFixedArity = 2;
G__26806.cljs$lang$applyTo = (function (arglist__26808){
var result = cljs.core.first(arglist__26808);
arglist__26808 = cljs.core.next(arglist__26808);
var input = cljs.core.first(arglist__26808);
var inputs = cljs.core.rest(arglist__26808);
return G__26806__delegate(result,input,inputs);
});
G__26806.cljs$core$IFn$_invoke$arity$variadic = G__26806__delegate;
return G__26806;
})()
;
G__26805 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__26805__0.call(this);
case 1:
return G__26805__1.call(this,result);
case 2:
return G__26805__2.call(this,result,input);
default:
var G__26809 = null;
if (arguments.length > 2) {
var G__26810__i = 0, G__26810__a = new Array(arguments.length -  2);
while (G__26810__i < G__26810__a.length) {G__26810__a[G__26810__i] = arguments[G__26810__i + 2]; ++G__26810__i;}
G__26809 = new cljs.core.IndexedSeq(G__26810__a,0);
}
return G__26805__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__26809);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26805.cljs$lang$maxFixedArity = 2;
G__26805.cljs$lang$applyTo = G__26805__3.cljs$lang$applyTo;
G__26805.cljs$core$IFn$_invoke$arity$0 = G__26805__0;
G__26805.cljs$core$IFn$_invoke$arity$1 = G__26805__1;
G__26805.cljs$core$IFn$_invoke$arity$2 = G__26805__2;
G__26805.cljs$core$IFn$_invoke$arity$variadic = G__26805__3.cljs$core$IFn$_invoke$arity$variadic;
return G__26805;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__16545__auto___26811 = size;
var i_26812 = (0);
while(true){
if((i_26812 < n__16545__auto___26811)){
cljs.core.chunk_append(b,(function (){var G__26797 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_26812);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26797) : f.call(null,G__26797));
})());

var G__26813 = (i_26812 + (1));
i_26812 = G__26813;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__26798 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26798) : f.call(null,G__26798));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__26799 = cljs.core.first(s1);
var G__26800 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26799,G__26800) : f.call(null,G__26799,G__26800));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__26801 = cljs.core.first(s1);
var G__26802 = cljs.core.first(s2);
var G__26803 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26801,G__26802,G__26803) : f.call(null,G__26801,G__26802,G__26803));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__26814__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__26751_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__26751_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__26814 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__26815__i = 0, G__26815__a = new Array(arguments.length -  4);
while (G__26815__i < G__26815__a.length) {G__26815__a[G__26815__i] = arguments[G__26815__i + 4]; ++G__26815__i;}
  colls = new cljs.core.IndexedSeq(G__26815__a,0);
} 
return G__26814__delegate.call(this,f,c1,c2,c3,colls);};
G__26814.cljs$lang$maxFixedArity = 4;
G__26814.cljs$lang$applyTo = (function (arglist__26816){
var f = cljs.core.first(arglist__26816);
arglist__26816 = cljs.core.next(arglist__26816);
var c1 = cljs.core.first(arglist__26816);
arglist__26816 = cljs.core.next(arglist__26816);
var c2 = cljs.core.first(arglist__26816);
arglist__26816 = cljs.core.next(arglist__26816);
var c3 = cljs.core.first(arglist__26816);
var colls = cljs.core.rest(arglist__26816);
return G__26814__delegate(f,c1,c2,c3,colls);
});
G__26814.cljs$core$IFn$_invoke$arity$variadic = G__26814__delegate;
return G__26814;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__26817 = null;
if (arguments.length > 4) {
var G__26818__i = 0, G__26818__a = new Array(arguments.length -  4);
while (G__26818__i < G__26818__a.length) {G__26818__a[G__26818__i] = arguments[G__26818__i + 4]; ++G__26818__i;}
G__26817 = new cljs.core.IndexedSeq(G__26818__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__26817);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__26827 = null;
var G__26827__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26827__1 = (function (result){
var G__26824 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26824) : rf.call(null,G__26824));
});
var G__26827__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__26825 = result;
var G__26826 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26825,G__26826) : rf.call(null,G__26825,G__26826));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__26827 = function(result,input){
switch(arguments.length){
case 0:
return G__26827__0.call(this);
case 1:
return G__26827__1.call(this,result);
case 2:
return G__26827__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26827.cljs$core$IFn$_invoke$arity$0 = G__26827__0;
G__26827.cljs$core$IFn$_invoke$arity$1 = G__26827__1;
G__26827.cljs$core$IFn$_invoke$arity$2 = G__26827__2;
return G__26827;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__26834 = null;
var G__26834__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26834__1 = (function (result){
var G__26831 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26831) : rf.call(null,G__26831));
});
var G__26834__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__26832 = result;
var G__26833 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26832,G__26833) : rf.call(null,G__26832,G__26833));
}
});
G__26834 = function(result,input){
switch(arguments.length){
case 0:
return G__26834__0.call(this);
case 1:
return G__26834__1.call(this,result);
case 2:
return G__26834__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26834.cljs$core$IFn$_invoke$arity$0 = G__26834__0;
G__26834.cljs$core$IFn$_invoke$arity$1 = G__26834__1;
G__26834.cljs$core$IFn$_invoke$arity$2 = G__26834__2;
return G__26834;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__26835 = (n__$1 - (1));
var G__26836 = cljs.core.rest(s);
n__$1 = G__26835;
coll__$1 = G__26836;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__26839 = cljs.core.next(s);
var G__26840 = cljs.core.next(lead);
s = G__26839;
lead = G__26840;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__26853 = null;
var G__26853__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26853__1 = (function (result){
var G__26847 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26847) : rf.call(null,G__26847));
});
var G__26853__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__15646__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__15646__auto__)){
var G__26848 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26848) : pred.call(null,G__26848));
} else {
return and__15646__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__26849 = result;
var G__26850 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26849,G__26850) : rf.call(null,G__26849,G__26850));
}
});
G__26853 = function(result,input){
switch(arguments.length){
case 0:
return G__26853__0.call(this);
case 1:
return G__26853__1.call(this,result);
case 2:
return G__26853__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26853.cljs$core$IFn$_invoke$arity$0 = G__26853__0;
G__26853.cljs$core$IFn$_invoke$arity$1 = G__26853__1;
G__26853.cljs$core$IFn$_invoke$arity$2 = G__26853__2;
return G__26853;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__15646__auto__ = s;
if(and__15646__auto__){
var G__26852 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__26852) : pred__$1.call(null,G__26852));
} else {
return and__15646__auto__;
}
})())){
var G__26854 = pred__$1;
var G__26855 = cljs.core.rest(s);
pred__$1 = G__26854;
coll__$1 = G__26855;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__26864 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26864) : f.call(null,G__26864));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__26867__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__26867 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__26868__i = 0, G__26868__a = new Array(arguments.length -  2);
while (G__26868__i < G__26868__a.length) {G__26868__a[G__26868__i] = arguments[G__26868__i + 2]; ++G__26868__i;}
  colls = new cljs.core.IndexedSeq(G__26868__a,0);
} 
return G__26867__delegate.call(this,c1,c2,colls);};
G__26867.cljs$lang$maxFixedArity = 2;
G__26867.cljs$lang$applyTo = (function (arglist__26869){
var c1 = cljs.core.first(arglist__26869);
arglist__26869 = cljs.core.next(arglist__26869);
var c2 = cljs.core.first(arglist__26869);
var colls = cljs.core.rest(arglist__26869);
return G__26867__delegate(c1,c2,colls);
});
G__26867.cljs$core$IFn$_invoke$arity$variadic = G__26867__delegate;
return G__26867;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__26870 = null;
if (arguments.length > 2) {
var G__26871__i = 0, G__26871__a = new Array(arguments.length -  2);
while (G__26871__i < G__26871__a.length) {G__26871__a[G__26871__i] = arguments[G__26871__i + 2]; ++G__26871__i;}
G__26870 = new cljs.core.IndexedSeq(G__26871__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__26870);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__26886 = null;
var G__26886__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26886__1 = (function (result){
var G__26879 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26879) : rf.call(null,G__26879));
});
var G__26886__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__26880 = result;
var G__26881 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26880,G__26881) : rf.call(null,G__26880,G__26881));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__26882 = sepr;
var G__26883 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26882,G__26883) : rf.call(null,G__26882,G__26883));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__26884 = result;
var G__26885 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26884,G__26885) : rf.call(null,G__26884,G__26885));
}
});
G__26886 = function(result,input){
switch(arguments.length){
case 0:
return G__26886__0.call(this);
case 1:
return G__26886__1.call(this,result);
case 2:
return G__26886__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26886.cljs$core$IFn$_invoke$arity$0 = G__26886__0;
G__26886.cljs$core$IFn$_invoke$arity$1 = G__26886__1;
G__26886.cljs$core$IFn$_invoke$arity$2 = G__26886__2;
return G__26886;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__26895__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__26895 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__26896__i = 0, G__26896__a = new Array(arguments.length -  1);
while (G__26896__i < G__26896__a.length) {G__26896__a[G__26896__i] = arguments[G__26896__i + 1]; ++G__26896__i;}
  colls = new cljs.core.IndexedSeq(G__26896__a,0);
} 
return G__26895__delegate.call(this,f,colls);};
G__26895.cljs$lang$maxFixedArity = 1;
G__26895.cljs$lang$applyTo = (function (arglist__26897){
var f = cljs.core.first(arglist__26897);
var colls = cljs.core.rest(arglist__26897);
return G__26895__delegate(f,colls);
});
G__26895.cljs$core$IFn$_invoke$arity$variadic = G__26895__delegate;
return G__26895;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__26898 = null;
if (arguments.length > 1) {
var G__26899__i = 0, G__26899__a = new Array(arguments.length -  1);
while (G__26899__i < G__26899__a.length) {G__26899__a[G__26899__i] = arguments[G__26899__i + 1]; ++G__26899__i;}
G__26898 = new cljs.core.IndexedSeq(G__26899__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__26898);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__26918 = null;
var G__26918__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26918__1 = (function (result){
var G__26912 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26912) : rf.call(null,G__26912));
});
var G__26918__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__26913 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26913) : pred.call(null,G__26913));
})())){
var G__26914 = result;
var G__26915 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26914,G__26915) : rf.call(null,G__26914,G__26915));
} else {
return result;
}
});
G__26918 = function(result,input){
switch(arguments.length){
case 0:
return G__26918__0.call(this);
case 1:
return G__26918__1.call(this,result);
case 2:
return G__26918__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26918.cljs$core$IFn$_invoke$arity$0 = G__26918__0;
G__26918.cljs$core$IFn$_invoke$arity$1 = G__26918__1;
G__26918.cljs$core$IFn$_invoke$arity$2 = G__26918__2;
return G__26918;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__16545__auto___26919 = size;
var i_26920 = (0);
while(true){
if((i_26920 < n__16545__auto___26919)){
if(cljs.core.truth_((function (){var G__26916 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_26920);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26916) : pred.call(null,G__26916));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_26920));
} else {
}

var G__26921 = (i_26920 + (1));
i_26920 = G__26921;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__26917 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26917) : pred.call(null,G__26917));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__26928 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__26928) : branch_QMARK_.call(null,G__26928));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__26929 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__26929) : children.call(null,G__26929));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__26930_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__26930_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__26933 = to;
if(G__26933){
var bit__16332__auto__ = (G__26933.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__16332__auto__) || (G__26933.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__26934 = to;
if(G__26934){
var bit__16332__auto__ = (G__26934.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__16332__auto__) || (G__26934.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__26936 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26936) : f.call(null,G__26936));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__26937__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__26937 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__26938__i = 0, G__26938__a = new Array(arguments.length -  4);
while (G__26938__i < G__26938__a.length) {G__26938__a[G__26938__i] = arguments[G__26938__i + 4]; ++G__26938__i;}
  colls = new cljs.core.IndexedSeq(G__26938__a,0);
} 
return G__26937__delegate.call(this,f,c1,c2,c3,colls);};
G__26937.cljs$lang$maxFixedArity = 4;
G__26937.cljs$lang$applyTo = (function (arglist__26939){
var f = cljs.core.first(arglist__26939);
arglist__26939 = cljs.core.next(arglist__26939);
var c1 = cljs.core.first(arglist__26939);
arglist__26939 = cljs.core.next(arglist__26939);
var c2 = cljs.core.first(arglist__26939);
arglist__26939 = cljs.core.next(arglist__26939);
var c3 = cljs.core.first(arglist__26939);
var colls = cljs.core.rest(arglist__26939);
return G__26937__delegate(f,c1,c2,c3,colls);
});
G__26937.cljs$core$IFn$_invoke$arity$variadic = G__26937__delegate;
return G__26937;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__26940 = null;
if (arguments.length > 4) {
var G__26941__i = 0, G__26941__a = new Array(arguments.length -  4);
while (G__26941__i < G__26941__a.length) {G__26941__a[G__26941__i] = arguments[G__26941__i + 4]; ++G__26941__i;}
G__26940 = new cljs.core.IndexedSeq(G__26941__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__26940);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__26943 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26943) : pred.call(null,G__26943));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__26958 = m__$1;
if(G__26958){
var bit__16339__auto__ = (G__26958.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__16339__auto__) || (G__26958.cljs$core$ILookup$)){
return true;
} else {
if((!G__26958.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__26958);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__26958);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__26959 = sentinel;
var G__26960 = m__$2;
var G__26961 = cljs.core.next(ks__$1);
sentinel = G__26959;
m__$1 = G__26960;
ks__$1 = G__26961;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__26962,v){
var vec__26967 = p__26962;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26967,(0),null);
var ks = cljs.core.nthnext(vec__26967,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__26968,f){
var vec__27006 = p__26968;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27006,(0),null);
var ks = cljs.core.nthnext(vec__27006,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27007 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27007) : f.call(null,G__27007));
})());
}
});
var update_in__4 = (function (m,p__26969,f,a){
var vec__27008 = p__26969;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27008,(0),null);
var ks = cljs.core.nthnext(vec__27008,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27009 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27010 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27009,G__27010) : f.call(null,G__27009,G__27010));
})());
}
});
var update_in__5 = (function (m,p__26970,f,a,b){
var vec__27011 = p__26970;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27011,(0),null);
var ks = cljs.core.nthnext(vec__27011,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27012 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27013 = a;
var G__27014 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27012,G__27013,G__27014) : f.call(null,G__27012,G__27013,G__27014));
})());
}
});
var update_in__6 = (function (m,p__26971,f,a,b,c){
var vec__27015 = p__26971;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27015,(0),null);
var ks = cljs.core.nthnext(vec__27015,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27016 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27017 = a;
var G__27018 = b;
var G__27019 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__27016,G__27017,G__27018,G__27019) : f.call(null,G__27016,G__27017,G__27018,G__27019));
})());
}
});
var update_in__7 = (function() { 
var G__27021__delegate = function (m,p__26972,f,a,b,c,args){
var vec__27020 = p__26972;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27020,(0),null);
var ks = cljs.core.nthnext(vec__27020,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__27021 = function (m,p__26972,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__27022__i = 0, G__27022__a = new Array(arguments.length -  6);
while (G__27022__i < G__27022__a.length) {G__27022__a[G__27022__i] = arguments[G__27022__i + 6]; ++G__27022__i;}
  args = new cljs.core.IndexedSeq(G__27022__a,0);
} 
return G__27021__delegate.call(this,m,p__26972,f,a,b,c,args);};
G__27021.cljs$lang$maxFixedArity = 6;
G__27021.cljs$lang$applyTo = (function (arglist__27023){
var m = cljs.core.first(arglist__27023);
arglist__27023 = cljs.core.next(arglist__27023);
var p__26972 = cljs.core.first(arglist__27023);
arglist__27023 = cljs.core.next(arglist__27023);
var f = cljs.core.first(arglist__27023);
arglist__27023 = cljs.core.next(arglist__27023);
var a = cljs.core.first(arglist__27023);
arglist__27023 = cljs.core.next(arglist__27023);
var b = cljs.core.first(arglist__27023);
arglist__27023 = cljs.core.next(arglist__27023);
var c = cljs.core.first(arglist__27023);
var args = cljs.core.rest(arglist__27023);
return G__27021__delegate(m,p__26972,f,a,b,c,args);
});
G__27021.cljs$core$IFn$_invoke$arity$variadic = G__27021__delegate;
return G__27021;
})()
;
update_in = function(m,p__26972,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__26972,f);
case 4:
return update_in__4.call(this,m,p__26972,f,a);
case 5:
return update_in__5.call(this,m,p__26972,f,a,b);
case 6:
return update_in__6.call(this,m,p__26972,f,a,b,c);
default:
var G__27024 = null;
if (arguments.length > 6) {
var G__27025__i = 0, G__27025__a = new Array(arguments.length -  6);
while (G__27025__i < G__27025__a.length) {G__27025__a[G__27025__i] = arguments[G__27025__i + 6]; ++G__27025__i;}
G__27024 = new cljs.core.IndexedSeq(G__27025__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__26972,f,a,b,c, G__27024);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27036 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27036) : f.call(null,G__27036));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27037 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27038 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27037,G__27038) : f.call(null,G__27037,G__27038));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27039 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27040 = x;
var G__27041 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27039,G__27040,G__27041) : f.call(null,G__27039,G__27040,G__27041));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27042 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27043 = x;
var G__27044 = y;
var G__27045 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__27042,G__27043,G__27044,G__27045) : f.call(null,G__27042,G__27043,G__27044,G__27045));
})());
});
var update__7 = (function() { 
var G__27046__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__27046 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__27047__i = 0, G__27047__a = new Array(arguments.length -  6);
while (G__27047__i < G__27047__a.length) {G__27047__a[G__27047__i] = arguments[G__27047__i + 6]; ++G__27047__i;}
  more = new cljs.core.IndexedSeq(G__27047__a,0);
} 
return G__27046__delegate.call(this,m,k,f,x,y,z,more);};
G__27046.cljs$lang$maxFixedArity = 6;
G__27046.cljs$lang$applyTo = (function (arglist__27048){
var m = cljs.core.first(arglist__27048);
arglist__27048 = cljs.core.next(arglist__27048);
var k = cljs.core.first(arglist__27048);
arglist__27048 = cljs.core.next(arglist__27048);
var f = cljs.core.first(arglist__27048);
arglist__27048 = cljs.core.next(arglist__27048);
var x = cljs.core.first(arglist__27048);
arglist__27048 = cljs.core.next(arglist__27048);
var y = cljs.core.first(arglist__27048);
arglist__27048 = cljs.core.next(arglist__27048);
var z = cljs.core.first(arglist__27048);
var more = cljs.core.rest(arglist__27048);
return G__27046__delegate(m,k,f,x,y,z,more);
});
G__27046.cljs$core$IFn$_invoke$arity$variadic = G__27046__delegate;
return G__27046;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__27049 = null;
if (arguments.length > 6) {
var G__27050__i = 0, G__27050__a = new Array(arguments.length -  6);
while (G__27050__i < G__27050__a.length) {G__27050__a[G__27050__i] = arguments[G__27050__i + 6]; ++G__27050__i;}
G__27049 = new cljs.core.IndexedSeq(G__27050__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__27049);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__27051 = (ll - (5));
var G__27052 = r;
ll = G__27051;
ret = G__27052;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__27057 = cljs.core.pv_aget(node,(0));
var G__27058 = (level - (5));
node = G__27057;
level = G__27058;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__27059 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__27060 = (level - (5));
node = G__27059;
level = G__27060;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__27070 = init__$2;
var G__27071 = (j + i);
var G__27072 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27070,G__27071,G__27072) : f.call(null,G__27070,G__27071,G__27072));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__27083 = (j + (1));
var G__27084 = init__$3;
j = G__27083;
init__$2 = G__27084;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27073 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27073) : cljs.core.deref.call(null,G__27073));
} else {
var G__27085 = (i + len);
var G__27086 = init__$2;
i = G__27085;
init__$1 = G__27086;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__27074 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__27074) : cljs.core.tv_editable_root.call(null,G__27074));
})(),(function (){var G__27075 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__27075) : cljs.core.tv_editable_tail.call(null,G__27075));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__27076 = init__$2;
var G__27077 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27076,G__27077) : f.call(null,G__27076,G__27077));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__27087 = (j + (1));
var G__27088 = init__$3;
j = G__27087;
init__$2 = G__27088;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27078 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27078) : cljs.core.deref.call(null,G__27078));
} else {
var G__27089 = (i + len);
var G__27090 = init__$2;
i = G__27089;
init__$1 = G__27090;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__27079 = coll__$1;
var G__27080 = cljs.core.first_array_for_longvec(coll__$1);
var G__27081 = (0);
var G__27082 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__27079,G__27080,G__27081,G__27082) : cljs.core.chunked_seq.call(null,G__27079,G__27080,G__27081,G__27082));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__16545__auto___27091 = len;
var i_27092 = (0);
while(true){
if((i_27092 < n__16545__auto___27091)){
(new_tail[i_27092] = (self__.tail[i_27092]));

var G__27093 = (i_27092 + (1));
i_27092 = G__27093;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__27094 = null;
var G__27094__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__27094__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__27094 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27094__2.call(this,self__,k);
case 3:
return G__27094__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27094.cljs$core$IFn$_invoke$arity$2 = G__27094__2;
G__27094.cljs$core$IFn$_invoke$arity$3 = G__27094__3;
return G__27094;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args27069){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27069)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__27095 = (i + (1));
var G__27096 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__27095;
out = G__27096;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__27097__i = 0, G__27097__a = new Array(arguments.length -  0);
while (G__27097__i < G__27097__a.length) {G__27097__a[G__27097__i] = arguments[G__27097__i + 0]; ++G__27097__i;}
  args = new cljs.core.IndexedSeq(G__27097__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__27098){
var args = cljs.core.seq(arglist__27098);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__27099 = self__.vec;
var G__27100 = self__.node;
var G__27101 = self__.i;
var G__27102 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__27099,G__27100,G__27101,G__27102) : cljs.core.chunked_seq.call(null,G__27099,G__27100,G__27101,G__27102));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__27103 = self__.vec;
var G__27104 = (self__.i + self__.off);
var G__27105 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__27103,G__27104,G__27105) : cljs.core.subvec.call(null,G__27103,G__27104,G__27105));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__27106 = self__.vec;
var G__27107 = (self__.i + self__.off);
var G__27108 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__27106,G__27107,G__27108) : cljs.core.subvec.call(null,G__27106,G__27107,G__27108));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__27109 = self__.vec;
var G__27110 = self__.node;
var G__27111 = self__.i;
var G__27112 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__27109,G__27110,G__27111,G__27112) : cljs.core.chunked_seq.call(null,G__27109,G__27110,G__27111,G__27112));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__27113 = self__.vec;
var G__27114 = cljs.core.unchecked_array_for(self__.vec,end);
var G__27115 = end;
var G__27116 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__27113,G__27114,G__27115,G__27116) : cljs.core.chunked_seq.call(null,G__27113,G__27114,G__27115,G__27116));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__27117 = self__.vec;
var G__27118 = self__.node;
var G__27119 = self__.i;
var G__27120 = self__.off;
var G__27121 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__27117,G__27118,G__27119,G__27120,G__27121) : cljs.core.chunked_seq.call(null,G__27117,G__27118,G__27119,G__27120,G__27121));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__27122 = self__.vec;
var G__27123 = cljs.core.unchecked_array_for(self__.vec,end);
var G__27124 = end;
var G__27125 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__27122,G__27123,G__27124,G__27125) : cljs.core.chunked_seq.call(null,G__27122,G__27123,G__27124,G__27125));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__27127 = self__.meta;
var G__27128 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__27129 = self__.start;
var G__27130 = (function (){var x__15975__auto__ = self__.end;
var y__15976__auto__ = (v_pos + (1));
return ((x__15975__auto__ > y__15976__auto__) ? x__15975__auto__ : y__15976__auto__);
})();
var G__27131 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__27127,G__27128,G__27129,G__27130,G__27131) : cljs.core.build_subvec.call(null,G__27127,G__27128,G__27129,G__27130,G__27131));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__27132 = self__.meta;
var G__27133 = self__.v;
var G__27134 = self__.start;
var G__27135 = (self__.end - (1));
var G__27136 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__27132,G__27133,G__27134,G__27135,G__27136) : cljs.core.build_subvec.call(null,G__27132,G__27133,G__27134,G__27135,G__27136));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__27138 = meta__$1;
var G__27139 = self__.v;
var G__27140 = self__.start;
var G__27141 = self__.end;
var G__27142 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__27138,G__27139,G__27140,G__27141,G__27142) : cljs.core.build_subvec.call(null,G__27138,G__27139,G__27140,G__27141,G__27142));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__27143 = self__.meta;
var G__27144 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__27145 = self__.start;
var G__27146 = (self__.end + (1));
var G__27147 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__27143,G__27144,G__27145,G__27146,G__27147) : cljs.core.build_subvec.call(null,G__27143,G__27144,G__27145,G__27146,G__27147));
});

cljs.core.Subvec.prototype.call = (function() {
var G__27148 = null;
var G__27148__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__27148__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__27148 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27148__2.call(this,self__,k);
case 3:
return G__27148__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27148.cljs$core$IFn$_invoke$arity$2 = G__27148__2;
G__27148.cljs$core$IFn$_invoke$arity$3 = G__27148__3;
return G__27148;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args27126){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27126)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__27149 = meta;
var G__27150 = v.v;
var G__27151 = (v.start + start);
var G__27152 = (v.start + end);
var G__27153 = __hash;
meta = G__27149;
v = G__27150;
start = G__27151;
end = G__27152;
__hash = G__27153;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj27160 = {};
return obj27160;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__27168 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__27169 = (level - (5));
node = G__27168;
level = G__27169;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__27173 = null;
var G__27173__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27173__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27173 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27173__2.call(this,self__,k);
case 3:
return G__27173__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27173.cljs$core$IFn$_invoke$arity$2 = G__27173__2;
G__27173.cljs$core$IFn$_invoke$arity$3 = G__27173__3;
return G__27173;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args27170){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27170)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__15658__auto__ = self__.front;
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__15658__auto__ = self__.rear;
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__27174 = (i + incr);
i = G__27174;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__27175 = (i + (1));
var G__27176 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__27175;
out = G__27176;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj27180 = {};
return obj27180;
})();
var l = ks.length;
var i_27181 = (0);
while(true){
if((i_27181 < l)){
var k_27182 = (ks[i_27181]);
(new_obj[k_27182] = (obj[k_27182]));

var G__27183 = (i_27181 + (1));
i_27181 = G__27183;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__15646__auto__ = (function (){var G__27187 = k;
return goog.isString(G__27187);
})();
if(cljs.core.truth_(and__15646__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__15646__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__27188 = init__$1;
var G__27189 = k;
var G__27190 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27188,G__27189,G__27190) : f.call(null,G__27188,G__27189,G__27190));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27191 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27191) : cljs.core.deref.call(null,G__27191));
} else {
var G__27197 = cljs.core.rest(keys__$1);
var G__27198 = init__$2;
keys__$1 = G__27197;
init__$1 = G__27198;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__15646__auto__ = (function (){var G__27193 = k;
return goog.isString(G__27193);
})();
if(cljs.core.truth_(and__15646__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__15646__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__27194 = k;
return goog.isString(G__27194);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__15646__auto__ = (function (){var G__27196 = k;
return goog.isString(G__27196);
})();
if(cljs.core.truth_(and__15646__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__15646__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__27184_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__27184_SHARP_,(self__.strobj[p1__27184_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__27199 = null;
var G__27199__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27199__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27199 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27199__2.call(this,self__,k);
case 3:
return G__27199__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27199.cljs$core$IFn$_invoke$arity$2 = G__27199__2;
G__27199.cljs$core$IFn$_invoke$arity$3 = G__27199__3;
return G__27199;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args27185){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27185)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj27201 = {};
return obj27201;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__27202 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27202,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27202,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__27203 = (i + (2));
i = G__27203;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__27204 = (i + (2));
i = G__27204;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__27205 = (i + (2));
i = G__27205;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__27206 = (i + (2));
i = G__27206;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__27207 = (i + (2));
i = G__27207;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__15658__auto__ = (function (){var G__27211 = k;
return goog.isString(G__27211);
})();
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_27212 = (0);
while(true){
if((i_27212 < l)){
(narr[i_27212] = (arr[i_27212]));

var G__27213 = (i_27212 + (1));
i_27212 = G__27213;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27215 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__27215) : cljs.core.keys.call(null,G__27215));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27216 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__27216) : cljs.core.vals.call(null,G__27216));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27217 = cljs.core.seq(coll);
var chunk__27218 = null;
var count__27219 = (0);
var i__27220 = (0);
while(true){
if((i__27220 < count__27219)){
var vec__27221 = chunk__27218.cljs$core$IIndexed$_nth$arity$2(null,i__27220);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27221,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27221,(1),null);
var G__27222_27235 = v;
var G__27223_27236 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27222_27235,G__27223_27236) : f.call(null,G__27222_27235,G__27223_27236));

var G__27237 = seq__27217;
var G__27238 = chunk__27218;
var G__27239 = count__27219;
var G__27240 = (i__27220 + (1));
seq__27217 = G__27237;
chunk__27218 = G__27238;
count__27219 = G__27239;
i__27220 = G__27240;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27217);
if(temp__4126__auto__){
var seq__27217__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27217__$1)){
var c__16445__auto__ = cljs.core.chunk_first(seq__27217__$1);
var G__27241 = cljs.core.chunk_rest(seq__27217__$1);
var G__27242 = c__16445__auto__;
var G__27243 = cljs.core.count(c__16445__auto__);
var G__27244 = (0);
seq__27217 = G__27241;
chunk__27218 = G__27242;
count__27219 = G__27243;
i__27220 = G__27244;
continue;
} else {
var vec__27224 = cljs.core.first(seq__27217__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27224,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27224,(1),null);
var G__27225_27245 = v;
var G__27226_27246 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27225_27245,G__27226_27246) : f.call(null,G__27225_27245,G__27226_27246));

var G__27247 = cljs.core.next(seq__27217__$1);
var G__27248 = null;
var G__27249 = (0);
var G__27250 = (0);
seq__27217 = G__27247;
chunk__27218 = G__27248;
count__27219 = G__27249;
i__27220 = G__27250;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__27227 = init__$1;
var G__27228 = (self__.arr[i]);
var G__27229 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27227,G__27228,G__27229) : f.call(null,G__27227,G__27228,G__27229));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27230 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27230) : cljs.core.deref.call(null,G__27230));
} else {
var G__27251 = (i + (2));
var G__27252 = init__$2;
i = G__27251;
init__$1 = G__27252;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__27231 = other;
if(G__27231){
var bit__16332__auto__ = (G__27231.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__16332__auto__) || (G__27231.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__27253 = (i + (2));
i = G__27253;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj27233 = {};
return obj27233;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__27254 = (s + (2));
var G__27255 = d;
s = G__27254;
d = G__27255;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__27256 = (s + (2));
var G__27257 = (d + (2));
s = G__27256;
d = G__27257;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__27234 = cljs.core.aclone(self__.arr);
(G__27234[(idx + (1))] = v);

return G__27234;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__27258 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__27259 = cljs.core.next(es);
ret = G__27258;
es = G__27259;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__27260 = null;
var G__27260__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27260__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27260 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27260__2.call(this,self__,k);
case 3:
return G__27260__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27260.cljs$core$IFn$_invoke$arity$2 = G__27260__2;
G__27260.cljs$core$IFn$_invoke$arity$3 = G__27260__3;
return G__27260;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args27214){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27214)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__27261 = (i + (2));
var G__27262 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__27261;
ret = G__27262;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__27263_27271 = self__.arr;
G__27263_27271.pop();

G__27263_27271.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__27264 = self__.len;
var G__27265 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__27264,G__27265) : cljs.core.array__GT_transient_hash_map.call(null,G__27264,G__27265));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__27266 = o;
if(G__27266){
var bit__16339__auto__ = (G__27266.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__16339__auto__) || (G__27266.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__27266.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__27266);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__27266);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__27267 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__27267) : cljs.core.key.call(null,G__27267));
})(),(function (){var G__27268 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__27268) : cljs.core.val.call(null,G__27268));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__27272 = cljs.core.next(es);
var G__27273 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__27269 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__27269) : cljs.core.key.call(null,G__27269));
})(),(function (){var G__27270 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__27270) : cljs.core.val.call(null,G__27270));
})());
es = G__27272;
tcoll__$2 = G__27273;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__27274 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__27275 = (i + (2));
out = G__27274;
i = G__27275;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__27278 = cljs.core.aclone(arr);
(G__27278[i] = a);

return G__27278;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__27279 = cljs.core.aclone(arr);
(G__27279[i] = a);

(G__27279[j] = b);

return G__27279;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__27284 = init__$1;
var G__27285 = k;
var G__27286 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27284,G__27285,G__27286) : f.call(null,G__27284,G__27285,G__27286));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27287 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27287) : cljs.core.deref.call(null,G__27287));
} else {
var G__27288 = (i + (2));
var G__27289 = init__$2;
i = G__27288;
init__$1 = G__27289;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__27290 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__27290) : cljs.core.create_inode_seq.call(null,G__27290));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_27304 = (0);
var j_27305 = (0);
while(true){
if((i_27304 < (32))){
if((((self__.bitmap >>> i_27304) & (1)) === (0))){
var G__27306 = (i_27304 + (1));
var G__27307 = j_27305;
i_27304 = G__27306;
j_27305 = G__27307;
continue;
} else {
(nodes[i_27304] = ((!(((self__.arr[j_27305]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_27305])),(self__.arr[j_27305]),(self__.arr[(j_27305 + (1))]),added_leaf_QMARK_):(self__.arr[(j_27305 + (1))])));

var G__27308 = (i_27304 + (1));
var G__27309 = (j_27305 + (2));
i_27304 = G__27308;
j_27305 = G__27309;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__27291 = edit__$1;
var G__27292 = (shift + (5));
var G__27293 = key_or_nil;
var G__27294 = val_or_node;
var G__27295 = hash;
var G__27296 = key;
var G__27297 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__27291,G__27292,G__27293,G__27294,G__27295,G__27296,G__27297) : cljs.core.create_node.call(null,G__27291,G__27292,G__27293,G__27294,G__27295,G__27296,G__27297));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_27310 = (0);
var j_27311 = (0);
while(true){
if((i_27310 < (32))){
if((((self__.bitmap >>> i_27310) & (1)) === (0))){
var G__27312 = (i_27310 + (1));
var G__27313 = j_27311;
i_27310 = G__27312;
j_27311 = G__27313;
continue;
} else {
(nodes[i_27310] = ((!(((self__.arr[j_27311]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_27311])),(self__.arr[j_27311]),(self__.arr[(j_27311 + (1))]),added_leaf_QMARK_):(self__.arr[(j_27311 + (1))])));

var G__27314 = (i_27310 + (1));
var G__27315 = (j_27311 + (2));
i_27310 = G__27314;
j_27311 = G__27315;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__27298 = (shift + (5));
var G__27299 = key_or_nil;
var G__27300 = val_or_node;
var G__27301 = hash;
var G__27302 = key;
var G__27303 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__27298,G__27299,G__27300,G__27301,G__27302,G__27303) : cljs.core.create_node.call(null,G__27298,G__27299,G__27300,G__27301,G__27302,G__27303));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__27316 = (i + (1));
var G__27317 = (j + (2));
var G__27318 = (bitmap | ((1) << i));
i = G__27316;
j = G__27317;
bitmap = G__27318;
continue;
} else {
var G__27319 = (i + (1));
var G__27320 = j;
var G__27321 = bitmap;
i = G__27319;
j = G__27320;
bitmap = G__27321;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__27322 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__27322) : cljs.core.create_array_node_seq.call(null,G__27322));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27323 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27323) : cljs.core.deref.call(null,G__27323));
} else {
var G__27324 = (i + (1));
var G__27325 = init__$2;
i = G__27324;
init__$1 = G__27325;
continue;
}
} else {
var G__27326 = (i + (1));
var G__27327 = init__$1;
i = G__27326;
init__$1 = G__27327;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__27328 = (i + (2));
i = G__27328;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__27329 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__27329) : cljs.core.create_inode_seq.call(null,G__27329));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__27330 = self__.nodes;
var G__27331 = (self__.i + (2));
var G__27332 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__27330,G__27331,G__27332) : cljs.core.create_inode_seq.call(null,G__27330,G__27331,G__27332));
} else {
var G__27333 = self__.nodes;
var G__27334 = self__.i;
var G__27335 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__27333,G__27334,G__27335) : cljs.core.create_inode_seq.call(null,G__27333,G__27334,G__27335));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__27339 = (j + (2));
j = G__27339;
continue;
}
} else {
var G__27340 = (j + (2));
j = G__27340;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__27341 = null;
var G__27342 = self__.nodes;
var G__27343 = self__.i;
var G__27344 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__27341,G__27342,G__27343,G__27344) : cljs.core.create_array_node_seq.call(null,G__27341,G__27342,G__27343,G__27344));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__27349 = (j + (1));
j = G__27349;
continue;
}
} else {
var G__27350 = (j + (1));
j = G__27350;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27352 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__27352) : cljs.core.keys.call(null,G__27352));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27353 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__27353) : cljs.core.vals.call(null,G__27353));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27354 = cljs.core.seq(coll);
var chunk__27355 = null;
var count__27356 = (0);
var i__27357 = (0);
while(true){
if((i__27357 < count__27356)){
var vec__27358 = chunk__27355.cljs$core$IIndexed$_nth$arity$2(null,i__27357);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27358,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27358,(1),null);
var G__27359_27370 = v;
var G__27360_27371 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27359_27370,G__27360_27371) : f.call(null,G__27359_27370,G__27360_27371));

var G__27372 = seq__27354;
var G__27373 = chunk__27355;
var G__27374 = count__27356;
var G__27375 = (i__27357 + (1));
seq__27354 = G__27372;
chunk__27355 = G__27373;
count__27356 = G__27374;
i__27357 = G__27375;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27354);
if(temp__4126__auto__){
var seq__27354__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27354__$1)){
var c__16445__auto__ = cljs.core.chunk_first(seq__27354__$1);
var G__27376 = cljs.core.chunk_rest(seq__27354__$1);
var G__27377 = c__16445__auto__;
var G__27378 = cljs.core.count(c__16445__auto__);
var G__27379 = (0);
seq__27354 = G__27376;
chunk__27355 = G__27377;
count__27356 = G__27378;
i__27357 = G__27379;
continue;
} else {
var vec__27361 = cljs.core.first(seq__27354__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27361,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27361,(1),null);
var G__27362_27380 = v;
var G__27363_27381 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27362_27380,G__27363_27381) : f.call(null,G__27362_27380,G__27363_27381));

var G__27382 = cljs.core.next(seq__27354__$1);
var G__27383 = null;
var G__27384 = (0);
var G__27385 = (0);
seq__27354 = G__27382;
chunk__27355 = G__27383;
count__27356 = G__27384;
i__27357 = G__27385;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__27364 = init;
var G__27365 = null;
var G__27366 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27364,G__27365,G__27366) : f.call(null,G__27364,G__27365,G__27366));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__27367 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27367) : cljs.core.deref.call(null,G__27367));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj27369 = {};
return obj27369;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__27386 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__27387 = cljs.core.next(es);
ret = G__27386;
es = G__27387;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__27388 = null;
var G__27388__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27388__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27388 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27388__2.call(this,self__,k);
case 3:
return G__27388__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27388.cljs$core$IFn$_invoke$arity$2 = G__27388__2;
G__27388.cljs$core$IFn$_invoke$arity$3 = G__27388__3;
return G__27388;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args27351){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27351)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__27389 = (i + (2));
var G__27390 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__27389;
ret = G__27390;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__27391 = (i + (1));
var G__27392 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__27391;
out = G__27392;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__27393 = o;
if(G__27393){
var bit__16339__auto__ = (G__27393.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__16339__auto__) || (G__27393.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__27393.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__27393);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__27393);
}
})()){
return tcoll.assoc_BANG_((function (){var G__27394 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__27394) : cljs.core.key.call(null,G__27394));
})(),(function (){var G__27395 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__27395) : cljs.core.val.call(null,G__27395));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__27398 = cljs.core.next(es);
var G__27399 = tcoll__$1.assoc_BANG_((function (){var G__27396 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__27396) : cljs.core.key.call(null,G__27396));
})(),(function (){var G__27397 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__27397) : cljs.core.val.call(null,G__27397));
})());
es = G__27398;
tcoll__$1 = G__27399;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__27400 = ((ascending_QMARK_)?t.left:t.right);
var G__27401 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__27400;
stack__$1 = G__27401;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__27414 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27414) : cljs.core.deref.call(null,G__27414));
} else {
var init__$2 = (function (){var G__27415 = init__$1;
var G__27416 = node.key;
var G__27417 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27415,G__27416,G__27417) : f.call(null,G__27415,G__27416,G__27417));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27418 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27418) : cljs.core.deref.call(null,G__27418));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__27419 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27419) : cljs.core.deref.call(null,G__27419));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__27421 = null;
var G__27421__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27421__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27421 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27421__2.call(this,self__,k);
case 3:
return G__27421__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27421.cljs$core$IFn$_invoke$arity$2 = G__27421__2;
G__27421.cljs$core$IFn$_invoke$arity$3 = G__27421__3;
return G__27421;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args27420){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27420)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__27423 = null;
var G__27423__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27423__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27423 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27423__2.call(this,self__,k);
case 3:
return G__27423__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27423.cljs$core$IFn$_invoke$arity$2 = G__27423__2;
G__27423.cljs$core$IFn$_invoke$arity$3 = G__27423__3;
return G__27423;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args27422){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27422)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__27436 = k;
var G__27437 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__27436,G__27437) : comp.call(null,G__27436,G__27437));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__27456 = k;
var G__27457 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__27456,G__27457) : comp.call(null,G__27456,G__27457));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__27468 = k;
var G__27469 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__27468,G__27469) : comp.call(null,G__27468,G__27469));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27471 = cljs.core.seq(coll);
var chunk__27472 = null;
var count__27473 = (0);
var i__27474 = (0);
while(true){
if((i__27474 < count__27473)){
var vec__27475 = chunk__27472.cljs$core$IIndexed$_nth$arity$2(null,i__27474);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27475,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27475,(1),null);
var G__27476_27488 = v;
var G__27477_27489 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27476_27488,G__27477_27489) : f.call(null,G__27476_27488,G__27477_27489));

var G__27490 = seq__27471;
var G__27491 = chunk__27472;
var G__27492 = count__27473;
var G__27493 = (i__27474 + (1));
seq__27471 = G__27490;
chunk__27472 = G__27491;
count__27473 = G__27492;
i__27474 = G__27493;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27471);
if(temp__4126__auto__){
var seq__27471__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27471__$1)){
var c__16445__auto__ = cljs.core.chunk_first(seq__27471__$1);
var G__27494 = cljs.core.chunk_rest(seq__27471__$1);
var G__27495 = c__16445__auto__;
var G__27496 = cljs.core.count(c__16445__auto__);
var G__27497 = (0);
seq__27471 = G__27494;
chunk__27472 = G__27495;
count__27473 = G__27496;
i__27474 = G__27497;
continue;
} else {
var vec__27478 = cljs.core.first(seq__27471__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27478,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27478,(1),null);
var G__27479_27498 = v;
var G__27480_27499 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27479_27498,G__27480_27499) : f.call(null,G__27479_27498,G__27480_27499));

var G__27500 = cljs.core.next(seq__27471__$1);
var G__27501 = null;
var G__27502 = (0);
var G__27503 = (0);
seq__27471 = G__27500;
chunk__27472 = G__27501;
count__27473 = G__27502;
i__27474 = G__27503;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27481 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__27481) : cljs.core.keys.call(null,G__27481));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27482 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__27482) : cljs.core.vals.call(null,G__27482));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__27483 = k;
var G__27484 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__27483,G__27484) : self__.comp.call(null,G__27483,G__27484));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__27504 = t.left;
t = G__27504;
continue;
} else {
var G__27505 = t.right;
t = G__27505;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__27506 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__27507 = cljs.core.next(es);
ret = G__27506;
es = G__27507;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__27508 = null;
var G__27508__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27508__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27508 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27508__2.call(this,self__,k);
case 3:
return G__27508__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27508.cljs$core$IFn$_invoke$arity$2 = G__27508__2;
G__27508.cljs$core$IFn$_invoke$arity$3 = G__27508__3;
return G__27508;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args27470){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27470)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__27485 = k;
var G__27486 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__27485,G__27486) : self__.comp.call(null,G__27485,G__27486));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__27509 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__27510 = t.left;
stack = G__27509;
t = G__27510;
continue;
} else {
var G__27511 = stack;
var G__27512 = t.right;
stack = G__27511;
t = G__27512;
continue;
}
} else {
if((c > (0))){
var G__27513 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__27514 = t.right;
stack = G__27513;
t = G__27514;
continue;
} else {
var G__27515 = stack;
var G__27516 = t.left;
stack = G__27515;
t = G__27516;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__27487 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__27487) : cljs.core.key.call(null,G__27487));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__27517 = cljs.core.nnext(in$);
var G__27518 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__27517;
out = G__27518;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__27519__i = 0, G__27519__a = new Array(arguments.length -  0);
while (G__27519__i < G__27519__a.length) {G__27519__a[G__27519__i] = arguments[G__27519__i + 0]; ++G__27519__i;}
  keyvals = new cljs.core.IndexedSeq(G__27519__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__27520){
var keyvals = cljs.core.seq(arglist__27520);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__27521__i = 0, G__27521__a = new Array(arguments.length -  0);
while (G__27521__i < G__27521__a.length) {G__27521__a[G__27521__i] = arguments[G__27521__i + 0]; ++G__27521__i;}
  keyvals = new cljs.core.IndexedSeq(G__27521__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__27522){
var keyvals = cljs.core.seq(arglist__27522);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj27526 = {};
return obj27526;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__27527 = cljs.core.nnext(kvs);
kvs = G__27527;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__27528__i = 0, G__27528__a = new Array(arguments.length -  0);
while (G__27528__i < G__27528__a.length) {G__27528__a[G__27528__i] = arguments[G__27528__i + 0]; ++G__27528__i;}
  keyvals = new cljs.core.IndexedSeq(G__27528__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__27529){
var keyvals = cljs.core.seq(arglist__27529);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__27530 = cljs.core.nnext(in$);
var G__27531 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__27530;
out = G__27531;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__27532__i = 0, G__27532__a = new Array(arguments.length -  0);
while (G__27532__i < G__27532__a.length) {G__27532__a[G__27532__i] = arguments[G__27532__i + 0]; ++G__27532__i;}
  keyvals = new cljs.core.IndexedSeq(G__27532__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__27533){
var keyvals = cljs.core.seq(arglist__27533);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__27534 = cljs.core.nnext(in$);
var G__27535 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__27534;
out = G__27535;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__27536__i = 0, G__27536__a = new Array(arguments.length -  1);
while (G__27536__i < G__27536__a.length) {G__27536__a[G__27536__i] = arguments[G__27536__i + 1]; ++G__27536__i;}
  keyvals = new cljs.core.IndexedSeq(G__27536__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__27537){
var comparator = cljs.core.first(arglist__27537);
var keyvals = cljs.core.rest(arglist__27537);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__27538 = self__.mseq;
if(G__27538){
var bit__16339__auto__ = (G__27538.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16339__auto__) || (G__27538.cljs$core$INext$)){
return true;
} else {
if((!G__27538.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27538);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27538);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__27539 = self__.mseq;
if(G__27539){
var bit__16339__auto__ = (G__27539.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16339__auto__) || (G__27539.cljs$core$INext$)){
return true;
} else {
if((!G__27539.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27539);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27539);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__27540 = self__.mseq;
if(G__27540){
var bit__16339__auto__ = (G__27540.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16339__auto__) || (G__27540.cljs$core$INext$)){
return true;
} else {
if((!G__27540.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27540);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27540);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__27541 = self__.mseq;
if(G__27541){
var bit__16339__auto__ = (G__27541.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16339__auto__) || (G__27541.cljs$core$INext$)){
return true;
} else {
if((!G__27541.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27541);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27541);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__27542_SHARP_,p2__27543_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__15658__auto__ = p1__27542_SHARP_;
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__27543_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__27544__i = 0, G__27544__a = new Array(arguments.length -  0);
while (G__27544__i < G__27544__a.length) {G__27544__a[G__27544__i] = arguments[G__27544__i + 0]; ++G__27544__i;}
  maps = new cljs.core.IndexedSeq(G__27544__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__27545){
var maps = cljs.core.seq(arglist__27545);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27548 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27549 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27548,G__27549) : f.call(null,G__27548,G__27549));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__15658__auto__ = m1;
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__27550__i = 0, G__27550__a = new Array(arguments.length -  1);
while (G__27550__i < G__27550__a.length) {G__27550__a[G__27550__i] = arguments[G__27550__i + 1]; ++G__27550__i;}
  maps = new cljs.core.IndexedSeq(G__27550__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__27551){
var f = cljs.core.first(arglist__27551);
var maps = cljs.core.rest(arglist__27551);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__27552 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__27553 = cljs.core.next(keys);
ret = G__27552;
keys = G__27553;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27556 = cljs.core.seq(coll);
var chunk__27557 = null;
var count__27558 = (0);
var i__27559 = (0);
while(true){
if((i__27559 < count__27558)){
var vec__27560 = chunk__27557.cljs$core$IIndexed$_nth$arity$2(null,i__27559);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27560,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27560,(1),null);
var G__27561_27566 = v;
var G__27562_27567 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27561_27566,G__27562_27567) : f.call(null,G__27561_27566,G__27562_27567));

var G__27568 = seq__27556;
var G__27569 = chunk__27557;
var G__27570 = count__27558;
var G__27571 = (i__27559 + (1));
seq__27556 = G__27568;
chunk__27557 = G__27569;
count__27558 = G__27570;
i__27559 = G__27571;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27556);
if(temp__4126__auto__){
var seq__27556__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27556__$1)){
var c__16445__auto__ = cljs.core.chunk_first(seq__27556__$1);
var G__27572 = cljs.core.chunk_rest(seq__27556__$1);
var G__27573 = c__16445__auto__;
var G__27574 = cljs.core.count(c__16445__auto__);
var G__27575 = (0);
seq__27556 = G__27572;
chunk__27557 = G__27573;
count__27558 = G__27574;
i__27559 = G__27575;
continue;
} else {
var vec__27563 = cljs.core.first(seq__27556__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27563,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27563,(1),null);
var G__27564_27576 = v;
var G__27565_27577 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27564_27576,G__27565_27577) : f.call(null,G__27564_27576,G__27565_27577));

var G__27578 = cljs.core.next(seq__27556__$1);
var G__27579 = null;
var G__27580 = (0);
var G__27581 = (0);
seq__27556 = G__27578;
chunk__27557 = G__27579;
count__27558 = G__27580;
i__27559 = G__27581;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__27554_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__27554_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__27582 = null;
var G__27582__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27582__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27582 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27582__2.call(this,self__,k);
case 3:
return G__27582__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27582.cljs$core$IFn$_invoke$arity$2 = G__27582__2;
G__27582.cljs$core$IFn$_invoke$arity$3 = G__27582__3;
return G__27582;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args27555){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27555)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__27583 = (i + (1));
var G__27584 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__27583;
out = G__27584;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__27585 = (i + (1));
var G__27586 = cljs.core._conj_BANG_(out,(items[i]));
i = G__27585;
out = G__27586;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__27588 = null;
var G__27588__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__27588__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__27588 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27588__2.call(this,self__,k);
case 3:
return G__27588__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27588.cljs$core$IFn$_invoke$arity$2 = G__27588__2;
G__27588.cljs$core$IFn$_invoke$arity$3 = G__27588__3;
return G__27588;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args27587){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27587)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27591 = cljs.core.seq(coll);
var chunk__27592 = null;
var count__27593 = (0);
var i__27594 = (0);
while(true){
if((i__27594 < count__27593)){
var vec__27595 = chunk__27592.cljs$core$IIndexed$_nth$arity$2(null,i__27594);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27595,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27595,(1),null);
var G__27596_27601 = v;
var G__27597_27602 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27596_27601,G__27597_27602) : f.call(null,G__27596_27601,G__27597_27602));

var G__27603 = seq__27591;
var G__27604 = chunk__27592;
var G__27605 = count__27593;
var G__27606 = (i__27594 + (1));
seq__27591 = G__27603;
chunk__27592 = G__27604;
count__27593 = G__27605;
i__27594 = G__27606;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27591);
if(temp__4126__auto__){
var seq__27591__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27591__$1)){
var c__16445__auto__ = cljs.core.chunk_first(seq__27591__$1);
var G__27607 = cljs.core.chunk_rest(seq__27591__$1);
var G__27608 = c__16445__auto__;
var G__27609 = cljs.core.count(c__16445__auto__);
var G__27610 = (0);
seq__27591 = G__27607;
chunk__27592 = G__27608;
count__27593 = G__27609;
i__27594 = G__27610;
continue;
} else {
var vec__27598 = cljs.core.first(seq__27591__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27598,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27598,(1),null);
var G__27599_27611 = v;
var G__27600_27612 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27599_27611,G__27600_27612) : f.call(null,G__27599_27611,G__27600_27612));

var G__27613 = cljs.core.next(seq__27591__$1);
var G__27614 = null;
var G__27615 = (0);
var G__27616 = (0);
seq__27591 = G__27613;
chunk__27592 = G__27614;
count__27593 = G__27615;
i__27594 = G__27616;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__27589_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__27589_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__27617 = null;
var G__27617__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27617__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27617 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27617__2.call(this,self__,k);
case 3:
return G__27617__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27617.cljs$core$IFn$_invoke$arity$2 = G__27617__2;
G__27617.cljs$core$IFn$_invoke$arity$3 = G__27617__3;
return G__27617;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args27590){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27590)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__16539__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__16539__auto__.length)){
var G__27618 = (i + (1));
var G__27619 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__27618;
res = G__27619;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__27620 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__27621 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__27620;
out = G__27621;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__27622__delegate = function (keys){
return cljs.core.set(keys);
};
var G__27622 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__27623__i = 0, G__27623__a = new Array(arguments.length -  0);
while (G__27623__i < G__27623__a.length) {G__27623__a[G__27623__i] = arguments[G__27623__i + 0]; ++G__27623__i;}
  keys = new cljs.core.IndexedSeq(G__27623__a,0);
} 
return G__27622__delegate.call(this,keys);};
G__27622.cljs$lang$maxFixedArity = 0;
G__27622.cljs$lang$applyTo = (function (arglist__27624){
var keys = cljs.core.seq(arglist__27624);
return G__27622__delegate(keys);
});
G__27622.cljs$core$IFn$_invoke$arity$variadic = G__27622__delegate;
return G__27622;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__27625 = null;
if (arguments.length > 0) {
var G__27626__i = 0, G__27626__a = new Array(arguments.length -  0);
while (G__27626__i < G__27626__a.length) {G__27626__a[G__27626__i] = arguments[G__27626__i + 0]; ++G__27626__i;}
G__27625 = new cljs.core.IndexedSeq(G__27626__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__27625);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__27627__i = 0, G__27627__a = new Array(arguments.length -  0);
while (G__27627__i < G__27627__a.length) {G__27627__a[G__27627__i] = arguments[G__27627__i + 0]; ++G__27627__i;}
  keys = new cljs.core.IndexedSeq(G__27627__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__27628){
var keys = cljs.core.seq(arglist__27628);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__27629__i = 0, G__27629__a = new Array(arguments.length -  1);
while (G__27629__i < G__27629__a.length) {G__27629__a[G__27629__i] = arguments[G__27629__i + 1]; ++G__27629__i;}
  keys = new cljs.core.IndexedSeq(G__27629__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__27630){
var comparator = cljs.core.first(arglist__27630);
var keys = cljs.core.rest(arglist__27630);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__27631_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__27631_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__27631_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__27632_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__27632_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__27632_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__27653 = null;
var G__27653__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27653__1 = (function (result){
var G__27643 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27643) : rf.call(null,G__27643));
});
var G__27653__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__27644 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27644) : cljs.core.deref.call(null,G__27644));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__27645 = result;
var G__27646 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27645,G__27646) : rf.call(null,G__27645,G__27646));
}
});
G__27653 = function(result,input){
switch(arguments.length){
case 0:
return G__27653__0.call(this);
case 1:
return G__27653__1.call(this,result);
case 2:
return G__27653__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27653.cljs$core$IFn$_invoke$arity$0 = G__27653__0;
G__27653.cljs$core$IFn$_invoke$arity$1 = G__27653__1;
G__27653.cljs$core$IFn$_invoke$arity$2 = G__27653__2;
return G__27653;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__27651,seen__$1){
while(true){
var vec__27652 = p__27651;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27652,(0),null);
var xs__$1 = vec__27652;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__27654 = cljs.core.rest(s);
var G__27655 = seen__$1;
p__27651 = G__27654;
seen__$1 = G__27655;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__27656 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__27657 = cljs.core.next(s__$1);
ret = G__27656;
s__$1 = G__27657;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__27659 = x;
if(G__27659){
var bit__16332__auto__ = (G__27659.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__16332__auto__) || (G__27659.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__27660 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__27661 = cljs.core.next(ks);
var G__27662 = cljs.core.next(vs);
map = G__27660;
ks = G__27661;
vs = G__27662;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__27673 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__27673) : k.call(null,G__27673));
})() > (function (){var G__27674 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__27674) : k.call(null,G__27674));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__27675__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__27663_SHARP_,p2__27664_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__27663_SHARP_,p2__27664_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__27675 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__27676__i = 0, G__27676__a = new Array(arguments.length -  3);
while (G__27676__i < G__27676__a.length) {G__27676__a[G__27676__i] = arguments[G__27676__i + 3]; ++G__27676__i;}
  more = new cljs.core.IndexedSeq(G__27676__a,0);
} 
return G__27675__delegate.call(this,k,x,y,more);};
G__27675.cljs$lang$maxFixedArity = 3;
G__27675.cljs$lang$applyTo = (function (arglist__27677){
var k = cljs.core.first(arglist__27677);
arglist__27677 = cljs.core.next(arglist__27677);
var x = cljs.core.first(arglist__27677);
arglist__27677 = cljs.core.next(arglist__27677);
var y = cljs.core.first(arglist__27677);
var more = cljs.core.rest(arglist__27677);
return G__27675__delegate(k,x,y,more);
});
G__27675.cljs$core$IFn$_invoke$arity$variadic = G__27675__delegate;
return G__27675;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__27678 = null;
if (arguments.length > 3) {
var G__27679__i = 0, G__27679__a = new Array(arguments.length -  3);
while (G__27679__i < G__27679__a.length) {G__27679__a[G__27679__i] = arguments[G__27679__i + 3]; ++G__27679__i;}
G__27678 = new cljs.core.IndexedSeq(G__27679__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__27678);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__27690 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__27690) : k.call(null,G__27690));
})() < (function (){var G__27691 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__27691) : k.call(null,G__27691));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__27692__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__27680_SHARP_,p2__27681_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__27680_SHARP_,p2__27681_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__27692 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__27693__i = 0, G__27693__a = new Array(arguments.length -  3);
while (G__27693__i < G__27693__a.length) {G__27693__a[G__27693__i] = arguments[G__27693__i + 3]; ++G__27693__i;}
  more = new cljs.core.IndexedSeq(G__27693__a,0);
} 
return G__27692__delegate.call(this,k,x,y,more);};
G__27692.cljs$lang$maxFixedArity = 3;
G__27692.cljs$lang$applyTo = (function (arglist__27694){
var k = cljs.core.first(arglist__27694);
arglist__27694 = cljs.core.next(arglist__27694);
var x = cljs.core.first(arglist__27694);
arglist__27694 = cljs.core.next(arglist__27694);
var y = cljs.core.first(arglist__27694);
var more = cljs.core.rest(arglist__27694);
return G__27692__delegate(k,x,y,more);
});
G__27692.cljs$core$IFn$_invoke$arity$variadic = G__27692__delegate;
return G__27692;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__27695 = null;
if (arguments.length > 3) {
var G__27696__i = 0, G__27696__a = new Array(arguments.length -  3);
while (G__27696__i < G__27696__a.length) {G__27696__a[G__27696__i] = arguments[G__27696__i + 3]; ++G__27696__i;}
G__27695 = new cljs.core.IndexedSeq(G__27696__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__27695);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__27713 = null;
var G__27713__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27713__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__27708 = result;
var G__27709 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27708,G__27709) : rf.call(null,G__27708,G__27709));
})());
})());
var G__27710 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27710) : rf.call(null,G__27710));
});
var G__27713__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__27711 = result;
var G__27712 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27711,G__27712) : rf.call(null,G__27711,G__27712));
} else {
return result;
}
});
G__27713 = function(result,input){
switch(arguments.length){
case 0:
return G__27713__0.call(this);
case 1:
return G__27713__1.call(this,result);
case 2:
return G__27713__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27713.cljs$core$IFn$_invoke$arity$0 = G__27713__0;
G__27713.cljs$core$IFn$_invoke$arity$1 = G__27713__1;
G__27713.cljs$core$IFn$_invoke$arity$2 = G__27713__2;
return G__27713;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__27726 = null;
var G__27726__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27726__1 = (function (result){
var G__27721 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27721) : rf.call(null,G__27721));
});
var G__27726__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__27722 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27722) : pred.call(null,G__27722));
})())){
var G__27723 = result;
var G__27724 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27723,G__27724) : rf.call(null,G__27723,G__27724));
} else {
return cljs.core.reduced(result);
}
});
G__27726 = function(result,input){
switch(arguments.length){
case 0:
return G__27726__0.call(this);
case 1:
return G__27726__1.call(this,result);
case 2:
return G__27726__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27726.cljs$core$IFn$_invoke$arity$0 = G__27726__0;
G__27726.cljs$core$IFn$_invoke$arity$1 = G__27726__1;
G__27726.cljs$core$IFn$_invoke$arity$2 = G__27726__2;
return G__27726;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__27725 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27725) : pred.call(null,G__27725));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__27731 = (function (){var G__27733 = cljs.core._entry_key(sc,e);
var G__27734 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__27733,G__27734) : comp.call(null,G__27733,G__27734));
})();
var G__27732 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__27731,G__27732) : test.call(null,G__27731,G__27732));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__27738 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27738,(0),null);
var s = vec__27738;
if(cljs.core.truth_((function (){var G__27739 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__27739) : include.call(null,G__27739));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__27740 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27740,(0),null);
var s = vec__27740;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__27744 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27744,(0),null);
var s = vec__27744;
if(cljs.core.truth_((function (){var G__27745 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__27745) : include.call(null,G__27745));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__27746 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27746,(0),null);
var s = vec__27746;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__27747 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__27747) : Math.ceil.call(null,G__27747));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__27748 = ret;
var G__27749 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27748,G__27749) : f.call(null,G__27748,G__27749));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__27750 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27750) : cljs.core.deref.call(null,G__27750));
} else {
var G__27751 = (i + self__.step);
var G__27752 = ret__$1;
i = G__27751;
ret = G__27752;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__27770 = null;
var G__27770__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27770__1 = (function (result){
var G__27767 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27767) : rf.call(null,G__27767));
});
var G__27770__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__27768 = result;
var G__27769 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27768,G__27769) : rf.call(null,G__27768,G__27769));
} else {
return result;
}
});
G__27770 = function(result,input){
switch(arguments.length){
case 0:
return G__27770__0.call(this);
case 1:
return G__27770__1.call(this,result);
case 2:
return G__27770__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27770.cljs$core$IFn$_invoke$arity$0 = G__27770__0;
G__27770.cljs$core$IFn$_invoke$arity$1 = G__27770__1;
G__27770.cljs$core$IFn$_invoke$arity$2 = G__27770__2;
return G__27770;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__27792 = null;
var G__27792__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27792__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__27783 = result;
var G__27784 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27783,G__27784) : rf.call(null,G__27783,G__27784));
})());
})());
var G__27785 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27785) : rf.call(null,G__27785));
});
var G__27792__2 = (function (result,input){
var pval = (function (){var G__27786 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27786) : cljs.core.deref.call(null,G__27786));
})();
var val = (function (){var G__27787 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27787) : f.call(null,G__27787));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__27788 = result;
var G__27789 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27788,G__27789) : rf.call(null,G__27788,G__27789));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__27792 = function(result,input){
switch(arguments.length){
case 0:
return G__27792__0.call(this);
case 1:
return G__27792__1.call(this,result);
case 2:
return G__27792__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27792.cljs$core$IFn$_invoke$arity$0 = G__27792__0;
G__27792.cljs$core$IFn$_invoke$arity$1 = G__27792__1;
G__27792.cljs$core$IFn$_invoke$arity$2 = G__27792__2;
return G__27792;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__27790 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27790) : f.call(null,G__27790));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__27771_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__27791 = p1__27771_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27791) : f.call(null,G__27791));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__27801 = init;
var G__27802 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27801,G__27802) : f.call(null,G__27801,G__27802));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__27897 = null;
var G__27897__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__27897__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27855 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27855) : f.call(null,G__27855));
})()],null));
});
var G__27897__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27856 = x;
var G__27857 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27856,G__27857) : f.call(null,G__27856,G__27857));
})()],null));
});
var G__27897__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27858 = x;
var G__27859 = y;
var G__27860 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27858,G__27859,G__27860) : f.call(null,G__27858,G__27859,G__27860));
})()],null));
});
var G__27897__4 = (function() { 
var G__27898__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__27898 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27899__i = 0, G__27899__a = new Array(arguments.length -  3);
while (G__27899__i < G__27899__a.length) {G__27899__a[G__27899__i] = arguments[G__27899__i + 3]; ++G__27899__i;}
  args = new cljs.core.IndexedSeq(G__27899__a,0);
} 
return G__27898__delegate.call(this,x,y,z,args);};
G__27898.cljs$lang$maxFixedArity = 3;
G__27898.cljs$lang$applyTo = (function (arglist__27900){
var x = cljs.core.first(arglist__27900);
arglist__27900 = cljs.core.next(arglist__27900);
var y = cljs.core.first(arglist__27900);
arglist__27900 = cljs.core.next(arglist__27900);
var z = cljs.core.first(arglist__27900);
var args = cljs.core.rest(arglist__27900);
return G__27898__delegate(x,y,z,args);
});
G__27898.cljs$core$IFn$_invoke$arity$variadic = G__27898__delegate;
return G__27898;
})()
;
G__27897 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__27897__0.call(this);
case 1:
return G__27897__1.call(this,x);
case 2:
return G__27897__2.call(this,x,y);
case 3:
return G__27897__3.call(this,x,y,z);
default:
var G__27901 = null;
if (arguments.length > 3) {
var G__27902__i = 0, G__27902__a = new Array(arguments.length -  3);
while (G__27902__i < G__27902__a.length) {G__27902__a[G__27902__i] = arguments[G__27902__i + 3]; ++G__27902__i;}
G__27901 = new cljs.core.IndexedSeq(G__27902__a,0);
}
return G__27897__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27901);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27897.cljs$lang$maxFixedArity = 3;
G__27897.cljs$lang$applyTo = G__27897__4.cljs$lang$applyTo;
G__27897.cljs$core$IFn$_invoke$arity$0 = G__27897__0;
G__27897.cljs$core$IFn$_invoke$arity$1 = G__27897__1;
G__27897.cljs$core$IFn$_invoke$arity$2 = G__27897__2;
G__27897.cljs$core$IFn$_invoke$arity$3 = G__27897__3;
G__27897.cljs$core$IFn$_invoke$arity$variadic = G__27897__4.cljs$core$IFn$_invoke$arity$variadic;
return G__27897;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__27903 = null;
var G__27903__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__27903__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27861 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27861) : f.call(null,G__27861));
})(),(function (){var G__27862 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__27862) : g.call(null,G__27862));
})()],null));
});
var G__27903__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27863 = x;
var G__27864 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27863,G__27864) : f.call(null,G__27863,G__27864));
})(),(function (){var G__27865 = x;
var G__27866 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__27865,G__27866) : g.call(null,G__27865,G__27866));
})()],null));
});
var G__27903__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27867 = x;
var G__27868 = y;
var G__27869 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27867,G__27868,G__27869) : f.call(null,G__27867,G__27868,G__27869));
})(),(function (){var G__27870 = x;
var G__27871 = y;
var G__27872 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__27870,G__27871,G__27872) : g.call(null,G__27870,G__27871,G__27872));
})()],null));
});
var G__27903__4 = (function() { 
var G__27904__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__27904 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27905__i = 0, G__27905__a = new Array(arguments.length -  3);
while (G__27905__i < G__27905__a.length) {G__27905__a[G__27905__i] = arguments[G__27905__i + 3]; ++G__27905__i;}
  args = new cljs.core.IndexedSeq(G__27905__a,0);
} 
return G__27904__delegate.call(this,x,y,z,args);};
G__27904.cljs$lang$maxFixedArity = 3;
G__27904.cljs$lang$applyTo = (function (arglist__27906){
var x = cljs.core.first(arglist__27906);
arglist__27906 = cljs.core.next(arglist__27906);
var y = cljs.core.first(arglist__27906);
arglist__27906 = cljs.core.next(arglist__27906);
var z = cljs.core.first(arglist__27906);
var args = cljs.core.rest(arglist__27906);
return G__27904__delegate(x,y,z,args);
});
G__27904.cljs$core$IFn$_invoke$arity$variadic = G__27904__delegate;
return G__27904;
})()
;
G__27903 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__27903__0.call(this);
case 1:
return G__27903__1.call(this,x);
case 2:
return G__27903__2.call(this,x,y);
case 3:
return G__27903__3.call(this,x,y,z);
default:
var G__27907 = null;
if (arguments.length > 3) {
var G__27908__i = 0, G__27908__a = new Array(arguments.length -  3);
while (G__27908__i < G__27908__a.length) {G__27908__a[G__27908__i] = arguments[G__27908__i + 3]; ++G__27908__i;}
G__27907 = new cljs.core.IndexedSeq(G__27908__a,0);
}
return G__27903__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27907);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27903.cljs$lang$maxFixedArity = 3;
G__27903.cljs$lang$applyTo = G__27903__4.cljs$lang$applyTo;
G__27903.cljs$core$IFn$_invoke$arity$0 = G__27903__0;
G__27903.cljs$core$IFn$_invoke$arity$1 = G__27903__1;
G__27903.cljs$core$IFn$_invoke$arity$2 = G__27903__2;
G__27903.cljs$core$IFn$_invoke$arity$3 = G__27903__3;
G__27903.cljs$core$IFn$_invoke$arity$variadic = G__27903__4.cljs$core$IFn$_invoke$arity$variadic;
return G__27903;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__27909 = null;
var G__27909__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__27909__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27873 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27873) : f.call(null,G__27873));
})(),(function (){var G__27874 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__27874) : g.call(null,G__27874));
})(),(function (){var G__27875 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__27875) : h.call(null,G__27875));
})()],null));
});
var G__27909__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27876 = x;
var G__27877 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27876,G__27877) : f.call(null,G__27876,G__27877));
})(),(function (){var G__27878 = x;
var G__27879 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__27878,G__27879) : g.call(null,G__27878,G__27879));
})(),(function (){var G__27880 = x;
var G__27881 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__27880,G__27881) : h.call(null,G__27880,G__27881));
})()],null));
});
var G__27909__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27882 = x;
var G__27883 = y;
var G__27884 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27882,G__27883,G__27884) : f.call(null,G__27882,G__27883,G__27884));
})(),(function (){var G__27885 = x;
var G__27886 = y;
var G__27887 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__27885,G__27886,G__27887) : g.call(null,G__27885,G__27886,G__27887));
})(),(function (){var G__27888 = x;
var G__27889 = y;
var G__27890 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__27888,G__27889,G__27890) : h.call(null,G__27888,G__27889,G__27890));
})()],null));
});
var G__27909__4 = (function() { 
var G__27910__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__27910 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27911__i = 0, G__27911__a = new Array(arguments.length -  3);
while (G__27911__i < G__27911__a.length) {G__27911__a[G__27911__i] = arguments[G__27911__i + 3]; ++G__27911__i;}
  args = new cljs.core.IndexedSeq(G__27911__a,0);
} 
return G__27910__delegate.call(this,x,y,z,args);};
G__27910.cljs$lang$maxFixedArity = 3;
G__27910.cljs$lang$applyTo = (function (arglist__27912){
var x = cljs.core.first(arglist__27912);
arglist__27912 = cljs.core.next(arglist__27912);
var y = cljs.core.first(arglist__27912);
arglist__27912 = cljs.core.next(arglist__27912);
var z = cljs.core.first(arglist__27912);
var args = cljs.core.rest(arglist__27912);
return G__27910__delegate(x,y,z,args);
});
G__27910.cljs$core$IFn$_invoke$arity$variadic = G__27910__delegate;
return G__27910;
})()
;
G__27909 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__27909__0.call(this);
case 1:
return G__27909__1.call(this,x);
case 2:
return G__27909__2.call(this,x,y);
case 3:
return G__27909__3.call(this,x,y,z);
default:
var G__27913 = null;
if (arguments.length > 3) {
var G__27914__i = 0, G__27914__a = new Array(arguments.length -  3);
while (G__27914__i < G__27914__a.length) {G__27914__a[G__27914__i] = arguments[G__27914__i + 3]; ++G__27914__i;}
G__27913 = new cljs.core.IndexedSeq(G__27914__a,0);
}
return G__27909__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27913);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27909.cljs$lang$maxFixedArity = 3;
G__27909.cljs$lang$applyTo = G__27909__4.cljs$lang$applyTo;
G__27909.cljs$core$IFn$_invoke$arity$0 = G__27909__0;
G__27909.cljs$core$IFn$_invoke$arity$1 = G__27909__1;
G__27909.cljs$core$IFn$_invoke$arity$2 = G__27909__2;
G__27909.cljs$core$IFn$_invoke$arity$3 = G__27909__3;
G__27909.cljs$core$IFn$_invoke$arity$variadic = G__27909__4.cljs$core$IFn$_invoke$arity$variadic;
return G__27909;
})()
});
var juxt__4 = (function() { 
var G__27915__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__27916 = null;
var G__27916__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__27803_SHARP_,p2__27804_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__27803_SHARP_,(function (){return (p2__27804_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__27804_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__27804_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__27916__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__27805_SHARP_,p2__27806_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__27805_SHARP_,(function (){var G__27891 = x;
return (p2__27806_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__27806_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27891) : p2__27806_SHARP_.call(null,G__27891));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__27916__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__27807_SHARP_,p2__27808_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__27807_SHARP_,(function (){var G__27892 = x;
var G__27893 = y;
return (p2__27808_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__27808_SHARP_.cljs$core$IFn$_invoke$arity$2(G__27892,G__27893) : p2__27808_SHARP_.call(null,G__27892,G__27893));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__27916__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__27809_SHARP_,p2__27810_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__27809_SHARP_,(function (){var G__27894 = x;
var G__27895 = y;
var G__27896 = z;
return (p2__27810_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__27810_SHARP_.cljs$core$IFn$_invoke$arity$3(G__27894,G__27895,G__27896) : p2__27810_SHARP_.call(null,G__27894,G__27895,G__27896));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__27916__4 = (function() { 
var G__27917__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__27811_SHARP_,p2__27812_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__27811_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__27812_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__27917 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27918__i = 0, G__27918__a = new Array(arguments.length -  3);
while (G__27918__i < G__27918__a.length) {G__27918__a[G__27918__i] = arguments[G__27918__i + 3]; ++G__27918__i;}
  args = new cljs.core.IndexedSeq(G__27918__a,0);
} 
return G__27917__delegate.call(this,x,y,z,args);};
G__27917.cljs$lang$maxFixedArity = 3;
G__27917.cljs$lang$applyTo = (function (arglist__27919){
var x = cljs.core.first(arglist__27919);
arglist__27919 = cljs.core.next(arglist__27919);
var y = cljs.core.first(arglist__27919);
arglist__27919 = cljs.core.next(arglist__27919);
var z = cljs.core.first(arglist__27919);
var args = cljs.core.rest(arglist__27919);
return G__27917__delegate(x,y,z,args);
});
G__27917.cljs$core$IFn$_invoke$arity$variadic = G__27917__delegate;
return G__27917;
})()
;
G__27916 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__27916__0.call(this);
case 1:
return G__27916__1.call(this,x);
case 2:
return G__27916__2.call(this,x,y);
case 3:
return G__27916__3.call(this,x,y,z);
default:
var G__27920 = null;
if (arguments.length > 3) {
var G__27921__i = 0, G__27921__a = new Array(arguments.length -  3);
while (G__27921__i < G__27921__a.length) {G__27921__a[G__27921__i] = arguments[G__27921__i + 3]; ++G__27921__i;}
G__27920 = new cljs.core.IndexedSeq(G__27921__a,0);
}
return G__27916__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27920);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27916.cljs$lang$maxFixedArity = 3;
G__27916.cljs$lang$applyTo = G__27916__4.cljs$lang$applyTo;
G__27916.cljs$core$IFn$_invoke$arity$0 = G__27916__0;
G__27916.cljs$core$IFn$_invoke$arity$1 = G__27916__1;
G__27916.cljs$core$IFn$_invoke$arity$2 = G__27916__2;
G__27916.cljs$core$IFn$_invoke$arity$3 = G__27916__3;
G__27916.cljs$core$IFn$_invoke$arity$variadic = G__27916__4.cljs$core$IFn$_invoke$arity$variadic;
return G__27916;
})()
;})(fs__$1))
};
var G__27915 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__27922__i = 0, G__27922__a = new Array(arguments.length -  3);
while (G__27922__i < G__27922__a.length) {G__27922__a[G__27922__i] = arguments[G__27922__i + 3]; ++G__27922__i;}
  fs = new cljs.core.IndexedSeq(G__27922__a,0);
} 
return G__27915__delegate.call(this,f,g,h,fs);};
G__27915.cljs$lang$maxFixedArity = 3;
G__27915.cljs$lang$applyTo = (function (arglist__27923){
var f = cljs.core.first(arglist__27923);
arglist__27923 = cljs.core.next(arglist__27923);
var g = cljs.core.first(arglist__27923);
arglist__27923 = cljs.core.next(arglist__27923);
var h = cljs.core.first(arglist__27923);
var fs = cljs.core.rest(arglist__27923);
return G__27915__delegate(f,g,h,fs);
});
G__27915.cljs$core$IFn$_invoke$arity$variadic = G__27915__delegate;
return G__27915;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__27924 = null;
if (arguments.length > 3) {
var G__27925__i = 0, G__27925__a = new Array(arguments.length -  3);
while (G__27925__i < G__27925__a.length) {G__27925__a[G__27925__i] = arguments[G__27925__i + 3]; ++G__27925__i;}
G__27924 = new cljs.core.IndexedSeq(G__27925__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__27924);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__27926 = cljs.core.next(coll);
coll = G__27926;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__27927 = (n - (1));
var G__27928 = cljs.core.next(coll);
n = G__27927;
coll = G__27928;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__27932 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27932,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27932,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27932,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_27940 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__15658__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__27941_27947 = cljs.core.first(coll);
var G__27942_27948 = writer;
var G__27943_27949 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__27941_27947,G__27942_27948,G__27943_27949) : print_one.call(null,G__27941_27947,G__27942_27948,G__27943_27949));
} else {
}

var coll_27950__$1 = cljs.core.next(coll);
var n_27951 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_27950__$1) && (((n_27951 == null)) || (!((n_27951 === (0)))))){
cljs.core._write(writer,sep);

var G__27944_27952 = cljs.core.first(coll_27950__$1);
var G__27945_27953 = writer;
var G__27946_27954 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__27944_27952,G__27945_27953,G__27946_27954) : print_one.call(null,G__27944_27952,G__27945_27953,G__27946_27954));

var G__27955 = cljs.core.next(coll_27950__$1);
var G__27956 = (n_27951 - (1));
coll_27950__$1 = G__27955;
n_27951 = G__27956;
continue;
} else {
if((cljs.core.seq(coll_27950__$1)) && ((n_27951 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__15658__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_27940;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__27961 = cljs.core.seq(ss);
var chunk__27962 = null;
var count__27963 = (0);
var i__27964 = (0);
while(true){
if((i__27964 < count__27963)){
var s = chunk__27962.cljs$core$IIndexed$_nth$arity$2(null,i__27964);
cljs.core._write(writer,s);

var G__27965 = seq__27961;
var G__27966 = chunk__27962;
var G__27967 = count__27963;
var G__27968 = (i__27964 + (1));
seq__27961 = G__27965;
chunk__27962 = G__27966;
count__27963 = G__27967;
i__27964 = G__27968;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27961);
if(temp__4126__auto__){
var seq__27961__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27961__$1)){
var c__16445__auto__ = cljs.core.chunk_first(seq__27961__$1);
var G__27969 = cljs.core.chunk_rest(seq__27961__$1);
var G__27970 = c__16445__auto__;
var G__27971 = cljs.core.count(c__16445__auto__);
var G__27972 = (0);
seq__27961 = G__27969;
chunk__27962 = G__27970;
count__27963 = G__27971;
i__27964 = G__27972;
continue;
} else {
var s = cljs.core.first(seq__27961__$1);
cljs.core._write(writer,s);

var G__27973 = cljs.core.next(seq__27961__$1);
var G__27974 = null;
var G__27975 = (0);
var G__27976 = (0);
seq__27961 = G__27973;
chunk__27962 = G__27974;
count__27963 = G__27975;
i__27964 = G__27976;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__27977__i = 0, G__27977__a = new Array(arguments.length -  1);
while (G__27977__i < G__27977__a.length) {G__27977__a[G__27977__i] = arguments[G__27977__i + 1]; ++G__27977__i;}
  ss = new cljs.core.IndexedSeq(G__27977__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__27978){
var writer = cljs.core.first(arglist__27978);
var ss = cljs.core.rest(arglist__27978);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj27980 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj27980;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__27983 = "[\\\\\"\b\f\n\r\t]";
var G__27984 = "g";
return RegExp(G__27983,G__27984);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__15646__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__15646__auto__)){
var and__15646__auto____$1 = (function (){var G__27998 = obj;
if(G__27998){
var bit__16339__auto__ = (G__27998.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__16339__auto__) || (G__27998.cljs$core$IMeta$)){
return true;
} else {
if((!G__27998.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__27998);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__27998);
}
})();
if(and__15646__auto____$1){
return cljs.core.meta(obj);
} else {
return and__15646__auto____$1;
}
} else {
return and__15646__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__27999_28009 = cljs.core.meta(obj);
var G__28000_28010 = writer;
var G__28001_28011 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__27999_28009,G__28000_28010,G__28001_28011) : cljs.core.pr_writer.call(null,G__27999_28009,G__28000_28010,G__28001_28011));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__28002 = obj;
if(G__28002){
var bit__16332__auto__ = (G__28002.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__16332__auto__) || (G__28002.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__28003 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__28004 = cljs.core.pr_writer;
var G__28005 = writer;
var G__28006 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__28003,G__28004,G__28005,G__28006) : cljs.core.print_map.call(null,G__28003,G__28004,G__28005,G__28006));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__28007 = obj;
return goog.isString(G__28007);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__28012 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__28012;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__28008 = obj;
if(G__28008){
var bit__16339__auto__ = (G__28008.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__16339__auto__) || (G__28008.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__28008.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__28008);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__28008);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__28016 = obj;
var G__28017 = writer;
var G__28018 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__28016,G__28017,G__28018) : alt_impl.call(null,G__28016,G__28017,G__28018));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__28023 = cljs.core.seq(cljs.core.next(objs));
var chunk__28024 = null;
var count__28025 = (0);
var i__28026 = (0);
while(true){
if((i__28026 < count__28025)){
var obj = chunk__28024.cljs$core$IIndexed$_nth$arity$2(null,i__28026);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__28027 = seq__28023;
var G__28028 = chunk__28024;
var G__28029 = count__28025;
var G__28030 = (i__28026 + (1));
seq__28023 = G__28027;
chunk__28024 = G__28028;
count__28025 = G__28029;
i__28026 = G__28030;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__28023);
if(temp__4126__auto__){
var seq__28023__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__28023__$1)){
var c__16445__auto__ = cljs.core.chunk_first(seq__28023__$1);
var G__28031 = cljs.core.chunk_rest(seq__28023__$1);
var G__28032 = c__16445__auto__;
var G__28033 = cljs.core.count(c__16445__auto__);
var G__28034 = (0);
seq__28023 = G__28031;
chunk__28024 = G__28032;
count__28025 = G__28033;
i__28026 = G__28034;
continue;
} else {
var obj = cljs.core.first(seq__28023__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__28035 = cljs.core.next(seq__28023__$1);
var G__28036 = null;
var G__28037 = (0);
var G__28038 = (0);
seq__28023 = G__28035;
chunk__28024 = G__28036;
count__28025 = G__28037;
i__28026 = G__28038;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28039__i = 0, G__28039__a = new Array(arguments.length -  0);
while (G__28039__i < G__28039__a.length) {G__28039__a[G__28039__i] = arguments[G__28039__i + 0]; ++G__28039__i;}
  objs = new cljs.core.IndexedSeq(G__28039__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__28040){
var objs = cljs.core.seq(arglist__28040);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28041__i = 0, G__28041__a = new Array(arguments.length -  0);
while (G__28041__i < G__28041__a.length) {G__28041__a[G__28041__i] = arguments[G__28041__i + 0]; ++G__28041__i;}
  objs = new cljs.core.IndexedSeq(G__28041__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__28042){
var objs = cljs.core.seq(arglist__28042);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28043__i = 0, G__28043__a = new Array(arguments.length -  0);
while (G__28043__i < G__28043__a.length) {G__28043__a[G__28043__i] = arguments[G__28043__i + 0]; ++G__28043__i;}
  objs = new cljs.core.IndexedSeq(G__28043__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__28044){
var objs = cljs.core.seq(arglist__28044);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28045__i = 0, G__28045__a = new Array(arguments.length -  0);
while (G__28045__i < G__28045__a.length) {G__28045__a[G__28045__i] = arguments[G__28045__i + 0]; ++G__28045__i;}
  objs = new cljs.core.IndexedSeq(G__28045__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__28046){
var objs = cljs.core.seq(arglist__28046);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28047__i = 0, G__28047__a = new Array(arguments.length -  0);
while (G__28047__i < G__28047__a.length) {G__28047__a[G__28047__i] = arguments[G__28047__i + 0]; ++G__28047__i;}
  objs = new cljs.core.IndexedSeq(G__28047__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__28048){
var objs = cljs.core.seq(arglist__28048);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28049__i = 0, G__28049__a = new Array(arguments.length -  0);
while (G__28049__i < G__28049__a.length) {G__28049__a[G__28049__i] = arguments[G__28049__i + 0]; ++G__28049__i;}
  objs = new cljs.core.IndexedSeq(G__28049__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__28050){
var objs = cljs.core.seq(arglist__28050);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28051__i = 0, G__28051__a = new Array(arguments.length -  0);
while (G__28051__i < G__28051__a.length) {G__28051__a[G__28051__i] = arguments[G__28051__i + 0]; ++G__28051__i;}
  objs = new cljs.core.IndexedSeq(G__28051__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__28052){
var objs = cljs.core.seq(arglist__28052);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28053__i = 0, G__28053__a = new Array(arguments.length -  0);
while (G__28053__i < G__28053__a.length) {G__28053__a[G__28053__i] = arguments[G__28053__i + 0]; ++G__28053__i;}
  objs = new cljs.core.IndexedSeq(G__28053__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__28054){
var objs = cljs.core.seq(arglist__28054);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__28061_28067 = cljs.core.key(e);
var G__28062_28068 = w;
var G__28063_28069 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__28061_28067,G__28062_28068,G__28063_28069) : print_one.call(null,G__28061_28067,G__28062_28068,G__28063_28069));

cljs.core._write(w," ");

var G__28064 = cljs.core.val(e);
var G__28065 = w;
var G__28066 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__28064,G__28065,G__28066) : print_one.call(null,G__28064,G__28065,G__28066));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__28070__i = 0, G__28070__a = new Array(arguments.length -  2);
while (G__28070__i < G__28070__a.length) {G__28070__a[G__28070__i] = arguments[G__28070__i + 2]; ++G__28070__i;}
  args = new cljs.core.IndexedSeq(G__28070__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__28071){
var iref = cljs.core.first(arglist__28071);
arglist__28071 = cljs.core.next(arglist__28071);
var f = cljs.core.first(arglist__28071);
var args = cljs.core.rest(arglist__28071);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__28074 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__28074) : cljs.core.atom.call(null,G__28074));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__28076 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28076) : cljs.core.deref.call(null,G__28076));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__28077_SHARP_,p2__28078_SHARP_){
var ret = (function (){var G__28081 = p1__28077_SHARP_;
var G__28082 = p2__28078_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28081,G__28082) : rf.call(null,G__28081,G__28082));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__28085 = null;
var G__28085__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28085__1 = (function (result){
var G__28084 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28084) : rf.call(null,G__28084));
});
var G__28085__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__28085 = function(result,input){
switch(arguments.length){
case 0:
return G__28085__0.call(this);
case 1:
return G__28085__1.call(this,result);
case 2:
return G__28085__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28085.cljs$core$IFn$_invoke$arity$0 = G__28085__0;
G__28085.cljs$core$IFn$_invoke$arity$1 = G__28085__1;
G__28085.cljs$core$IFn$_invoke$arity$2 = G__28085__2;
return G__28085;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__28094 = null;
var G__28094__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28094__1 = (function (result){
var G__28090 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28090) : rf.call(null,G__28090));
});
var G__28094__2 = (function (result,input){
var prior = (function (){var G__28091 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28091) : cljs.core.deref.call(null,G__28091));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__28092 = result;
var G__28093 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28092,G__28093) : rf.call(null,G__28092,G__28093));
}
});
G__28094 = function(result,input){
switch(arguments.length){
case 0:
return G__28094__0.call(this);
case 1:
return G__28094__1.call(this,result);
case 2:
return G__28094__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28094.cljs$core$IFn$_invoke$arity$0 = G__28094__0;
G__28094.cljs$core$IFn$_invoke$arity$1 = G__28094__1;
G__28094.cljs$core$IFn$_invoke$arity$2 = G__28094__2;
return G__28094;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__28096_SHARP_,p2__28095_SHARP_){
var G__28098 = p2__28095_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__28098) : proc.call(null,G__28098));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj28100 = {};
return obj28100;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__15646__auto__ = x;
if(and__15646__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__15646__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__16302__auto__ = (((x == null))?null:x);
return (function (){var or__15658__auto__ = (cljs.core._clj__GT_js[(function (){var G__28104 = x__16302__auto__;
return goog.typeOf(G__28104);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__15646__auto__ = x;
if(and__15646__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__15646__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__16302__auto__ = (((x == null))?null:x);
return (function (){var or__15658__auto__ = (cljs.core._key__GT_js[(function (){var G__28108 = x__16302__auto__;
return goog.typeOf(G__28108);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__28111 = k;
if(G__28111){
var bit__16339__auto__ = null;
if(cljs.core.truth_((function (){var or__15658__auto__ = bit__16339__auto__;
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return G__28111.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__28111.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__28111);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__28111);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__28112 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__28112) : cljs.core.clj__GT_js.call(null,G__28112));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__28128 = x;
if(G__28128){
var bit__16339__auto__ = null;
if(cljs.core.truth_((function (){var or__15658__auto__ = bit__16339__auto__;
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return G__28128.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__28128.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__28128);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__28128);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj28130 = {};
return obj28130;
})();
var seq__28131_28141 = cljs.core.seq(x);
var chunk__28132_28142 = null;
var count__28133_28143 = (0);
var i__28134_28144 = (0);
while(true){
if((i__28134_28144 < count__28133_28143)){
var vec__28135_28145 = chunk__28132_28142.cljs$core$IIndexed$_nth$arity$2(null,i__28134_28144);
var k_28146 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28135_28145,(0),null);
var v_28147 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28135_28145,(1),null);
(m[cljs.core.key__GT_js(k_28146)] = clj__GT_js(v_28147));

var G__28148 = seq__28131_28141;
var G__28149 = chunk__28132_28142;
var G__28150 = count__28133_28143;
var G__28151 = (i__28134_28144 + (1));
seq__28131_28141 = G__28148;
chunk__28132_28142 = G__28149;
count__28133_28143 = G__28150;
i__28134_28144 = G__28151;
continue;
} else {
var temp__4126__auto___28152 = cljs.core.seq(seq__28131_28141);
if(temp__4126__auto___28152){
var seq__28131_28153__$1 = temp__4126__auto___28152;
if(cljs.core.chunked_seq_QMARK_(seq__28131_28153__$1)){
var c__16445__auto___28154 = cljs.core.chunk_first(seq__28131_28153__$1);
var G__28155 = cljs.core.chunk_rest(seq__28131_28153__$1);
var G__28156 = c__16445__auto___28154;
var G__28157 = cljs.core.count(c__16445__auto___28154);
var G__28158 = (0);
seq__28131_28141 = G__28155;
chunk__28132_28142 = G__28156;
count__28133_28143 = G__28157;
i__28134_28144 = G__28158;
continue;
} else {
var vec__28136_28159 = cljs.core.first(seq__28131_28153__$1);
var k_28160 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28136_28159,(0),null);
var v_28161 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28136_28159,(1),null);
(m[cljs.core.key__GT_js(k_28160)] = clj__GT_js(v_28161));

var G__28162 = cljs.core.next(seq__28131_28153__$1);
var G__28163 = null;
var G__28164 = (0);
var G__28165 = (0);
seq__28131_28141 = G__28162;
chunk__28132_28142 = G__28163;
count__28133_28143 = G__28164;
i__28134_28144 = G__28165;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__28137_28166 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__28138_28167 = null;
var count__28139_28168 = (0);
var i__28140_28169 = (0);
while(true){
if((i__28140_28169 < count__28139_28168)){
var x_28170__$1 = chunk__28138_28167.cljs$core$IIndexed$_nth$arity$2(null,i__28140_28169);
arr.push(x_28170__$1);

var G__28171 = seq__28137_28166;
var G__28172 = chunk__28138_28167;
var G__28173 = count__28139_28168;
var G__28174 = (i__28140_28169 + (1));
seq__28137_28166 = G__28171;
chunk__28138_28167 = G__28172;
count__28139_28168 = G__28173;
i__28140_28169 = G__28174;
continue;
} else {
var temp__4126__auto___28175 = cljs.core.seq(seq__28137_28166);
if(temp__4126__auto___28175){
var seq__28137_28176__$1 = temp__4126__auto___28175;
if(cljs.core.chunked_seq_QMARK_(seq__28137_28176__$1)){
var c__16445__auto___28177 = cljs.core.chunk_first(seq__28137_28176__$1);
var G__28178 = cljs.core.chunk_rest(seq__28137_28176__$1);
var G__28179 = c__16445__auto___28177;
var G__28180 = cljs.core.count(c__16445__auto___28177);
var G__28181 = (0);
seq__28137_28166 = G__28178;
chunk__28138_28167 = G__28179;
count__28139_28168 = G__28180;
i__28140_28169 = G__28181;
continue;
} else {
var x_28182__$1 = cljs.core.first(seq__28137_28176__$1);
arr.push(x_28182__$1);

var G__28183 = cljs.core.next(seq__28137_28176__$1);
var G__28184 = null;
var G__28185 = (0);
var G__28186 = (0);
seq__28137_28166 = G__28183;
chunk__28138_28167 = G__28184;
count__28139_28168 = G__28185;
i__28140_28169 = G__28186;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj28188 = {};
return obj28188;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__15646__auto__ = x;
if(and__15646__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__15646__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__16302__auto__ = (((x == null))?null:x);
return (function (){var or__15658__auto__ = (cljs.core._js__GT_clj[(function (){var G__28192 = x__16302__auto__;
return goog.typeOf(G__28192);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__28249__delegate = function (x,opts){
var map__28222 = opts;
var map__28222__$1 = ((cljs.core.seq_QMARK_(map__28222))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__28222):map__28222);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28222__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__28222,map__28222__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__28238 = x__$1;
if(G__28238){
var bit__16339__auto__ = null;
if(cljs.core.truth_((function (){var or__15658__auto__ = bit__16339__auto__;
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return G__28238.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__28238.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__28238);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__28238);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__16414__auto__ = ((function (map__28222,map__28222__$1,keywordize_keys,keyfn){
return (function iter__28239(s__28240){
return (new cljs.core.LazySeq(null,((function (map__28222,map__28222__$1,keywordize_keys,keyfn){
return (function (){
var s__28240__$1 = s__28240;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__28240__$1);
if(temp__4126__auto__){
var s__28240__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__28240__$2)){
var c__16412__auto__ = cljs.core.chunk_first(s__28240__$2);
var size__16413__auto__ = cljs.core.count(c__16412__auto__);
var b__28242 = cljs.core.chunk_buffer(size__16413__auto__);
if((function (){var i__28241 = (0);
while(true){
if((i__28241 < size__16413__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__16412__auto__,i__28241);
cljs.core.chunk_append(b__28242,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__28247 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__28247) : keyfn.call(null,G__28247));
})(),thisfn((x__$1[k]))], null));

var G__28250 = (i__28241 + (1));
i__28241 = G__28250;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__28242),iter__28239(cljs.core.chunk_rest(s__28240__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__28242),null);
}
} else {
var k = cljs.core.first(s__28240__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__28248 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__28248) : keyfn.call(null,G__28248));
})(),thisfn((x__$1[k]))], null),iter__28239(cljs.core.rest(s__28240__$2)));
}
} else {
return null;
}
break;
}
});})(map__28222,map__28222__$1,keywordize_keys,keyfn))
,null,null));
});})(map__28222,map__28222__$1,keywordize_keys,keyfn))
;
return iter__16414__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__28222,map__28222__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__28249 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__28251__i = 0, G__28251__a = new Array(arguments.length -  1);
while (G__28251__i < G__28251__a.length) {G__28251__a[G__28251__i] = arguments[G__28251__i + 1]; ++G__28251__i;}
  opts = new cljs.core.IndexedSeq(G__28251__a,0);
} 
return G__28249__delegate.call(this,x,opts);};
G__28249.cljs$lang$maxFixedArity = 1;
G__28249.cljs$lang$applyTo = (function (arglist__28252){
var x = cljs.core.first(arglist__28252);
var opts = cljs.core.rest(arglist__28252);
return G__28249__delegate(x,opts);
});
G__28249.cljs$core$IFn$_invoke$arity$variadic = G__28249__delegate;
return G__28249;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__28253 = null;
if (arguments.length > 1) {
var G__28254__i = 0, G__28254__a = new Array(arguments.length -  1);
while (G__28254__i < G__28254__a.length) {G__28254__a[G__28254__i] = arguments[G__28254__i + 1]; ++G__28254__i;}
G__28253 = new cljs.core.IndexedSeq(G__28254__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__28253);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__28257 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__28257) : cljs.core.atom.call(null,G__28257));
})();
return ((function (mem){
return (function() { 
var G__28259__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__28258 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28258) : cljs.core.deref.call(null,G__28258));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__28259 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__28260__i = 0, G__28260__a = new Array(arguments.length -  0);
while (G__28260__i < G__28260__a.length) {G__28260__a[G__28260__i] = arguments[G__28260__i + 0]; ++G__28260__i;}
  args = new cljs.core.IndexedSeq(G__28260__a,0);
} 
return G__28259__delegate.call(this,args);};
G__28259.cljs$lang$maxFixedArity = 0;
G__28259.cljs$lang$applyTo = (function (arglist__28261){
var args = cljs.core.seq(arglist__28261);
return G__28259__delegate(args);
});
G__28259.cljs$core$IFn$_invoke$arity$variadic = G__28259__delegate;
return G__28259;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__28263 = ret;
f = G__28263;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__28264__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__28264 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__28265__i = 0, G__28265__a = new Array(arguments.length -  1);
while (G__28265__i < G__28265__a.length) {G__28265__a[G__28265__i] = arguments[G__28265__i + 1]; ++G__28265__i;}
  args = new cljs.core.IndexedSeq(G__28265__a,0);
} 
return G__28264__delegate.call(this,f,args);};
G__28264.cljs$lang$maxFixedArity = 1;
G__28264.cljs$lang$applyTo = (function (arglist__28266){
var f = cljs.core.first(arglist__28266);
var args = cljs.core.rest(arglist__28266);
return G__28264__delegate(f,args);
});
G__28264.cljs$core$IFn$_invoke$arity$variadic = G__28264__delegate;
return G__28264;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__28267 = null;
if (arguments.length > 1) {
var G__28268__i = 0, G__28268__a = new Array(arguments.length -  1);
while (G__28268__i < G__28268__a.length) {G__28268__a[G__28268__i] = arguments[G__28268__i + 1]; ++G__28268__i;}
G__28267 = new cljs.core.IndexedSeq(G__28268__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__28267);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__28271 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__28271) : Math.floor.call(null,G__28271));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__28273 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28273) : f.call(null,G__28273));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__28275 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__28275) : cljs.core.atom.call(null,G__28275));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__28276__i = 0, G__28276__a = new Array(arguments.length -  1);
while (G__28276__i < G__28276__a.length) {G__28276__a[G__28276__i] = arguments[G__28276__i + 1]; ++G__28276__i;}
  args = new cljs.core.IndexedSeq(G__28276__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__28277){
var f = cljs.core.first(arglist__28277);
var args = cljs.core.rest(arglist__28277);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__28342 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28342) : cljs.core.deref.call(null,G__28342));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__15658__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
var and__15646__auto__ = cljs.core.vector_QMARK_(parent);
if(and__15646__auto__){
var and__15646__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__15646__auto____$1){
var and__15646__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__15646__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__28367 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__28365 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__28365) : child.call(null,G__28365));
})(),(function (){var G__28366 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__28366) : parent.call(null,G__28366));
})());
var G__28368 = (i + (1));
ret = G__28367;
i = G__28368;
continue;
}
break;
}
} else {
return and__15646__auto____$2;
}
} else {
return and__15646__auto____$1;
}
} else {
return and__15646__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__28372 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28372) : cljs.core.deref.call(null,G__28372));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__28376 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28376) : cljs.core.deref.call(null,G__28376));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__28380 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28380) : cljs.core.deref.call(null,G__28380));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__28389 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__28389) : targets.call(null,G__28389));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__28390 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__28390) : sources.call(null,G__28390));
})()));
});})(tp,td,ta))
;
var or__15658__auto__ = ((cljs.core.contains_QMARK_((function (){var G__28394 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__28394) : tp.call(null,G__28394));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__28395 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__28395) : ta.call(null,G__28395));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__28396 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__28396) : ta.call(null,G__28396));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__28403 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__28403) : parentMap.call(null,G__28403));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__28404 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__28404) : parentMap.call(null,G__28404));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__28397_SHARP_){
return cljs.core.cons(cljs.core.first(p1__28397_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__28397_SHARP_),cljs.core.second(p1__28397_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__28405 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__28405) : parentMap.call(null,G__28405));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__28398_SHARP_,p2__28399_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__28398_SHARP_,p2__28399_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__28408 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28408) : cljs.core.deref.call(null,G__28408));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__28409 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28409) : cljs.core.deref.call(null,G__28409));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__28425 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28425) : cljs.core.deref.call(null,G__28425));
})().call(null,x);
var or__15658__auto__ = (cljs.core.truth_((function (){var and__15646__auto__ = xprefs;
if(cljs.core.truth_(and__15646__auto__)){
var G__28427 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__28427) : xprefs.call(null,G__28427));
} else {
return and__15646__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__28428 = cljs.core.rest(ps);
ps = G__28428;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__15658__auto____$1)){
return or__15658__auto____$1;
} else {
var or__15658__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__28429 = cljs.core.rest(ps);
ps = G__28429;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__15658__auto____$2)){
return or__15658__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__15658__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__28443){
var vec__28444 = p__28443;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28444,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28444,(1),null);
var e = vec__28444;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__28445 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28445) : cljs.core.deref.call(null,G__28445));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__15658__auto__ = (be == null);
if(or__15658__auto__){
return or__15658__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__28446 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28446) : cljs.core.deref.call(null,G__28446));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__28447 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28447) : cljs.core.deref.call(null,G__28447));
})(),(function (){var G__28448 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28448) : cljs.core.deref.call(null,G__28448));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj28450 = {};
return obj28450;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__15646__auto__ = mf;
if(and__15646__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__15646__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__16302__auto__ = (((mf == null))?null:mf);
return (function (){var or__15658__auto__ = (cljs.core._reset[(function (){var G__28454 = x__16302__auto__;
return goog.typeOf(G__28454);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._reset["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__15646__auto__ = mf;
if(and__15646__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__15646__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__16302__auto__ = (((mf == null))?null:mf);
return (function (){var or__15658__auto__ = (cljs.core._add_method[(function (){var G__28458 = x__16302__auto__;
return goog.typeOf(G__28458);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._add_method["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__15646__auto__ = mf;
if(and__15646__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__15646__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__16302__auto__ = (((mf == null))?null:mf);
return (function (){var or__15658__auto__ = (cljs.core._remove_method[(function (){var G__28462 = x__16302__auto__;
return goog.typeOf(G__28462);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._remove_method["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__15646__auto__ = mf;
if(and__15646__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__15646__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__16302__auto__ = (((mf == null))?null:mf);
return (function (){var or__15658__auto__ = (cljs.core._prefer_method[(function (){var G__28466 = x__16302__auto__;
return goog.typeOf(G__28466);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__15646__auto__ = mf;
if(and__15646__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__15646__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__16302__auto__ = (((mf == null))?null:mf);
return (function (){var or__15658__auto__ = (cljs.core._get_method[(function (){var G__28470 = x__16302__auto__;
return goog.typeOf(G__28470);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._get_method["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__15646__auto__ = mf;
if(and__15646__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__15646__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__16302__auto__ = (((mf == null))?null:mf);
return (function (){var or__15658__auto__ = (cljs.core._methods[(function (){var G__28474 = x__16302__auto__;
return goog.typeOf(G__28474);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._methods["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__15646__auto__ = mf;
if(and__15646__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__15646__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__16302__auto__ = (((mf == null))?null:mf);
return (function (){var or__15658__auto__ = (cljs.core._prefers[(function (){var G__28478 = x__16302__auto__;
return goog.typeOf(G__28478);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._prefers["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__28480 = this$__$1;
return goog.getUid(G__28480);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__28481 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28481) : cljs.core.deref.call(null,G__28481));
})(),(function (){var G__28482 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28482) : cljs.core.deref.call(null,G__28482));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__28483 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28483) : cljs.core.deref.call(null,G__28483));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__28484 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28484) : cljs.core.deref.call(null,G__28484));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__28485 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28485) : cljs.core.deref.call(null,G__28485));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__28486 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28486) : cljs.core.deref.call(null,G__28486));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__29327 = null;
var G__29327__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__29327__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28487 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__28487) : self__.dispatch_fn.call(null,G__28487));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28488 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__28488) : target_fn.call(null,G__28488));
});
var G__29327__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28489 = a;
var G__28490 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__28489,G__28490) : self__.dispatch_fn.call(null,G__28489,G__28490));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28491 = a;
var G__28492 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__28491,G__28492) : target_fn.call(null,G__28491,G__28492));
});
var G__29327__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28493 = a;
var G__28494 = b;
var G__28495 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__28493,G__28494,G__28495) : self__.dispatch_fn.call(null,G__28493,G__28494,G__28495));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28496 = a;
var G__28497 = b;
var G__28498 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__28496,G__28497,G__28498) : target_fn.call(null,G__28496,G__28497,G__28498));
});
var G__29327__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28499 = a;
var G__28500 = b;
var G__28501 = c;
var G__28502 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__28499,G__28500,G__28501,G__28502) : self__.dispatch_fn.call(null,G__28499,G__28500,G__28501,G__28502));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28503 = a;
var G__28504 = b;
var G__28505 = c;
var G__28506 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__28503,G__28504,G__28505,G__28506) : target_fn.call(null,G__28503,G__28504,G__28505,G__28506));
});
var G__29327__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28507 = a;
var G__28508 = b;
var G__28509 = c;
var G__28510 = d;
var G__28511 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__28507,G__28508,G__28509,G__28510,G__28511) : self__.dispatch_fn.call(null,G__28507,G__28508,G__28509,G__28510,G__28511));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28512 = a;
var G__28513 = b;
var G__28514 = c;
var G__28515 = d;
var G__28516 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__28512,G__28513,G__28514,G__28515,G__28516) : target_fn.call(null,G__28512,G__28513,G__28514,G__28515,G__28516));
});
var G__29327__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28517 = a;
var G__28518 = b;
var G__28519 = c;
var G__28520 = d;
var G__28521 = e;
var G__28522 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__28517,G__28518,G__28519,G__28520,G__28521,G__28522) : self__.dispatch_fn.call(null,G__28517,G__28518,G__28519,G__28520,G__28521,G__28522));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28523 = a;
var G__28524 = b;
var G__28525 = c;
var G__28526 = d;
var G__28527 = e;
var G__28528 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__28523,G__28524,G__28525,G__28526,G__28527,G__28528) : target_fn.call(null,G__28523,G__28524,G__28525,G__28526,G__28527,G__28528));
});
var G__29327__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28529 = a;
var G__28530 = b;
var G__28531 = c;
var G__28532 = d;
var G__28533 = e;
var G__28534 = f;
var G__28535 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__28529,G__28530,G__28531,G__28532,G__28533,G__28534,G__28535) : self__.dispatch_fn.call(null,G__28529,G__28530,G__28531,G__28532,G__28533,G__28534,G__28535));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28536 = a;
var G__28537 = b;
var G__28538 = c;
var G__28539 = d;
var G__28540 = e;
var G__28541 = f;
var G__28542 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__28536,G__28537,G__28538,G__28539,G__28540,G__28541,G__28542) : target_fn.call(null,G__28536,G__28537,G__28538,G__28539,G__28540,G__28541,G__28542));
});
var G__29327__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28543 = a;
var G__28544 = b;
var G__28545 = c;
var G__28546 = d;
var G__28547 = e;
var G__28548 = f;
var G__28549 = g;
var G__28550 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__28543,G__28544,G__28545,G__28546,G__28547,G__28548,G__28549,G__28550) : self__.dispatch_fn.call(null,G__28543,G__28544,G__28545,G__28546,G__28547,G__28548,G__28549,G__28550));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28551 = a;
var G__28552 = b;
var G__28553 = c;
var G__28554 = d;
var G__28555 = e;
var G__28556 = f;
var G__28557 = g;
var G__28558 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__28551,G__28552,G__28553,G__28554,G__28555,G__28556,G__28557,G__28558) : target_fn.call(null,G__28551,G__28552,G__28553,G__28554,G__28555,G__28556,G__28557,G__28558));
});
var G__29327__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28559 = a;
var G__28560 = b;
var G__28561 = c;
var G__28562 = d;
var G__28563 = e;
var G__28564 = f;
var G__28565 = g;
var G__28566 = h;
var G__28567 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__28559,G__28560,G__28561,G__28562,G__28563,G__28564,G__28565,G__28566,G__28567) : self__.dispatch_fn.call(null,G__28559,G__28560,G__28561,G__28562,G__28563,G__28564,G__28565,G__28566,G__28567));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28568 = a;
var G__28569 = b;
var G__28570 = c;
var G__28571 = d;
var G__28572 = e;
var G__28573 = f;
var G__28574 = g;
var G__28575 = h;
var G__28576 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__28568,G__28569,G__28570,G__28571,G__28572,G__28573,G__28574,G__28575,G__28576) : target_fn.call(null,G__28568,G__28569,G__28570,G__28571,G__28572,G__28573,G__28574,G__28575,G__28576));
});
var G__29327__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28577 = a;
var G__28578 = b;
var G__28579 = c;
var G__28580 = d;
var G__28581 = e;
var G__28582 = f;
var G__28583 = g;
var G__28584 = h;
var G__28585 = i;
var G__28586 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__28577,G__28578,G__28579,G__28580,G__28581,G__28582,G__28583,G__28584,G__28585,G__28586) : self__.dispatch_fn.call(null,G__28577,G__28578,G__28579,G__28580,G__28581,G__28582,G__28583,G__28584,G__28585,G__28586));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28587 = a;
var G__28588 = b;
var G__28589 = c;
var G__28590 = d;
var G__28591 = e;
var G__28592 = f;
var G__28593 = g;
var G__28594 = h;
var G__28595 = i;
var G__28596 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__28587,G__28588,G__28589,G__28590,G__28591,G__28592,G__28593,G__28594,G__28595,G__28596) : target_fn.call(null,G__28587,G__28588,G__28589,G__28590,G__28591,G__28592,G__28593,G__28594,G__28595,G__28596));
});
var G__29327__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28597 = a;
var G__28598 = b;
var G__28599 = c;
var G__28600 = d;
var G__28601 = e;
var G__28602 = f;
var G__28603 = g;
var G__28604 = h;
var G__28605 = i;
var G__28606 = j;
var G__28607 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__28597,G__28598,G__28599,G__28600,G__28601,G__28602,G__28603,G__28604,G__28605,G__28606,G__28607) : self__.dispatch_fn.call(null,G__28597,G__28598,G__28599,G__28600,G__28601,G__28602,G__28603,G__28604,G__28605,G__28606,G__28607));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28608 = a;
var G__28609 = b;
var G__28610 = c;
var G__28611 = d;
var G__28612 = e;
var G__28613 = f;
var G__28614 = g;
var G__28615 = h;
var G__28616 = i;
var G__28617 = j;
var G__28618 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__28608,G__28609,G__28610,G__28611,G__28612,G__28613,G__28614,G__28615,G__28616,G__28617,G__28618) : target_fn.call(null,G__28608,G__28609,G__28610,G__28611,G__28612,G__28613,G__28614,G__28615,G__28616,G__28617,G__28618));
});
var G__29327__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28619 = a;
var G__28620 = b;
var G__28621 = c;
var G__28622 = d;
var G__28623 = e;
var G__28624 = f;
var G__28625 = g;
var G__28626 = h;
var G__28627 = i;
var G__28628 = j;
var G__28629 = k;
var G__28630 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__28619,G__28620,G__28621,G__28622,G__28623,G__28624,G__28625,G__28626,G__28627,G__28628,G__28629,G__28630) : self__.dispatch_fn.call(null,G__28619,G__28620,G__28621,G__28622,G__28623,G__28624,G__28625,G__28626,G__28627,G__28628,G__28629,G__28630));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28631 = a;
var G__28632 = b;
var G__28633 = c;
var G__28634 = d;
var G__28635 = e;
var G__28636 = f;
var G__28637 = g;
var G__28638 = h;
var G__28639 = i;
var G__28640 = j;
var G__28641 = k;
var G__28642 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__28631,G__28632,G__28633,G__28634,G__28635,G__28636,G__28637,G__28638,G__28639,G__28640,G__28641,G__28642) : target_fn.call(null,G__28631,G__28632,G__28633,G__28634,G__28635,G__28636,G__28637,G__28638,G__28639,G__28640,G__28641,G__28642));
});
var G__29327__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28643 = a;
var G__28644 = b;
var G__28645 = c;
var G__28646 = d;
var G__28647 = e;
var G__28648 = f;
var G__28649 = g;
var G__28650 = h;
var G__28651 = i;
var G__28652 = j;
var G__28653 = k;
var G__28654 = l;
var G__28655 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__28643,G__28644,G__28645,G__28646,G__28647,G__28648,G__28649,G__28650,G__28651,G__28652,G__28653,G__28654,G__28655) : self__.dispatch_fn.call(null,G__28643,G__28644,G__28645,G__28646,G__28647,G__28648,G__28649,G__28650,G__28651,G__28652,G__28653,G__28654,G__28655));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28656 = a;
var G__28657 = b;
var G__28658 = c;
var G__28659 = d;
var G__28660 = e;
var G__28661 = f;
var G__28662 = g;
var G__28663 = h;
var G__28664 = i;
var G__28665 = j;
var G__28666 = k;
var G__28667 = l;
var G__28668 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__28656,G__28657,G__28658,G__28659,G__28660,G__28661,G__28662,G__28663,G__28664,G__28665,G__28666,G__28667,G__28668) : target_fn.call(null,G__28656,G__28657,G__28658,G__28659,G__28660,G__28661,G__28662,G__28663,G__28664,G__28665,G__28666,G__28667,G__28668));
});
var G__29327__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28669 = a;
var G__28670 = b;
var G__28671 = c;
var G__28672 = d;
var G__28673 = e;
var G__28674 = f;
var G__28675 = g;
var G__28676 = h;
var G__28677 = i;
var G__28678 = j;
var G__28679 = k;
var G__28680 = l;
var G__28681 = m;
var G__28682 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__28669,G__28670,G__28671,G__28672,G__28673,G__28674,G__28675,G__28676,G__28677,G__28678,G__28679,G__28680,G__28681,G__28682) : self__.dispatch_fn.call(null,G__28669,G__28670,G__28671,G__28672,G__28673,G__28674,G__28675,G__28676,G__28677,G__28678,G__28679,G__28680,G__28681,G__28682));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28683 = a;
var G__28684 = b;
var G__28685 = c;
var G__28686 = d;
var G__28687 = e;
var G__28688 = f;
var G__28689 = g;
var G__28690 = h;
var G__28691 = i;
var G__28692 = j;
var G__28693 = k;
var G__28694 = l;
var G__28695 = m;
var G__28696 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__28683,G__28684,G__28685,G__28686,G__28687,G__28688,G__28689,G__28690,G__28691,G__28692,G__28693,G__28694,G__28695,G__28696) : target_fn.call(null,G__28683,G__28684,G__28685,G__28686,G__28687,G__28688,G__28689,G__28690,G__28691,G__28692,G__28693,G__28694,G__28695,G__28696));
});
var G__29327__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28697 = a;
var G__28698 = b;
var G__28699 = c;
var G__28700 = d;
var G__28701 = e;
var G__28702 = f;
var G__28703 = g;
var G__28704 = h;
var G__28705 = i;
var G__28706 = j;
var G__28707 = k;
var G__28708 = l;
var G__28709 = m;
var G__28710 = n;
var G__28711 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__28697,G__28698,G__28699,G__28700,G__28701,G__28702,G__28703,G__28704,G__28705,G__28706,G__28707,G__28708,G__28709,G__28710,G__28711) : self__.dispatch_fn.call(null,G__28697,G__28698,G__28699,G__28700,G__28701,G__28702,G__28703,G__28704,G__28705,G__28706,G__28707,G__28708,G__28709,G__28710,G__28711));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28712 = a;
var G__28713 = b;
var G__28714 = c;
var G__28715 = d;
var G__28716 = e;
var G__28717 = f;
var G__28718 = g;
var G__28719 = h;
var G__28720 = i;
var G__28721 = j;
var G__28722 = k;
var G__28723 = l;
var G__28724 = m;
var G__28725 = n;
var G__28726 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__28712,G__28713,G__28714,G__28715,G__28716,G__28717,G__28718,G__28719,G__28720,G__28721,G__28722,G__28723,G__28724,G__28725,G__28726) : target_fn.call(null,G__28712,G__28713,G__28714,G__28715,G__28716,G__28717,G__28718,G__28719,G__28720,G__28721,G__28722,G__28723,G__28724,G__28725,G__28726));
});
var G__29327__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28727 = a;
var G__28728 = b;
var G__28729 = c;
var G__28730 = d;
var G__28731 = e;
var G__28732 = f;
var G__28733 = g;
var G__28734 = h;
var G__28735 = i;
var G__28736 = j;
var G__28737 = k;
var G__28738 = l;
var G__28739 = m;
var G__28740 = n;
var G__28741 = o;
var G__28742 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__28727,G__28728,G__28729,G__28730,G__28731,G__28732,G__28733,G__28734,G__28735,G__28736,G__28737,G__28738,G__28739,G__28740,G__28741,G__28742) : self__.dispatch_fn.call(null,G__28727,G__28728,G__28729,G__28730,G__28731,G__28732,G__28733,G__28734,G__28735,G__28736,G__28737,G__28738,G__28739,G__28740,G__28741,G__28742));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28743 = a;
var G__28744 = b;
var G__28745 = c;
var G__28746 = d;
var G__28747 = e;
var G__28748 = f;
var G__28749 = g;
var G__28750 = h;
var G__28751 = i;
var G__28752 = j;
var G__28753 = k;
var G__28754 = l;
var G__28755 = m;
var G__28756 = n;
var G__28757 = o;
var G__28758 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__28743,G__28744,G__28745,G__28746,G__28747,G__28748,G__28749,G__28750,G__28751,G__28752,G__28753,G__28754,G__28755,G__28756,G__28757,G__28758) : target_fn.call(null,G__28743,G__28744,G__28745,G__28746,G__28747,G__28748,G__28749,G__28750,G__28751,G__28752,G__28753,G__28754,G__28755,G__28756,G__28757,G__28758));
});
var G__29327__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28759 = a;
var G__28760 = b;
var G__28761 = c;
var G__28762 = d;
var G__28763 = e;
var G__28764 = f;
var G__28765 = g;
var G__28766 = h;
var G__28767 = i;
var G__28768 = j;
var G__28769 = k;
var G__28770 = l;
var G__28771 = m;
var G__28772 = n;
var G__28773 = o;
var G__28774 = p;
var G__28775 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__28759,G__28760,G__28761,G__28762,G__28763,G__28764,G__28765,G__28766,G__28767,G__28768,G__28769,G__28770,G__28771,G__28772,G__28773,G__28774,G__28775) : self__.dispatch_fn.call(null,G__28759,G__28760,G__28761,G__28762,G__28763,G__28764,G__28765,G__28766,G__28767,G__28768,G__28769,G__28770,G__28771,G__28772,G__28773,G__28774,G__28775));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28776 = a;
var G__28777 = b;
var G__28778 = c;
var G__28779 = d;
var G__28780 = e;
var G__28781 = f;
var G__28782 = g;
var G__28783 = h;
var G__28784 = i;
var G__28785 = j;
var G__28786 = k;
var G__28787 = l;
var G__28788 = m;
var G__28789 = n;
var G__28790 = o;
var G__28791 = p;
var G__28792 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__28776,G__28777,G__28778,G__28779,G__28780,G__28781,G__28782,G__28783,G__28784,G__28785,G__28786,G__28787,G__28788,G__28789,G__28790,G__28791,G__28792) : target_fn.call(null,G__28776,G__28777,G__28778,G__28779,G__28780,G__28781,G__28782,G__28783,G__28784,G__28785,G__28786,G__28787,G__28788,G__28789,G__28790,G__28791,G__28792));
});
var G__29327__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28793 = a;
var G__28794 = b;
var G__28795 = c;
var G__28796 = d;
var G__28797 = e;
var G__28798 = f;
var G__28799 = g;
var G__28800 = h;
var G__28801 = i;
var G__28802 = j;
var G__28803 = k;
var G__28804 = l;
var G__28805 = m;
var G__28806 = n;
var G__28807 = o;
var G__28808 = p;
var G__28809 = q;
var G__28810 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__28793,G__28794,G__28795,G__28796,G__28797,G__28798,G__28799,G__28800,G__28801,G__28802,G__28803,G__28804,G__28805,G__28806,G__28807,G__28808,G__28809,G__28810) : self__.dispatch_fn.call(null,G__28793,G__28794,G__28795,G__28796,G__28797,G__28798,G__28799,G__28800,G__28801,G__28802,G__28803,G__28804,G__28805,G__28806,G__28807,G__28808,G__28809,G__28810));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28811 = a;
var G__28812 = b;
var G__28813 = c;
var G__28814 = d;
var G__28815 = e;
var G__28816 = f;
var G__28817 = g;
var G__28818 = h;
var G__28819 = i;
var G__28820 = j;
var G__28821 = k;
var G__28822 = l;
var G__28823 = m;
var G__28824 = n;
var G__28825 = o;
var G__28826 = p;
var G__28827 = q;
var G__28828 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__28811,G__28812,G__28813,G__28814,G__28815,G__28816,G__28817,G__28818,G__28819,G__28820,G__28821,G__28822,G__28823,G__28824,G__28825,G__28826,G__28827,G__28828) : target_fn.call(null,G__28811,G__28812,G__28813,G__28814,G__28815,G__28816,G__28817,G__28818,G__28819,G__28820,G__28821,G__28822,G__28823,G__28824,G__28825,G__28826,G__28827,G__28828));
});
var G__29327__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28829 = a;
var G__28830 = b;
var G__28831 = c;
var G__28832 = d;
var G__28833 = e;
var G__28834 = f;
var G__28835 = g;
var G__28836 = h;
var G__28837 = i;
var G__28838 = j;
var G__28839 = k;
var G__28840 = l;
var G__28841 = m;
var G__28842 = n;
var G__28843 = o;
var G__28844 = p;
var G__28845 = q;
var G__28846 = r;
var G__28847 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__28829,G__28830,G__28831,G__28832,G__28833,G__28834,G__28835,G__28836,G__28837,G__28838,G__28839,G__28840,G__28841,G__28842,G__28843,G__28844,G__28845,G__28846,G__28847) : self__.dispatch_fn.call(null,G__28829,G__28830,G__28831,G__28832,G__28833,G__28834,G__28835,G__28836,G__28837,G__28838,G__28839,G__28840,G__28841,G__28842,G__28843,G__28844,G__28845,G__28846,G__28847));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28848 = a;
var G__28849 = b;
var G__28850 = c;
var G__28851 = d;
var G__28852 = e;
var G__28853 = f;
var G__28854 = g;
var G__28855 = h;
var G__28856 = i;
var G__28857 = j;
var G__28858 = k;
var G__28859 = l;
var G__28860 = m;
var G__28861 = n;
var G__28862 = o;
var G__28863 = p;
var G__28864 = q;
var G__28865 = r;
var G__28866 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__28848,G__28849,G__28850,G__28851,G__28852,G__28853,G__28854,G__28855,G__28856,G__28857,G__28858,G__28859,G__28860,G__28861,G__28862,G__28863,G__28864,G__28865,G__28866) : target_fn.call(null,G__28848,G__28849,G__28850,G__28851,G__28852,G__28853,G__28854,G__28855,G__28856,G__28857,G__28858,G__28859,G__28860,G__28861,G__28862,G__28863,G__28864,G__28865,G__28866));
});
var G__29327__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28867 = a;
var G__28868 = b;
var G__28869 = c;
var G__28870 = d;
var G__28871 = e;
var G__28872 = f;
var G__28873 = g;
var G__28874 = h;
var G__28875 = i;
var G__28876 = j;
var G__28877 = k;
var G__28878 = l;
var G__28879 = m;
var G__28880 = n;
var G__28881 = o;
var G__28882 = p;
var G__28883 = q;
var G__28884 = r;
var G__28885 = s;
var G__28886 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__28867,G__28868,G__28869,G__28870,G__28871,G__28872,G__28873,G__28874,G__28875,G__28876,G__28877,G__28878,G__28879,G__28880,G__28881,G__28882,G__28883,G__28884,G__28885,G__28886) : self__.dispatch_fn.call(null,G__28867,G__28868,G__28869,G__28870,G__28871,G__28872,G__28873,G__28874,G__28875,G__28876,G__28877,G__28878,G__28879,G__28880,G__28881,G__28882,G__28883,G__28884,G__28885,G__28886));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28887 = a;
var G__28888 = b;
var G__28889 = c;
var G__28890 = d;
var G__28891 = e;
var G__28892 = f;
var G__28893 = g;
var G__28894 = h;
var G__28895 = i;
var G__28896 = j;
var G__28897 = k;
var G__28898 = l;
var G__28899 = m;
var G__28900 = n;
var G__28901 = o;
var G__28902 = p;
var G__28903 = q;
var G__28904 = r;
var G__28905 = s;
var G__28906 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__28887,G__28888,G__28889,G__28890,G__28891,G__28892,G__28893,G__28894,G__28895,G__28896,G__28897,G__28898,G__28899,G__28900,G__28901,G__28902,G__28903,G__28904,G__28905,G__28906) : target_fn.call(null,G__28887,G__28888,G__28889,G__28890,G__28891,G__28892,G__28893,G__28894,G__28895,G__28896,G__28897,G__28898,G__28899,G__28900,G__28901,G__28902,G__28903,G__28904,G__28905,G__28906));
});
var G__29327__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__29327 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__29327__1.call(this,self__);
case 2:
return G__29327__2.call(this,self__,a);
case 3:
return G__29327__3.call(this,self__,a,b);
case 4:
return G__29327__4.call(this,self__,a,b,c);
case 5:
return G__29327__5.call(this,self__,a,b,c,d);
case 6:
return G__29327__6.call(this,self__,a,b,c,d,e);
case 7:
return G__29327__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__29327__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__29327__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__29327__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__29327__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__29327__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__29327__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__29327__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__29327__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__29327__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__29327__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__29327__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__29327__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__29327__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__29327__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__29327__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29327.cljs$core$IFn$_invoke$arity$1 = G__29327__1;
G__29327.cljs$core$IFn$_invoke$arity$2 = G__29327__2;
G__29327.cljs$core$IFn$_invoke$arity$3 = G__29327__3;
G__29327.cljs$core$IFn$_invoke$arity$4 = G__29327__4;
G__29327.cljs$core$IFn$_invoke$arity$5 = G__29327__5;
G__29327.cljs$core$IFn$_invoke$arity$6 = G__29327__6;
G__29327.cljs$core$IFn$_invoke$arity$7 = G__29327__7;
G__29327.cljs$core$IFn$_invoke$arity$8 = G__29327__8;
G__29327.cljs$core$IFn$_invoke$arity$9 = G__29327__9;
G__29327.cljs$core$IFn$_invoke$arity$10 = G__29327__10;
G__29327.cljs$core$IFn$_invoke$arity$11 = G__29327__11;
G__29327.cljs$core$IFn$_invoke$arity$12 = G__29327__12;
G__29327.cljs$core$IFn$_invoke$arity$13 = G__29327__13;
G__29327.cljs$core$IFn$_invoke$arity$14 = G__29327__14;
G__29327.cljs$core$IFn$_invoke$arity$15 = G__29327__15;
G__29327.cljs$core$IFn$_invoke$arity$16 = G__29327__16;
G__29327.cljs$core$IFn$_invoke$arity$17 = G__29327__17;
G__29327.cljs$core$IFn$_invoke$arity$18 = G__29327__18;
G__29327.cljs$core$IFn$_invoke$arity$19 = G__29327__19;
G__29327.cljs$core$IFn$_invoke$arity$20 = G__29327__20;
G__29327.cljs$core$IFn$_invoke$arity$21 = G__29327__21;
G__29327.cljs$core$IFn$_invoke$arity$22 = G__29327__22;
return G__29327;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args28479){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28479)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28907 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__28907) : self__.dispatch_fn.call(null,G__28907));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28908 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__28908) : target_fn.call(null,G__28908));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28909 = a;
var G__28910 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__28909,G__28910) : self__.dispatch_fn.call(null,G__28909,G__28910));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28911 = a;
var G__28912 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__28911,G__28912) : target_fn.call(null,G__28911,G__28912));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28913 = a;
var G__28914 = b;
var G__28915 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__28913,G__28914,G__28915) : self__.dispatch_fn.call(null,G__28913,G__28914,G__28915));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28916 = a;
var G__28917 = b;
var G__28918 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__28916,G__28917,G__28918) : target_fn.call(null,G__28916,G__28917,G__28918));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28919 = a;
var G__28920 = b;
var G__28921 = c;
var G__28922 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__28919,G__28920,G__28921,G__28922) : self__.dispatch_fn.call(null,G__28919,G__28920,G__28921,G__28922));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28923 = a;
var G__28924 = b;
var G__28925 = c;
var G__28926 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__28923,G__28924,G__28925,G__28926) : target_fn.call(null,G__28923,G__28924,G__28925,G__28926));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28927 = a;
var G__28928 = b;
var G__28929 = c;
var G__28930 = d;
var G__28931 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__28927,G__28928,G__28929,G__28930,G__28931) : self__.dispatch_fn.call(null,G__28927,G__28928,G__28929,G__28930,G__28931));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28932 = a;
var G__28933 = b;
var G__28934 = c;
var G__28935 = d;
var G__28936 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__28932,G__28933,G__28934,G__28935,G__28936) : target_fn.call(null,G__28932,G__28933,G__28934,G__28935,G__28936));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28937 = a;
var G__28938 = b;
var G__28939 = c;
var G__28940 = d;
var G__28941 = e;
var G__28942 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__28937,G__28938,G__28939,G__28940,G__28941,G__28942) : self__.dispatch_fn.call(null,G__28937,G__28938,G__28939,G__28940,G__28941,G__28942));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28943 = a;
var G__28944 = b;
var G__28945 = c;
var G__28946 = d;
var G__28947 = e;
var G__28948 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__28943,G__28944,G__28945,G__28946,G__28947,G__28948) : target_fn.call(null,G__28943,G__28944,G__28945,G__28946,G__28947,G__28948));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28949 = a;
var G__28950 = b;
var G__28951 = c;
var G__28952 = d;
var G__28953 = e;
var G__28954 = f;
var G__28955 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__28949,G__28950,G__28951,G__28952,G__28953,G__28954,G__28955) : self__.dispatch_fn.call(null,G__28949,G__28950,G__28951,G__28952,G__28953,G__28954,G__28955));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28956 = a;
var G__28957 = b;
var G__28958 = c;
var G__28959 = d;
var G__28960 = e;
var G__28961 = f;
var G__28962 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__28956,G__28957,G__28958,G__28959,G__28960,G__28961,G__28962) : target_fn.call(null,G__28956,G__28957,G__28958,G__28959,G__28960,G__28961,G__28962));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28963 = a;
var G__28964 = b;
var G__28965 = c;
var G__28966 = d;
var G__28967 = e;
var G__28968 = f;
var G__28969 = g;
var G__28970 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__28963,G__28964,G__28965,G__28966,G__28967,G__28968,G__28969,G__28970) : self__.dispatch_fn.call(null,G__28963,G__28964,G__28965,G__28966,G__28967,G__28968,G__28969,G__28970));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28971 = a;
var G__28972 = b;
var G__28973 = c;
var G__28974 = d;
var G__28975 = e;
var G__28976 = f;
var G__28977 = g;
var G__28978 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__28971,G__28972,G__28973,G__28974,G__28975,G__28976,G__28977,G__28978) : target_fn.call(null,G__28971,G__28972,G__28973,G__28974,G__28975,G__28976,G__28977,G__28978));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28979 = a;
var G__28980 = b;
var G__28981 = c;
var G__28982 = d;
var G__28983 = e;
var G__28984 = f;
var G__28985 = g;
var G__28986 = h;
var G__28987 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__28979,G__28980,G__28981,G__28982,G__28983,G__28984,G__28985,G__28986,G__28987) : self__.dispatch_fn.call(null,G__28979,G__28980,G__28981,G__28982,G__28983,G__28984,G__28985,G__28986,G__28987));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28988 = a;
var G__28989 = b;
var G__28990 = c;
var G__28991 = d;
var G__28992 = e;
var G__28993 = f;
var G__28994 = g;
var G__28995 = h;
var G__28996 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__28988,G__28989,G__28990,G__28991,G__28992,G__28993,G__28994,G__28995,G__28996) : target_fn.call(null,G__28988,G__28989,G__28990,G__28991,G__28992,G__28993,G__28994,G__28995,G__28996));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28997 = a;
var G__28998 = b;
var G__28999 = c;
var G__29000 = d;
var G__29001 = e;
var G__29002 = f;
var G__29003 = g;
var G__29004 = h;
var G__29005 = i;
var G__29006 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__28997,G__28998,G__28999,G__29000,G__29001,G__29002,G__29003,G__29004,G__29005,G__29006) : self__.dispatch_fn.call(null,G__28997,G__28998,G__28999,G__29000,G__29001,G__29002,G__29003,G__29004,G__29005,G__29006));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29007 = a;
var G__29008 = b;
var G__29009 = c;
var G__29010 = d;
var G__29011 = e;
var G__29012 = f;
var G__29013 = g;
var G__29014 = h;
var G__29015 = i;
var G__29016 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__29007,G__29008,G__29009,G__29010,G__29011,G__29012,G__29013,G__29014,G__29015,G__29016) : target_fn.call(null,G__29007,G__29008,G__29009,G__29010,G__29011,G__29012,G__29013,G__29014,G__29015,G__29016));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29017 = a;
var G__29018 = b;
var G__29019 = c;
var G__29020 = d;
var G__29021 = e;
var G__29022 = f;
var G__29023 = g;
var G__29024 = h;
var G__29025 = i;
var G__29026 = j;
var G__29027 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__29017,G__29018,G__29019,G__29020,G__29021,G__29022,G__29023,G__29024,G__29025,G__29026,G__29027) : self__.dispatch_fn.call(null,G__29017,G__29018,G__29019,G__29020,G__29021,G__29022,G__29023,G__29024,G__29025,G__29026,G__29027));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29028 = a;
var G__29029 = b;
var G__29030 = c;
var G__29031 = d;
var G__29032 = e;
var G__29033 = f;
var G__29034 = g;
var G__29035 = h;
var G__29036 = i;
var G__29037 = j;
var G__29038 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__29028,G__29029,G__29030,G__29031,G__29032,G__29033,G__29034,G__29035,G__29036,G__29037,G__29038) : target_fn.call(null,G__29028,G__29029,G__29030,G__29031,G__29032,G__29033,G__29034,G__29035,G__29036,G__29037,G__29038));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29039 = a;
var G__29040 = b;
var G__29041 = c;
var G__29042 = d;
var G__29043 = e;
var G__29044 = f;
var G__29045 = g;
var G__29046 = h;
var G__29047 = i;
var G__29048 = j;
var G__29049 = k;
var G__29050 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__29039,G__29040,G__29041,G__29042,G__29043,G__29044,G__29045,G__29046,G__29047,G__29048,G__29049,G__29050) : self__.dispatch_fn.call(null,G__29039,G__29040,G__29041,G__29042,G__29043,G__29044,G__29045,G__29046,G__29047,G__29048,G__29049,G__29050));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29051 = a;
var G__29052 = b;
var G__29053 = c;
var G__29054 = d;
var G__29055 = e;
var G__29056 = f;
var G__29057 = g;
var G__29058 = h;
var G__29059 = i;
var G__29060 = j;
var G__29061 = k;
var G__29062 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__29051,G__29052,G__29053,G__29054,G__29055,G__29056,G__29057,G__29058,G__29059,G__29060,G__29061,G__29062) : target_fn.call(null,G__29051,G__29052,G__29053,G__29054,G__29055,G__29056,G__29057,G__29058,G__29059,G__29060,G__29061,G__29062));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29063 = a;
var G__29064 = b;
var G__29065 = c;
var G__29066 = d;
var G__29067 = e;
var G__29068 = f;
var G__29069 = g;
var G__29070 = h;
var G__29071 = i;
var G__29072 = j;
var G__29073 = k;
var G__29074 = l;
var G__29075 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__29063,G__29064,G__29065,G__29066,G__29067,G__29068,G__29069,G__29070,G__29071,G__29072,G__29073,G__29074,G__29075) : self__.dispatch_fn.call(null,G__29063,G__29064,G__29065,G__29066,G__29067,G__29068,G__29069,G__29070,G__29071,G__29072,G__29073,G__29074,G__29075));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29076 = a;
var G__29077 = b;
var G__29078 = c;
var G__29079 = d;
var G__29080 = e;
var G__29081 = f;
var G__29082 = g;
var G__29083 = h;
var G__29084 = i;
var G__29085 = j;
var G__29086 = k;
var G__29087 = l;
var G__29088 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__29076,G__29077,G__29078,G__29079,G__29080,G__29081,G__29082,G__29083,G__29084,G__29085,G__29086,G__29087,G__29088) : target_fn.call(null,G__29076,G__29077,G__29078,G__29079,G__29080,G__29081,G__29082,G__29083,G__29084,G__29085,G__29086,G__29087,G__29088));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29089 = a;
var G__29090 = b;
var G__29091 = c;
var G__29092 = d;
var G__29093 = e;
var G__29094 = f;
var G__29095 = g;
var G__29096 = h;
var G__29097 = i;
var G__29098 = j;
var G__29099 = k;
var G__29100 = l;
var G__29101 = m;
var G__29102 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__29089,G__29090,G__29091,G__29092,G__29093,G__29094,G__29095,G__29096,G__29097,G__29098,G__29099,G__29100,G__29101,G__29102) : self__.dispatch_fn.call(null,G__29089,G__29090,G__29091,G__29092,G__29093,G__29094,G__29095,G__29096,G__29097,G__29098,G__29099,G__29100,G__29101,G__29102));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29103 = a;
var G__29104 = b;
var G__29105 = c;
var G__29106 = d;
var G__29107 = e;
var G__29108 = f;
var G__29109 = g;
var G__29110 = h;
var G__29111 = i;
var G__29112 = j;
var G__29113 = k;
var G__29114 = l;
var G__29115 = m;
var G__29116 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__29103,G__29104,G__29105,G__29106,G__29107,G__29108,G__29109,G__29110,G__29111,G__29112,G__29113,G__29114,G__29115,G__29116) : target_fn.call(null,G__29103,G__29104,G__29105,G__29106,G__29107,G__29108,G__29109,G__29110,G__29111,G__29112,G__29113,G__29114,G__29115,G__29116));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29117 = a;
var G__29118 = b;
var G__29119 = c;
var G__29120 = d;
var G__29121 = e;
var G__29122 = f;
var G__29123 = g;
var G__29124 = h;
var G__29125 = i;
var G__29126 = j;
var G__29127 = k;
var G__29128 = l;
var G__29129 = m;
var G__29130 = n;
var G__29131 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__29117,G__29118,G__29119,G__29120,G__29121,G__29122,G__29123,G__29124,G__29125,G__29126,G__29127,G__29128,G__29129,G__29130,G__29131) : self__.dispatch_fn.call(null,G__29117,G__29118,G__29119,G__29120,G__29121,G__29122,G__29123,G__29124,G__29125,G__29126,G__29127,G__29128,G__29129,G__29130,G__29131));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29132 = a;
var G__29133 = b;
var G__29134 = c;
var G__29135 = d;
var G__29136 = e;
var G__29137 = f;
var G__29138 = g;
var G__29139 = h;
var G__29140 = i;
var G__29141 = j;
var G__29142 = k;
var G__29143 = l;
var G__29144 = m;
var G__29145 = n;
var G__29146 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__29132,G__29133,G__29134,G__29135,G__29136,G__29137,G__29138,G__29139,G__29140,G__29141,G__29142,G__29143,G__29144,G__29145,G__29146) : target_fn.call(null,G__29132,G__29133,G__29134,G__29135,G__29136,G__29137,G__29138,G__29139,G__29140,G__29141,G__29142,G__29143,G__29144,G__29145,G__29146));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29147 = a;
var G__29148 = b;
var G__29149 = c;
var G__29150 = d;
var G__29151 = e;
var G__29152 = f;
var G__29153 = g;
var G__29154 = h;
var G__29155 = i;
var G__29156 = j;
var G__29157 = k;
var G__29158 = l;
var G__29159 = m;
var G__29160 = n;
var G__29161 = o;
var G__29162 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__29147,G__29148,G__29149,G__29150,G__29151,G__29152,G__29153,G__29154,G__29155,G__29156,G__29157,G__29158,G__29159,G__29160,G__29161,G__29162) : self__.dispatch_fn.call(null,G__29147,G__29148,G__29149,G__29150,G__29151,G__29152,G__29153,G__29154,G__29155,G__29156,G__29157,G__29158,G__29159,G__29160,G__29161,G__29162));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29163 = a;
var G__29164 = b;
var G__29165 = c;
var G__29166 = d;
var G__29167 = e;
var G__29168 = f;
var G__29169 = g;
var G__29170 = h;
var G__29171 = i;
var G__29172 = j;
var G__29173 = k;
var G__29174 = l;
var G__29175 = m;
var G__29176 = n;
var G__29177 = o;
var G__29178 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__29163,G__29164,G__29165,G__29166,G__29167,G__29168,G__29169,G__29170,G__29171,G__29172,G__29173,G__29174,G__29175,G__29176,G__29177,G__29178) : target_fn.call(null,G__29163,G__29164,G__29165,G__29166,G__29167,G__29168,G__29169,G__29170,G__29171,G__29172,G__29173,G__29174,G__29175,G__29176,G__29177,G__29178));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29179 = a;
var G__29180 = b;
var G__29181 = c;
var G__29182 = d;
var G__29183 = e;
var G__29184 = f;
var G__29185 = g;
var G__29186 = h;
var G__29187 = i;
var G__29188 = j;
var G__29189 = k;
var G__29190 = l;
var G__29191 = m;
var G__29192 = n;
var G__29193 = o;
var G__29194 = p;
var G__29195 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__29179,G__29180,G__29181,G__29182,G__29183,G__29184,G__29185,G__29186,G__29187,G__29188,G__29189,G__29190,G__29191,G__29192,G__29193,G__29194,G__29195) : self__.dispatch_fn.call(null,G__29179,G__29180,G__29181,G__29182,G__29183,G__29184,G__29185,G__29186,G__29187,G__29188,G__29189,G__29190,G__29191,G__29192,G__29193,G__29194,G__29195));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29196 = a;
var G__29197 = b;
var G__29198 = c;
var G__29199 = d;
var G__29200 = e;
var G__29201 = f;
var G__29202 = g;
var G__29203 = h;
var G__29204 = i;
var G__29205 = j;
var G__29206 = k;
var G__29207 = l;
var G__29208 = m;
var G__29209 = n;
var G__29210 = o;
var G__29211 = p;
var G__29212 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__29196,G__29197,G__29198,G__29199,G__29200,G__29201,G__29202,G__29203,G__29204,G__29205,G__29206,G__29207,G__29208,G__29209,G__29210,G__29211,G__29212) : target_fn.call(null,G__29196,G__29197,G__29198,G__29199,G__29200,G__29201,G__29202,G__29203,G__29204,G__29205,G__29206,G__29207,G__29208,G__29209,G__29210,G__29211,G__29212));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29213 = a;
var G__29214 = b;
var G__29215 = c;
var G__29216 = d;
var G__29217 = e;
var G__29218 = f;
var G__29219 = g;
var G__29220 = h;
var G__29221 = i;
var G__29222 = j;
var G__29223 = k;
var G__29224 = l;
var G__29225 = m;
var G__29226 = n;
var G__29227 = o;
var G__29228 = p;
var G__29229 = q;
var G__29230 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__29213,G__29214,G__29215,G__29216,G__29217,G__29218,G__29219,G__29220,G__29221,G__29222,G__29223,G__29224,G__29225,G__29226,G__29227,G__29228,G__29229,G__29230) : self__.dispatch_fn.call(null,G__29213,G__29214,G__29215,G__29216,G__29217,G__29218,G__29219,G__29220,G__29221,G__29222,G__29223,G__29224,G__29225,G__29226,G__29227,G__29228,G__29229,G__29230));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29231 = a;
var G__29232 = b;
var G__29233 = c;
var G__29234 = d;
var G__29235 = e;
var G__29236 = f;
var G__29237 = g;
var G__29238 = h;
var G__29239 = i;
var G__29240 = j;
var G__29241 = k;
var G__29242 = l;
var G__29243 = m;
var G__29244 = n;
var G__29245 = o;
var G__29246 = p;
var G__29247 = q;
var G__29248 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__29231,G__29232,G__29233,G__29234,G__29235,G__29236,G__29237,G__29238,G__29239,G__29240,G__29241,G__29242,G__29243,G__29244,G__29245,G__29246,G__29247,G__29248) : target_fn.call(null,G__29231,G__29232,G__29233,G__29234,G__29235,G__29236,G__29237,G__29238,G__29239,G__29240,G__29241,G__29242,G__29243,G__29244,G__29245,G__29246,G__29247,G__29248));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29249 = a;
var G__29250 = b;
var G__29251 = c;
var G__29252 = d;
var G__29253 = e;
var G__29254 = f;
var G__29255 = g;
var G__29256 = h;
var G__29257 = i;
var G__29258 = j;
var G__29259 = k;
var G__29260 = l;
var G__29261 = m;
var G__29262 = n;
var G__29263 = o;
var G__29264 = p;
var G__29265 = q;
var G__29266 = r;
var G__29267 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__29249,G__29250,G__29251,G__29252,G__29253,G__29254,G__29255,G__29256,G__29257,G__29258,G__29259,G__29260,G__29261,G__29262,G__29263,G__29264,G__29265,G__29266,G__29267) : self__.dispatch_fn.call(null,G__29249,G__29250,G__29251,G__29252,G__29253,G__29254,G__29255,G__29256,G__29257,G__29258,G__29259,G__29260,G__29261,G__29262,G__29263,G__29264,G__29265,G__29266,G__29267));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29268 = a;
var G__29269 = b;
var G__29270 = c;
var G__29271 = d;
var G__29272 = e;
var G__29273 = f;
var G__29274 = g;
var G__29275 = h;
var G__29276 = i;
var G__29277 = j;
var G__29278 = k;
var G__29279 = l;
var G__29280 = m;
var G__29281 = n;
var G__29282 = o;
var G__29283 = p;
var G__29284 = q;
var G__29285 = r;
var G__29286 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__29268,G__29269,G__29270,G__29271,G__29272,G__29273,G__29274,G__29275,G__29276,G__29277,G__29278,G__29279,G__29280,G__29281,G__29282,G__29283,G__29284,G__29285,G__29286) : target_fn.call(null,G__29268,G__29269,G__29270,G__29271,G__29272,G__29273,G__29274,G__29275,G__29276,G__29277,G__29278,G__29279,G__29280,G__29281,G__29282,G__29283,G__29284,G__29285,G__29286));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29287 = a;
var G__29288 = b;
var G__29289 = c;
var G__29290 = d;
var G__29291 = e;
var G__29292 = f;
var G__29293 = g;
var G__29294 = h;
var G__29295 = i;
var G__29296 = j;
var G__29297 = k;
var G__29298 = l;
var G__29299 = m;
var G__29300 = n;
var G__29301 = o;
var G__29302 = p;
var G__29303 = q;
var G__29304 = r;
var G__29305 = s;
var G__29306 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__29287,G__29288,G__29289,G__29290,G__29291,G__29292,G__29293,G__29294,G__29295,G__29296,G__29297,G__29298,G__29299,G__29300,G__29301,G__29302,G__29303,G__29304,G__29305,G__29306) : self__.dispatch_fn.call(null,G__29287,G__29288,G__29289,G__29290,G__29291,G__29292,G__29293,G__29294,G__29295,G__29296,G__29297,G__29298,G__29299,G__29300,G__29301,G__29302,G__29303,G__29304,G__29305,G__29306));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29307 = a;
var G__29308 = b;
var G__29309 = c;
var G__29310 = d;
var G__29311 = e;
var G__29312 = f;
var G__29313 = g;
var G__29314 = h;
var G__29315 = i;
var G__29316 = j;
var G__29317 = k;
var G__29318 = l;
var G__29319 = m;
var G__29320 = n;
var G__29321 = o;
var G__29322 = p;
var G__29323 = q;
var G__29324 = r;
var G__29325 = s;
var G__29326 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__29307,G__29308,G__29309,G__29310,G__29311,G__29312,G__29313,G__29314,G__29315,G__29316,G__29317,G__29318,G__29319,G__29320,G__29321,G__29322,G__29323,G__29324,G__29325,G__29326) : target_fn.call(null,G__29307,G__29308,G__29309,G__29310,G__29311,G__29312,G__29313,G__29314,G__29315,G__29316,G__29317,G__29318,G__29319,G__29320,G__29321,G__29322,G__29323,G__29324,G__29325,G__29326));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__29328 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__29328);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__29333 = msg;
return Error(G__29333);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__29338 = x;
var G__29339 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__29338,G__29339) : pred.call(null,G__29338,G__29339));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__29340 = y;
var G__29341 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__29340,G__29341) : pred.call(null,G__29340,G__29341));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map