// Compiled by ClojureScript 0.0-2913 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2913";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__24025__delegate = function (args){
return console.log.apply(console,(function (){var G__24024 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__24024) : cljs.core.into_array.call(null,G__24024));
})());
};
var G__24025 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__24026__i = 0, G__24026__a = new Array(arguments.length -  0);
while (G__24026__i < G__24026__a.length) {G__24026__a[G__24026__i] = arguments[G__24026__i + 0]; ++G__24026__i;}
  args = new cljs.core.IndexedSeq(G__24026__a,0);
} 
return G__24025__delegate.call(this,args);};
G__24025.cljs$lang$maxFixedArity = 0;
G__24025.cljs$lang$applyTo = (function (arglist__24027){
var args = cljs.core.seq(arglist__24027);
return G__24025__delegate(args);
});
G__24025.cljs$core$IFn$_invoke$arity$variadic = G__24025__delegate;
return G__24025;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__24029 = x;
return goog.isString(G__24029);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__24031 = x__$1;
return goog.typeOf(G__24031);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__17606__auto__ = ty;
if(cljs.core.truth_(and__17606__auto__)){
return ty.cljs$lang$type;
} else {
return and__17606__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__24033 = obj;
return goog.typeOf(G__24033);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__24035 = Symbol;
return goog.typeOf(G__24035);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__18505__auto___24037 = len;
var i_24038 = (0);
while(true){
if((i_24038 < n__18505__auto___24037)){
(new_arr[i_24038] = (arr[i_24038]));

var G__24039 = (i_24038 + (1));
i_24038 = G__24039;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__24040 = (i + (1));
i = G__24040;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__24049__delegate = function (array,i,idxs){
var G__24046 = aget;
var G__24047 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__24048 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__24046,G__24047,G__24048) : cljs.core.apply.call(null,G__24046,G__24047,G__24048));
};
var G__24049 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__24050__i = 0, G__24050__a = new Array(arguments.length -  2);
while (G__24050__i < G__24050__a.length) {G__24050__a[G__24050__i] = arguments[G__24050__i + 2]; ++G__24050__i;}
  idxs = new cljs.core.IndexedSeq(G__24050__a,0);
} 
return G__24049__delegate.call(this,array,i,idxs);};
G__24049.cljs$lang$maxFixedArity = 2;
G__24049.cljs$lang$applyTo = (function (arglist__24051){
var array = cljs.core.first(arglist__24051);
arglist__24051 = cljs.core.next(arglist__24051);
var i = cljs.core.first(arglist__24051);
var idxs = cljs.core.rest(arglist__24051);
return G__24049__delegate(array,i,idxs);
});
G__24049.cljs$core$IFn$_invoke$arity$variadic = G__24049__delegate;
return G__24049;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__24052 = null;
if (arguments.length > 2) {
var G__24053__i = 0, G__24053__a = new Array(arguments.length -  2);
while (G__24053__i < G__24053__a.length) {G__24053__a[G__24053__i] = arguments[G__24053__i + 2]; ++G__24053__i;}
G__24052 = new cljs.core.IndexedSeq(G__24053__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__24052);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__24062__delegate = function (array,idx,idx2,idxv){
var G__24058 = aset;
var G__24059 = (array[idx]);
var G__24060 = idx2;
var G__24061 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__24058,G__24059,G__24060,G__24061) : cljs.core.apply.call(null,G__24058,G__24059,G__24060,G__24061));
};
var G__24062 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__24063__i = 0, G__24063__a = new Array(arguments.length -  3);
while (G__24063__i < G__24063__a.length) {G__24063__a[G__24063__i] = arguments[G__24063__i + 3]; ++G__24063__i;}
  idxv = new cljs.core.IndexedSeq(G__24063__a,0);
} 
return G__24062__delegate.call(this,array,idx,idx2,idxv);};
G__24062.cljs$lang$maxFixedArity = 3;
G__24062.cljs$lang$applyTo = (function (arglist__24064){
var array = cljs.core.first(arglist__24064);
arglist__24064 = cljs.core.next(arglist__24064);
var idx = cljs.core.first(arglist__24064);
arglist__24064 = cljs.core.next(arglist__24064);
var idx2 = cljs.core.first(arglist__24064);
var idxv = cljs.core.rest(arglist__24064);
return G__24062__delegate(array,idx,idx2,idxv);
});
G__24062.cljs$core$IFn$_invoke$arity$variadic = G__24062__delegate;
return G__24062;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__24065 = null;
if (arguments.length > 3) {
var G__24066__i = 0, G__24066__a = new Array(arguments.length -  3);
while (G__24066__i < G__24066__a.length) {G__24066__a[G__24066__i] = arguments[G__24066__i + 3]; ++G__24066__i;}
G__24065 = new cljs.core.IndexedSeq(G__24066__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__24065);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__24072 = (function (a,x){
a.push(x);

return a;
});
var G__24073 = [];
var G__24074 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__24072,G__24073,G__24074) : cljs.core.reduce.call(null,G__24072,G__24073,G__24074));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__24075__i = 0, G__24075__a = new Array(arguments.length -  2);
while (G__24075__i < G__24075__a.length) {G__24075__a[G__24075__i] = arguments[G__24075__i + 2]; ++G__24075__i;}
  args = new cljs.core.IndexedSeq(G__24075__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__24076){
var obj = cljs.core.first(arglist__24076);
arglist__24076 = cljs.core.next(arglist__24076);
var s = cljs.core.first(arglist__24076);
var args = cljs.core.rest(arglist__24076);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj24078 = {};
return obj24078;
})();


cljs.core.IFn = (function (){var obj24080 = {};
return obj24080;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__17606__auto__ = this$;
if(and__17606__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__17606__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__18262__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17618__auto__ = (cljs.core._invoke[(function (){var G__24126 = x__18262__auto__;
return goog.typeOf(G__24126);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._invoke["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__17606__auto__ = this$;
if(and__17606__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__17606__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__18262__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17618__auto__ = (cljs.core._invoke[(function (){var G__24128 = x__18262__auto__;
return goog.typeOf(G__24128);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._invoke["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__17606__auto__ = this$;
if(and__17606__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__17606__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__18262__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17618__auto__ = (cljs.core._invoke[(function (){var G__24130 = x__18262__auto__;
return goog.typeOf(G__24130);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._invoke["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__17606__auto__ = this$;
if(and__17606__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__17606__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__18262__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17618__auto__ = (cljs.core._invoke[(function (){var G__24132 = x__18262__auto__;
return goog.typeOf(G__24132);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._invoke["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__17606__auto__ = this$;
if(and__17606__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__17606__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__18262__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17618__auto__ = (cljs.core._invoke[(function (){var G__24134 = x__18262__auto__;
return goog.typeOf(G__24134);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._invoke["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__17606__auto__ = this$;
if(and__17606__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__17606__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__18262__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17618__auto__ = (cljs.core._invoke[(function (){var G__24136 = x__18262__auto__;
return goog.typeOf(G__24136);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._invoke["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__17606__auto__ = this$;
if(and__17606__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__17606__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__18262__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17618__auto__ = (cljs.core._invoke[(function (){var G__24138 = x__18262__auto__;
return goog.typeOf(G__24138);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._invoke["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__17606__auto__ = this$;
if(and__17606__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__17606__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__18262__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17618__auto__ = (cljs.core._invoke[(function (){var G__24140 = x__18262__auto__;
return goog.typeOf(G__24140);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._invoke["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__17606__auto__ = this$;
if(and__17606__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__17606__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__18262__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17618__auto__ = (cljs.core._invoke[(function (){var G__24142 = x__18262__auto__;
return goog.typeOf(G__24142);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._invoke["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__17606__auto__ = this$;
if(and__17606__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__17606__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__18262__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17618__auto__ = (cljs.core._invoke[(function (){var G__24144 = x__18262__auto__;
return goog.typeOf(G__24144);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._invoke["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__17606__auto__ = this$;
if(and__17606__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__17606__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__18262__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17618__auto__ = (cljs.core._invoke[(function (){var G__24146 = x__18262__auto__;
return goog.typeOf(G__24146);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._invoke["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__17606__auto__ = this$;
if(and__17606__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__17606__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__18262__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17618__auto__ = (cljs.core._invoke[(function (){var G__24148 = x__18262__auto__;
return goog.typeOf(G__24148);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._invoke["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__17606__auto__ = this$;
if(and__17606__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__17606__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__18262__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17618__auto__ = (cljs.core._invoke[(function (){var G__24150 = x__18262__auto__;
return goog.typeOf(G__24150);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._invoke["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__17606__auto__ = this$;
if(and__17606__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__17606__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__18262__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17618__auto__ = (cljs.core._invoke[(function (){var G__24152 = x__18262__auto__;
return goog.typeOf(G__24152);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._invoke["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__17606__auto__ = this$;
if(and__17606__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__17606__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__18262__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17618__auto__ = (cljs.core._invoke[(function (){var G__24154 = x__18262__auto__;
return goog.typeOf(G__24154);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._invoke["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__17606__auto__ = this$;
if(and__17606__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__17606__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__18262__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17618__auto__ = (cljs.core._invoke[(function (){var G__24156 = x__18262__auto__;
return goog.typeOf(G__24156);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._invoke["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__17606__auto__ = this$;
if(and__17606__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__17606__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__18262__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17618__auto__ = (cljs.core._invoke[(function (){var G__24158 = x__18262__auto__;
return goog.typeOf(G__24158);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._invoke["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__17606__auto__ = this$;
if(and__17606__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__17606__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__18262__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17618__auto__ = (cljs.core._invoke[(function (){var G__24160 = x__18262__auto__;
return goog.typeOf(G__24160);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._invoke["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__17606__auto__ = this$;
if(and__17606__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__17606__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__18262__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17618__auto__ = (cljs.core._invoke[(function (){var G__24162 = x__18262__auto__;
return goog.typeOf(G__24162);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._invoke["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__17606__auto__ = this$;
if(and__17606__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__17606__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__18262__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17618__auto__ = (cljs.core._invoke[(function (){var G__24164 = x__18262__auto__;
return goog.typeOf(G__24164);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._invoke["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__17606__auto__ = this$;
if(and__17606__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__17606__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__18262__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17618__auto__ = (cljs.core._invoke[(function (){var G__24166 = x__18262__auto__;
return goog.typeOf(G__24166);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._invoke["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__17606__auto__ = this$;
if(and__17606__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__17606__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__18262__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17618__auto__ = (cljs.core._invoke[(function (){var G__24168 = x__18262__auto__;
return goog.typeOf(G__24168);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._invoke["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj24170 = {};
return obj24170;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__17606__auto__ = value;
if(and__17606__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__17606__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__18262__auto__ = (((value == null))?null:value);
return (function (){var or__17618__auto__ = (cljs.core._clone[(function (){var G__24174 = x__18262__auto__;
return goog.typeOf(G__24174);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._clone["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj24176 = {};
return obj24176;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__17606__auto__ = coll;
if(and__17606__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__17606__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__18262__auto__ = (((coll == null))?null:coll);
return (function (){var or__17618__auto__ = (cljs.core._count[(function (){var G__24180 = x__18262__auto__;
return goog.typeOf(G__24180);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._count["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj24182 = {};
return obj24182;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__17606__auto__ = coll;
if(and__17606__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__17606__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__18262__auto__ = (((coll == null))?null:coll);
return (function (){var or__17618__auto__ = (cljs.core._empty[(function (){var G__24186 = x__18262__auto__;
return goog.typeOf(G__24186);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._empty["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj24188 = {};
return obj24188;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__17606__auto__ = coll;
if(and__17606__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__17606__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__18262__auto__ = (((coll == null))?null:coll);
return (function (){var or__17618__auto__ = (cljs.core._conj[(function (){var G__24192 = x__18262__auto__;
return goog.typeOf(G__24192);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._conj["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj24194 = {};
return obj24194;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__17606__auto__ = coll;
if(and__17606__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__17606__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__18262__auto__ = (((coll == null))?null:coll);
return (function (){var or__17618__auto__ = (cljs.core._nth[(function (){var G__24200 = x__18262__auto__;
return goog.typeOf(G__24200);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._nth["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__17606__auto__ = coll;
if(and__17606__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__17606__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__18262__auto__ = (((coll == null))?null:coll);
return (function (){var or__17618__auto__ = (cljs.core._nth[(function (){var G__24202 = x__18262__auto__;
return goog.typeOf(G__24202);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._nth["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj24204 = {};
return obj24204;
})();


cljs.core.ISeq = (function (){var obj24206 = {};
return obj24206;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__17606__auto__ = coll;
if(and__17606__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__17606__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__18262__auto__ = (((coll == null))?null:coll);
return (function (){var or__17618__auto__ = (cljs.core._first[(function (){var G__24210 = x__18262__auto__;
return goog.typeOf(G__24210);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._first["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__17606__auto__ = coll;
if(and__17606__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__17606__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__18262__auto__ = (((coll == null))?null:coll);
return (function (){var or__17618__auto__ = (cljs.core._rest[(function (){var G__24214 = x__18262__auto__;
return goog.typeOf(G__24214);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._rest["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj24216 = {};
return obj24216;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__17606__auto__ = coll;
if(and__17606__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__17606__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__18262__auto__ = (((coll == null))?null:coll);
return (function (){var or__17618__auto__ = (cljs.core._next[(function (){var G__24220 = x__18262__auto__;
return goog.typeOf(G__24220);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._next["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj24222 = {};
return obj24222;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__17606__auto__ = o;
if(and__17606__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__17606__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__18262__auto__ = (((o == null))?null:o);
return (function (){var or__17618__auto__ = (cljs.core._lookup[(function (){var G__24228 = x__18262__auto__;
return goog.typeOf(G__24228);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._lookup["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__17606__auto__ = o;
if(and__17606__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__17606__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__18262__auto__ = (((o == null))?null:o);
return (function (){var or__17618__auto__ = (cljs.core._lookup[(function (){var G__24230 = x__18262__auto__;
return goog.typeOf(G__24230);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._lookup["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj24232 = {};
return obj24232;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__17606__auto__ = coll;
if(and__17606__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__17606__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__18262__auto__ = (((coll == null))?null:coll);
return (function (){var or__17618__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__24236 = x__18262__auto__;
return goog.typeOf(G__24236);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__17606__auto__ = coll;
if(and__17606__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__17606__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__18262__auto__ = (((coll == null))?null:coll);
return (function (){var or__17618__auto__ = (cljs.core._assoc[(function (){var G__24240 = x__18262__auto__;
return goog.typeOf(G__24240);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._assoc["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj24242 = {};
return obj24242;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__17606__auto__ = coll;
if(and__17606__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__17606__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__18262__auto__ = (((coll == null))?null:coll);
return (function (){var or__17618__auto__ = (cljs.core._dissoc[(function (){var G__24246 = x__18262__auto__;
return goog.typeOf(G__24246);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._dissoc["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj24248 = {};
return obj24248;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__17606__auto__ = coll;
if(and__17606__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__17606__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__18262__auto__ = (((coll == null))?null:coll);
return (function (){var or__17618__auto__ = (cljs.core._key[(function (){var G__24252 = x__18262__auto__;
return goog.typeOf(G__24252);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._key["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__17606__auto__ = coll;
if(and__17606__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__17606__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__18262__auto__ = (((coll == null))?null:coll);
return (function (){var or__17618__auto__ = (cljs.core._val[(function (){var G__24256 = x__18262__auto__;
return goog.typeOf(G__24256);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._val["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj24258 = {};
return obj24258;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__17606__auto__ = coll;
if(and__17606__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__17606__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__18262__auto__ = (((coll == null))?null:coll);
return (function (){var or__17618__auto__ = (cljs.core._disjoin[(function (){var G__24262 = x__18262__auto__;
return goog.typeOf(G__24262);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._disjoin["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj24264 = {};
return obj24264;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__17606__auto__ = coll;
if(and__17606__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__17606__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__18262__auto__ = (((coll == null))?null:coll);
return (function (){var or__17618__auto__ = (cljs.core._peek[(function (){var G__24268 = x__18262__auto__;
return goog.typeOf(G__24268);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._peek["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__17606__auto__ = coll;
if(and__17606__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__17606__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__18262__auto__ = (((coll == null))?null:coll);
return (function (){var or__17618__auto__ = (cljs.core._pop[(function (){var G__24272 = x__18262__auto__;
return goog.typeOf(G__24272);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._pop["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj24274 = {};
return obj24274;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__17606__auto__ = coll;
if(and__17606__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__17606__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__18262__auto__ = (((coll == null))?null:coll);
return (function (){var or__17618__auto__ = (cljs.core._assoc_n[(function (){var G__24278 = x__18262__auto__;
return goog.typeOf(G__24278);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj24280 = {};
return obj24280;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__17606__auto__ = o;
if(and__17606__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__17606__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__18262__auto__ = (((o == null))?null:o);
return (function (){var or__17618__auto__ = (cljs.core._deref[(function (){var G__24284 = x__18262__auto__;
return goog.typeOf(G__24284);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._deref["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj24286 = {};
return obj24286;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__17606__auto__ = o;
if(and__17606__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__17606__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__18262__auto__ = (((o == null))?null:o);
return (function (){var or__17618__auto__ = (cljs.core._deref_with_timeout[(function (){var G__24290 = x__18262__auto__;
return goog.typeOf(G__24290);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj24292 = {};
return obj24292;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__17606__auto__ = o;
if(and__17606__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__17606__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__18262__auto__ = (((o == null))?null:o);
return (function (){var or__17618__auto__ = (cljs.core._meta[(function (){var G__24296 = x__18262__auto__;
return goog.typeOf(G__24296);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._meta["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj24298 = {};
return obj24298;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__17606__auto__ = o;
if(and__17606__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__17606__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__18262__auto__ = (((o == null))?null:o);
return (function (){var or__17618__auto__ = (cljs.core._with_meta[(function (){var G__24302 = x__18262__auto__;
return goog.typeOf(G__24302);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._with_meta["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj24304 = {};
return obj24304;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__17606__auto__ = coll;
if(and__17606__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__17606__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__18262__auto__ = (((coll == null))?null:coll);
return (function (){var or__17618__auto__ = (cljs.core._reduce[(function (){var G__24310 = x__18262__auto__;
return goog.typeOf(G__24310);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._reduce["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__17606__auto__ = coll;
if(and__17606__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__17606__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__18262__auto__ = (((coll == null))?null:coll);
return (function (){var or__17618__auto__ = (cljs.core._reduce[(function (){var G__24312 = x__18262__auto__;
return goog.typeOf(G__24312);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._reduce["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj24314 = {};
return obj24314;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__17606__auto__ = coll;
if(and__17606__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__17606__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__18262__auto__ = (((coll == null))?null:coll);
return (function (){var or__17618__auto__ = (cljs.core._kv_reduce[(function (){var G__24318 = x__18262__auto__;
return goog.typeOf(G__24318);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj24320 = {};
return obj24320;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__17606__auto__ = o;
if(and__17606__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__17606__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__18262__auto__ = (((o == null))?null:o);
return (function (){var or__17618__auto__ = (cljs.core._equiv[(function (){var G__24324 = x__18262__auto__;
return goog.typeOf(G__24324);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._equiv["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj24326 = {};
return obj24326;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__17606__auto__ = o;
if(and__17606__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__17606__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__18262__auto__ = (((o == null))?null:o);
return (function (){var or__17618__auto__ = (cljs.core._hash[(function (){var G__24330 = x__18262__auto__;
return goog.typeOf(G__24330);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._hash["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj24332 = {};
return obj24332;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__17606__auto__ = o;
if(and__17606__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__17606__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__18262__auto__ = (((o == null))?null:o);
return (function (){var or__17618__auto__ = (cljs.core._seq[(function (){var G__24336 = x__18262__auto__;
return goog.typeOf(G__24336);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._seq["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj24338 = {};
return obj24338;
})();


cljs.core.IList = (function (){var obj24340 = {};
return obj24340;
})();


cljs.core.IRecord = (function (){var obj24342 = {};
return obj24342;
})();


cljs.core.IReversible = (function (){var obj24344 = {};
return obj24344;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__17606__auto__ = coll;
if(and__17606__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__17606__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__18262__auto__ = (((coll == null))?null:coll);
return (function (){var or__17618__auto__ = (cljs.core._rseq[(function (){var G__24348 = x__18262__auto__;
return goog.typeOf(G__24348);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._rseq["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj24350 = {};
return obj24350;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__17606__auto__ = coll;
if(and__17606__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__17606__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__18262__auto__ = (((coll == null))?null:coll);
return (function (){var or__17618__auto__ = (cljs.core._sorted_seq[(function (){var G__24354 = x__18262__auto__;
return goog.typeOf(G__24354);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__17606__auto__ = coll;
if(and__17606__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__17606__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__18262__auto__ = (((coll == null))?null:coll);
return (function (){var or__17618__auto__ = (cljs.core._sorted_seq_from[(function (){var G__24358 = x__18262__auto__;
return goog.typeOf(G__24358);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__17606__auto__ = coll;
if(and__17606__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__17606__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__18262__auto__ = (((coll == null))?null:coll);
return (function (){var or__17618__auto__ = (cljs.core._entry_key[(function (){var G__24362 = x__18262__auto__;
return goog.typeOf(G__24362);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._entry_key["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__17606__auto__ = coll;
if(and__17606__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__17606__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__18262__auto__ = (((coll == null))?null:coll);
return (function (){var or__17618__auto__ = (cljs.core._comparator[(function (){var G__24366 = x__18262__auto__;
return goog.typeOf(G__24366);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._comparator["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj24368 = {};
return obj24368;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__17606__auto__ = writer;
if(and__17606__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__17606__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__18262__auto__ = (((writer == null))?null:writer);
return (function (){var or__17618__auto__ = (cljs.core._write[(function (){var G__24372 = x__18262__auto__;
return goog.typeOf(G__24372);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._write["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__17606__auto__ = writer;
if(and__17606__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__17606__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__18262__auto__ = (((writer == null))?null:writer);
return (function (){var or__17618__auto__ = (cljs.core._flush[(function (){var G__24376 = x__18262__auto__;
return goog.typeOf(G__24376);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._flush["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj24378 = {};
return obj24378;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__17606__auto__ = o;
if(and__17606__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__17606__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__18262__auto__ = (((o == null))?null:o);
return (function (){var or__17618__auto__ = (cljs.core._pr_writer[(function (){var G__24382 = x__18262__auto__;
return goog.typeOf(G__24382);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj24384 = {};
return obj24384;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__17606__auto__ = d;
if(and__17606__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__17606__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__18262__auto__ = (((d == null))?null:d);
return (function (){var or__17618__auto__ = (cljs.core._realized_QMARK_[(function (){var G__24388 = x__18262__auto__;
return goog.typeOf(G__24388);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj24390 = {};
return obj24390;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__17606__auto__ = this$;
if(and__17606__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__17606__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__18262__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17618__auto__ = (cljs.core._notify_watches[(function (){var G__24394 = x__18262__auto__;
return goog.typeOf(G__24394);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__17606__auto__ = this$;
if(and__17606__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__17606__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__18262__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17618__auto__ = (cljs.core._add_watch[(function (){var G__24398 = x__18262__auto__;
return goog.typeOf(G__24398);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._add_watch["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__17606__auto__ = this$;
if(and__17606__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__17606__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__18262__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17618__auto__ = (cljs.core._remove_watch[(function (){var G__24402 = x__18262__auto__;
return goog.typeOf(G__24402);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj24404 = {};
return obj24404;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__17606__auto__ = coll;
if(and__17606__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__17606__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__18262__auto__ = (((coll == null))?null:coll);
return (function (){var or__17618__auto__ = (cljs.core._as_transient[(function (){var G__24408 = x__18262__auto__;
return goog.typeOf(G__24408);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._as_transient["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj24410 = {};
return obj24410;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__17606__auto__ = tcoll;
if(and__17606__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__17606__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__18262__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17618__auto__ = (cljs.core._conj_BANG_[(function (){var G__24414 = x__18262__auto__;
return goog.typeOf(G__24414);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__17606__auto__ = tcoll;
if(and__17606__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__17606__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__18262__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17618__auto__ = (cljs.core._persistent_BANG_[(function (){var G__24418 = x__18262__auto__;
return goog.typeOf(G__24418);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj24420 = {};
return obj24420;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__17606__auto__ = tcoll;
if(and__17606__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__17606__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__18262__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17618__auto__ = (cljs.core._assoc_BANG_[(function (){var G__24424 = x__18262__auto__;
return goog.typeOf(G__24424);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj24426 = {};
return obj24426;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__17606__auto__ = tcoll;
if(and__17606__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__17606__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__18262__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17618__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__24430 = x__18262__auto__;
return goog.typeOf(G__24430);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj24432 = {};
return obj24432;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__17606__auto__ = tcoll;
if(and__17606__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__17606__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__18262__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17618__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__24436 = x__18262__auto__;
return goog.typeOf(G__24436);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__17606__auto__ = tcoll;
if(and__17606__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__17606__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__18262__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17618__auto__ = (cljs.core._pop_BANG_[(function (){var G__24440 = x__18262__auto__;
return goog.typeOf(G__24440);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj24442 = {};
return obj24442;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__17606__auto__ = tcoll;
if(and__17606__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__17606__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__18262__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17618__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__24446 = x__18262__auto__;
return goog.typeOf(G__24446);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj24448 = {};
return obj24448;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__17606__auto__ = x;
if(and__17606__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__17606__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__18262__auto__ = (((x == null))?null:x);
return (function (){var or__17618__auto__ = (cljs.core._compare[(function (){var G__24452 = x__18262__auto__;
return goog.typeOf(G__24452);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._compare["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj24454 = {};
return obj24454;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__17606__auto__ = coll;
if(and__17606__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__17606__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__18262__auto__ = (((coll == null))?null:coll);
return (function (){var or__17618__auto__ = (cljs.core._drop_first[(function (){var G__24458 = x__18262__auto__;
return goog.typeOf(G__24458);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._drop_first["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj24460 = {};
return obj24460;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__17606__auto__ = coll;
if(and__17606__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__17606__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__18262__auto__ = (((coll == null))?null:coll);
return (function (){var or__17618__auto__ = (cljs.core._chunked_first[(function (){var G__24464 = x__18262__auto__;
return goog.typeOf(G__24464);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__17606__auto__ = coll;
if(and__17606__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__17606__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__18262__auto__ = (((coll == null))?null:coll);
return (function (){var or__17618__auto__ = (cljs.core._chunked_rest[(function (){var G__24468 = x__18262__auto__;
return goog.typeOf(G__24468);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj24470 = {};
return obj24470;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__17606__auto__ = coll;
if(and__17606__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__17606__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__18262__auto__ = (((coll == null))?null:coll);
return (function (){var or__17618__auto__ = (cljs.core._chunked_next[(function (){var G__24474 = x__18262__auto__;
return goog.typeOf(G__24474);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj24476 = {};
return obj24476;
})();

cljs.core._name = (function _name(x){
if((function (){var and__17606__auto__ = x;
if(and__17606__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__17606__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__18262__auto__ = (((x == null))?null:x);
return (function (){var or__17618__auto__ = (cljs.core._name[(function (){var G__24480 = x__18262__auto__;
return goog.typeOf(G__24480);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._name["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__17606__auto__ = x;
if(and__17606__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__17606__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__18262__auto__ = (((x == null))?null:x);
return (function (){var or__17618__auto__ = (cljs.core._namespace[(function (){var G__24484 = x__18262__auto__;
return goog.typeOf(G__24484);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._namespace["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj24486 = {};
return obj24486;
})();


cljs.core.IReset = (function (){var obj24488 = {};
return obj24488;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__17606__auto__ = o;
if(and__17606__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__17606__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__18262__auto__ = (((o == null))?null:o);
return (function (){var or__17618__auto__ = (cljs.core._reset_BANG_[(function (){var G__24492 = x__18262__auto__;
return goog.typeOf(G__24492);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj24494 = {};
return obj24494;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__17606__auto__ = o;
if(and__17606__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__17606__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__18262__auto__ = (((o == null))?null:o);
return (function (){var or__17618__auto__ = (cljs.core._swap_BANG_[(function (){var G__24504 = x__18262__auto__;
return goog.typeOf(G__24504);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__17606__auto__ = o;
if(and__17606__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__17606__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__18262__auto__ = (((o == null))?null:o);
return (function (){var or__17618__auto__ = (cljs.core._swap_BANG_[(function (){var G__24506 = x__18262__auto__;
return goog.typeOf(G__24506);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__17606__auto__ = o;
if(and__17606__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__17606__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__18262__auto__ = (((o == null))?null:o);
return (function (){var or__17618__auto__ = (cljs.core._swap_BANG_[(function (){var G__24508 = x__18262__auto__;
return goog.typeOf(G__24508);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__17606__auto__ = o;
if(and__17606__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__17606__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__18262__auto__ = (((o == null))?null:o);
return (function (){var or__17618__auto__ = (cljs.core._swap_BANG_[(function (){var G__24510 = x__18262__auto__;
return goog.typeOf(G__24510);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj24512 = {};
return obj24512;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__17606__auto__ = o;
if(and__17606__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__17606__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__18262__auto__ = (((o == null))?null:o);
return (function (){var or__17618__auto__ = (cljs.core._vreset_BANG_[(function (){var G__24516 = x__18262__auto__;
return goog.typeOf(G__24516);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj24518 = {};
return obj24518;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__17606__auto__ = coll;
if(and__17606__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__17606__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__18262__auto__ = (((coll == null))?null:coll);
return (function (){var or__17618__auto__ = (cljs.core._iterator[(function (){var G__24522 = x__18262__auto__;
return goog.typeOf(G__24522);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._iterator["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__24525 = (4294967295);
var G__24526 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__24525,G__24526) : Math.imul.call(null,G__24525,G__24526));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__24529 = a;
var G__24530 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__24529,G__24530) : Math.imul.call(null,G__24529,G__24530));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__24531 = (i + (2));
var G__24532 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__24531;
h1 = G__24532;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj24534 = {};
return obj24534;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__24535 = (i + (1));
var G__24536 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__24535;
hash = G__24536;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj24540 = {};
return obj24540;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__24543 = o;
if(G__24543){
var bit__18292__auto__ = (G__24543.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__18292__auto__) || (G__24543.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__24544 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__24544) : Math.floor.call(null,G__24544));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__17606__auto__ = cljs.core.not(a.ns);
if(and__17606__auto__){
return b.ns;
} else {
return and__17606__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__24551 = a.ns;
var G__24552 = b.ns;
return goog.array.defaultCompare(G__24551,G__24552);
})();
if(((0) === nsc)){
var G__24553 = a.name;
var G__24554 = b.name;
return goog.array.defaultCompare(G__24553,G__24554);
} else {
return nsc;
}
}
} else {
var G__24555 = a.name;
var G__24556 = b.name;
return goog.array.defaultCompare(G__24555,G__24556);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__18039__auto__ = self__._hash;
if(!((h__18039__auto__ == null))){
return h__18039__auto__;
} else {
var h__18039__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__18039__auto____$1;

return h__18039__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__24558 = null;
var G__24558__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__24558__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__24558 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__24558__2.call(this,self__,coll);
case 3:
return G__24558__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24558.cljs$core$IFn$_invoke$arity$2 = G__24558__2;
G__24558.cljs$core$IFn$_invoke$arity$3 = G__24558__3;
return G__24558;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args24557){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24557)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__24606 = null;
var G__24606__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__24606__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__24606__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__24606__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__24606__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__24606__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__24606__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__24606__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__24606__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__24606__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__24606__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__24606__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__24606__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__24606__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__24606__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__24606__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__24606__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__24606__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__24606__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__24606__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__24606__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__24606__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24562 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__24563 = a;
var G__24564 = b;
var G__24565 = c;
var G__24566 = d;
var G__24567 = e;
var G__24568 = f;
var G__24569 = g;
var G__24570 = h;
var G__24571 = i;
var G__24572 = j;
var G__24573 = k;
var G__24574 = l;
var G__24575 = m;
var G__24576 = n;
var G__24577 = o;
var G__24578 = p;
var G__24579 = q;
var G__24580 = r;
var G__24581 = s;
var G__24582 = t;
var G__24583 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__24562,G__24563,G__24564,G__24565,G__24566,G__24567,G__24568,G__24569,G__24570,G__24571,G__24572,G__24573,G__24574,G__24575,G__24576,G__24577,G__24578,G__24579,G__24580,G__24581,G__24582,G__24583) : cljs.core.apply.call(null,G__24562,G__24563,G__24564,G__24565,G__24566,G__24567,G__24568,G__24569,G__24570,G__24571,G__24572,G__24573,G__24574,G__24575,G__24576,G__24577,G__24578,G__24579,G__24580,G__24581,G__24582,G__24583));
});
G__24606 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__24606__1.call(this,self__);
case 2:
return G__24606__2.call(this,self__,a);
case 3:
return G__24606__3.call(this,self__,a,b);
case 4:
return G__24606__4.call(this,self__,a,b,c);
case 5:
return G__24606__5.call(this,self__,a,b,c,d);
case 6:
return G__24606__6.call(this,self__,a,b,c,d,e);
case 7:
return G__24606__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__24606__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__24606__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__24606__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__24606__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__24606__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__24606__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__24606__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__24606__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__24606__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__24606__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__24606__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__24606__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__24606__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__24606__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__24606__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24606.cljs$core$IFn$_invoke$arity$1 = G__24606__1;
G__24606.cljs$core$IFn$_invoke$arity$2 = G__24606__2;
G__24606.cljs$core$IFn$_invoke$arity$3 = G__24606__3;
G__24606.cljs$core$IFn$_invoke$arity$4 = G__24606__4;
G__24606.cljs$core$IFn$_invoke$arity$5 = G__24606__5;
G__24606.cljs$core$IFn$_invoke$arity$6 = G__24606__6;
G__24606.cljs$core$IFn$_invoke$arity$7 = G__24606__7;
G__24606.cljs$core$IFn$_invoke$arity$8 = G__24606__8;
G__24606.cljs$core$IFn$_invoke$arity$9 = G__24606__9;
G__24606.cljs$core$IFn$_invoke$arity$10 = G__24606__10;
G__24606.cljs$core$IFn$_invoke$arity$11 = G__24606__11;
G__24606.cljs$core$IFn$_invoke$arity$12 = G__24606__12;
G__24606.cljs$core$IFn$_invoke$arity$13 = G__24606__13;
G__24606.cljs$core$IFn$_invoke$arity$14 = G__24606__14;
G__24606.cljs$core$IFn$_invoke$arity$15 = G__24606__15;
G__24606.cljs$core$IFn$_invoke$arity$16 = G__24606__16;
G__24606.cljs$core$IFn$_invoke$arity$17 = G__24606__17;
G__24606.cljs$core$IFn$_invoke$arity$18 = G__24606__18;
G__24606.cljs$core$IFn$_invoke$arity$19 = G__24606__19;
G__24606.cljs$core$IFn$_invoke$arity$20 = G__24606__20;
G__24606.cljs$core$IFn$_invoke$arity$21 = G__24606__21;
G__24606.cljs$core$IFn$_invoke$arity$22 = G__24606__22;
return G__24606;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args24561){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24561)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__24584 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__24585 = a;
var G__24586 = b;
var G__24587 = c;
var G__24588 = d;
var G__24589 = e;
var G__24590 = f;
var G__24591 = g;
var G__24592 = h;
var G__24593 = i;
var G__24594 = j;
var G__24595 = k;
var G__24596 = l;
var G__24597 = m;
var G__24598 = n;
var G__24599 = o;
var G__24600 = p;
var G__24601 = q;
var G__24602 = r;
var G__24603 = s;
var G__24604 = t;
var G__24605 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__24584,G__24585,G__24586,G__24587,G__24588,G__24589,G__24590,G__24591,G__24592,G__24593,G__24594,G__24595,G__24596,G__24597,G__24598,G__24599,G__24600,G__24601,G__24602,G__24603,G__24604,G__24605) : cljs.core.apply.call(null,G__24584,G__24585,G__24586,G__24587,G__24588,G__24589,G__24590,G__24591,G__24592,G__24593,G__24594,G__24595,G__24596,G__24597,G__24598,G__24599,G__24600,G__24601,G__24602,G__24603,G__24604,G__24605));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__24608 = x;
if(G__24608){
var bit__18299__auto__ = null;
if(cljs.core.truth_((function (){var or__17618__auto__ = bit__18299__auto__;
if(cljs.core.truth_(or__17618__auto__)){
return or__17618__auto__;
} else {
return G__24608.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__24608.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__24608);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__24608);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__24610 = value;
if(G__24610){
var bit__18299__auto__ = (G__24610.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__18299__auto__) || (G__24610.cljs$core$ICloneable$)){
return true;
} else {
if((!G__24610.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__24610);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__24610);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__24612 = coll;
if(G__24612){
var bit__18292__auto__ = (G__24612.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__18292__auto__) || (G__24612.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__24614 = coll;
if(G__24614){
var bit__18292__auto__ = (G__24614.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__18292__auto__) || (G__24614.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__24616 = coll;
if(G__24616){
var bit__18292__auto__ = (G__24616.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__18292__auto__) || (G__24616.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__24618 = coll;
if(G__24618){
var bit__18292__auto__ = (G__24618.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__18292__auto__) || (G__24618.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__24623__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__24624 = y;
var G__24625 = cljs.core.first(more);
var G__24626 = cljs.core.next(more);
x = G__24624;
y = G__24625;
more = G__24626;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24623 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24627__i = 0, G__24627__a = new Array(arguments.length -  2);
while (G__24627__i < G__24627__a.length) {G__24627__a[G__24627__i] = arguments[G__24627__i + 2]; ++G__24627__i;}
  more = new cljs.core.IndexedSeq(G__24627__a,0);
} 
return G__24623__delegate.call(this,x,y,more);};
G__24623.cljs$lang$maxFixedArity = 2;
G__24623.cljs$lang$applyTo = (function (arglist__24628){
var x = cljs.core.first(arglist__24628);
arglist__24628 = cljs.core.next(arglist__24628);
var y = cljs.core.first(arglist__24628);
var more = cljs.core.rest(arglist__24628);
return G__24623__delegate(x,y,more);
});
G__24623.cljs$core$IFn$_invoke$arity$variadic = G__24623__delegate;
return G__24623;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__24629 = null;
if (arguments.length > 2) {
var G__24630__i = 0, G__24630__a = new Array(arguments.length -  2);
while (G__24630__i < G__24630__a.length) {G__24630__a[G__24630__i] = arguments[G__24630__i + 2]; ++G__24630__i;}
G__24629 = new cljs.core.IndexedSeq(G__24630__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24629);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__24631 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__24631) : cljs.core.es6_iterator_seq.call(null,G__24631));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__24632 = (n + (1));
var G__24633 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__24634 = cljs.core.next(coll__$1);
n = G__24632;
hash_code = G__24633;
coll__$1 = G__24634;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__24635 = (n + (1));
var G__24636 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__24637 = cljs.core.next(coll__$1);
n = G__24635;
hash_code = G__24636;
coll__$1 = G__24637;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__24638 = o;
return goog.getUid(G__24638);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__24640 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24640) : cljs.core.deref.call(null,G__24640));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__24647 = val;
var G__24648 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24647,G__24648) : f.call(null,G__24647,G__24648));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24653 = nval;
var G__24654 = (n + (1));
val = G__24653;
n = G__24654;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__24649 = val__$1;
var G__24650 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24649,G__24650) : f.call(null,G__24649,G__24650));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24655 = nval;
var G__24656 = (n + (1));
val__$1 = G__24655;
n = G__24656;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__24651 = val__$1;
var G__24652 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24651,G__24652) : f.call(null,G__24651,G__24652));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24657 = nval;
var G__24658 = (n + (1));
val__$1 = G__24657;
n = G__24658;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__24665 = val;
var G__24666 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24665,G__24666) : f.call(null,G__24665,G__24666));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24671 = nval;
var G__24672 = (n + (1));
val = G__24671;
n = G__24672;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__24667 = val__$1;
var G__24668 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24667,G__24668) : f.call(null,G__24667,G__24668));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24673 = nval;
var G__24674 = (n + (1));
val__$1 = G__24673;
n = G__24674;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__24669 = val__$1;
var G__24670 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24669,G__24670) : f.call(null,G__24669,G__24670));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24675 = nval;
var G__24676 = (n + (1));
val__$1 = G__24675;
n = G__24676;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__24678 = x;
if(G__24678){
var bit__18299__auto__ = (G__24678.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__18299__auto__) || (G__24678.cljs$core$ICounted$)){
return true;
} else {
if((!G__24678.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__24678);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__24678);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__24680 = x;
if(G__24680){
var bit__18299__auto__ = (G__24680.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__18299__auto__) || (G__24680.cljs$core$IIndexed$)){
return true;
} else {
if((!G__24680.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__24680);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__24680);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__24681 = coll__$1;
var G__24682 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__24681,G__24682) : cljs.core.equiv_sequential.call(null,G__24681,G__24682));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__24683 = o;
var G__24684 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__24683,G__24684) : cljs.core.cons.call(null,G__24683,G__24684));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18596__auto__ = this;
return cljs.core.es6_iterator(this__18596__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__24687 = coll__$1;
var G__24688 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__24687,G__24688) : cljs.core.equiv_sequential.call(null,G__24687,G__24688));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__24689 = cljs.core.List.EMPTY;
var G__24690 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__24689,G__24690) : cljs.core.with_meta.call(null,G__24689,G__24690));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__24691 = f;
var G__24692 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__24691,G__24692) : cljs.core.seq_reduce.call(null,G__24691,G__24692));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__24693 = f;
var G__24694 = start;
var G__24695 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__24693,G__24694,G__24695) : cljs.core.seq_reduce.call(null,G__24693,G__24694,G__24695));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__24696 = o;
var G__24697 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__24696,G__24697) : cljs.core.cons.call(null,G__24696,G__24697));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18596__auto__ = this;
return cljs.core.es6_iterator(this__18596__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__24698 = sn;
s = G__24698;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__24703__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__24704 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__24705 = cljs.core.first(xs);
var G__24706 = cljs.core.next(xs);
coll = G__24704;
x = G__24705;
xs = G__24706;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__24703 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__24707__i = 0, G__24707__a = new Array(arguments.length -  2);
while (G__24707__i < G__24707__a.length) {G__24707__a[G__24707__i] = arguments[G__24707__i + 2]; ++G__24707__i;}
  xs = new cljs.core.IndexedSeq(G__24707__a,0);
} 
return G__24703__delegate.call(this,coll,x,xs);};
G__24703.cljs$lang$maxFixedArity = 2;
G__24703.cljs$lang$applyTo = (function (arglist__24708){
var coll = cljs.core.first(arglist__24708);
arglist__24708 = cljs.core.next(arglist__24708);
var x = cljs.core.first(arglist__24708);
var xs = cljs.core.rest(arglist__24708);
return G__24703__delegate(coll,x,xs);
});
G__24703.cljs$core$IFn$_invoke$arity$variadic = G__24703__delegate;
return G__24703;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__24709 = null;
if (arguments.length > 2) {
var G__24710__i = 0, G__24710__a = new Array(arguments.length -  2);
while (G__24710__i < G__24710__a.length) {G__24710__a[G__24710__i] = arguments[G__24710__i + 2]; ++G__24710__i;}
G__24709 = new cljs.core.IndexedSeq(G__24710__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__24709);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__24711 = cljs.core.next(s);
var G__24712 = (acc + (1));
s = G__24711;
acc = G__24712;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__24714 = coll;
if(G__24714){
var bit__18292__auto__ = (G__24714.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__18292__auto__) || (G__24714.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__24715 = cljs.core.next(coll);
var G__24716 = (n - (1));
coll = G__24715;
n = G__24716;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__24717 = cljs.core.next(coll);
var G__24718 = (n - (1));
var G__24719 = not_found;
coll = G__24717;
n = G__24718;
not_found = G__24719;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__24724 = coll;
if(G__24724){
var bit__18292__auto__ = (G__24724.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__18292__auto__) || (G__24724.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__24725 = coll;
if(G__24725){
var bit__18299__auto__ = (G__24725.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__18299__auto__) || (G__24725.cljs$core$ISeq$)){
return true;
} else {
if((!G__24725.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24725);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24725);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__24726 = coll;
if(G__24726){
var bit__18292__auto__ = (G__24726.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__18292__auto__) || (G__24726.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__24727 = coll;
if(G__24727){
var bit__18299__auto__ = (G__24727.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__18299__auto__) || (G__24727.cljs$core$ISeq$)){
return true;
} else {
if((!G__24727.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24727);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24727);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__24728 = (n__$1 - (1));
var G__24729 = cljs.core.rest(xs);
n__$1 = G__24728;
xs = G__24729;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__24732 = o;
if(G__24732){
var bit__18292__auto__ = (G__24732.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__18292__auto__) || (G__24732.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__24733 = o;
if(G__24733){
var bit__18292__auto__ = (G__24733.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__18292__auto__) || (G__24733.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__24737__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__24738 = ret;
var G__24739 = cljs.core.first(kvs);
var G__24740 = cljs.core.second(kvs);
var G__24741 = cljs.core.nnext(kvs);
coll = G__24738;
k = G__24739;
v = G__24740;
kvs = G__24741;
continue;
} else {
return ret;
}
break;
}
};
var G__24737 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__24742__i = 0, G__24742__a = new Array(arguments.length -  3);
while (G__24742__i < G__24742__a.length) {G__24742__a[G__24742__i] = arguments[G__24742__i + 3]; ++G__24742__i;}
  kvs = new cljs.core.IndexedSeq(G__24742__a,0);
} 
return G__24737__delegate.call(this,coll,k,v,kvs);};
G__24737.cljs$lang$maxFixedArity = 3;
G__24737.cljs$lang$applyTo = (function (arglist__24743){
var coll = cljs.core.first(arglist__24743);
arglist__24743 = cljs.core.next(arglist__24743);
var k = cljs.core.first(arglist__24743);
arglist__24743 = cljs.core.next(arglist__24743);
var v = cljs.core.first(arglist__24743);
var kvs = cljs.core.rest(arglist__24743);
return G__24737__delegate(coll,k,v,kvs);
});
G__24737.cljs$core$IFn$_invoke$arity$variadic = G__24737__delegate;
return G__24737;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__24744 = null;
if (arguments.length > 3) {
var G__24745__i = 0, G__24745__a = new Array(arguments.length -  3);
while (G__24745__i < G__24745__a.length) {G__24745__a[G__24745__i] = arguments[G__24745__i + 3]; ++G__24745__i;}
G__24744 = new cljs.core.IndexedSeq(G__24745__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__24744);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__24748__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__24749 = ret;
var G__24750 = cljs.core.first(ks);
var G__24751 = cljs.core.next(ks);
coll = G__24749;
k = G__24750;
ks = G__24751;
continue;
} else {
return ret;
}
}
break;
}
};
var G__24748 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__24752__i = 0, G__24752__a = new Array(arguments.length -  2);
while (G__24752__i < G__24752__a.length) {G__24752__a[G__24752__i] = arguments[G__24752__i + 2]; ++G__24752__i;}
  ks = new cljs.core.IndexedSeq(G__24752__a,0);
} 
return G__24748__delegate.call(this,coll,k,ks);};
G__24748.cljs$lang$maxFixedArity = 2;
G__24748.cljs$lang$applyTo = (function (arglist__24753){
var coll = cljs.core.first(arglist__24753);
arglist__24753 = cljs.core.next(arglist__24753);
var k = cljs.core.first(arglist__24753);
var ks = cljs.core.rest(arglist__24753);
return G__24748__delegate(coll,k,ks);
});
G__24748.cljs$core$IFn$_invoke$arity$variadic = G__24748__delegate;
return G__24748;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__24754 = null;
if (arguments.length > 2) {
var G__24755__i = 0, G__24755__a = new Array(arguments.length -  2);
while (G__24755__i < G__24755__a.length) {G__24755__a[G__24755__i] = arguments[G__24755__i + 2]; ++G__24755__i;}
G__24754 = new cljs.core.IndexedSeq(G__24755__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__24754);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__17618__auto__ = (function (){var G__24760 = f;
return goog.isFunction(G__24760);
})();
if(cljs.core.truth_(or__17618__auto__)){
return or__17618__auto__;
} else {
var G__24761 = f;
if(G__24761){
var bit__18299__auto__ = null;
if(cljs.core.truth_((function (){var or__17618__auto____$1 = bit__18299__auto__;
if(cljs.core.truth_(or__17618__auto____$1)){
return or__17618__auto____$1;
} else {
return G__24761.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__24761.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__24761);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__24761);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__25227 = null;
var G__25227__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__25227__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24763 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__24763) : self__.afn.call(null,G__24763));
});
var G__25227__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24764 = a;
var G__24765 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__24764,G__24765) : self__.afn.call(null,G__24764,G__24765));
});
var G__25227__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24766 = a;
var G__24767 = b;
var G__24768 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__24766,G__24767,G__24768) : self__.afn.call(null,G__24766,G__24767,G__24768));
});
var G__25227__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24769 = a;
var G__24770 = b;
var G__24771 = c;
var G__24772 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__24769,G__24770,G__24771,G__24772) : self__.afn.call(null,G__24769,G__24770,G__24771,G__24772));
});
var G__25227__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24773 = a;
var G__24774 = b;
var G__24775 = c;
var G__24776 = d;
var G__24777 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__24773,G__24774,G__24775,G__24776,G__24777) : self__.afn.call(null,G__24773,G__24774,G__24775,G__24776,G__24777));
});
var G__25227__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24778 = a;
var G__24779 = b;
var G__24780 = c;
var G__24781 = d;
var G__24782 = e;
var G__24783 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__24778,G__24779,G__24780,G__24781,G__24782,G__24783) : self__.afn.call(null,G__24778,G__24779,G__24780,G__24781,G__24782,G__24783));
});
var G__25227__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24784 = a;
var G__24785 = b;
var G__24786 = c;
var G__24787 = d;
var G__24788 = e;
var G__24789 = f;
var G__24790 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__24784,G__24785,G__24786,G__24787,G__24788,G__24789,G__24790) : self__.afn.call(null,G__24784,G__24785,G__24786,G__24787,G__24788,G__24789,G__24790));
});
var G__25227__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24791 = a;
var G__24792 = b;
var G__24793 = c;
var G__24794 = d;
var G__24795 = e;
var G__24796 = f;
var G__24797 = g;
var G__24798 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__24791,G__24792,G__24793,G__24794,G__24795,G__24796,G__24797,G__24798) : self__.afn.call(null,G__24791,G__24792,G__24793,G__24794,G__24795,G__24796,G__24797,G__24798));
});
var G__25227__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24799 = a;
var G__24800 = b;
var G__24801 = c;
var G__24802 = d;
var G__24803 = e;
var G__24804 = f;
var G__24805 = g;
var G__24806 = h;
var G__24807 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__24799,G__24800,G__24801,G__24802,G__24803,G__24804,G__24805,G__24806,G__24807) : self__.afn.call(null,G__24799,G__24800,G__24801,G__24802,G__24803,G__24804,G__24805,G__24806,G__24807));
});
var G__25227__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24808 = a;
var G__24809 = b;
var G__24810 = c;
var G__24811 = d;
var G__24812 = e;
var G__24813 = f;
var G__24814 = g;
var G__24815 = h;
var G__24816 = i;
var G__24817 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__24808,G__24809,G__24810,G__24811,G__24812,G__24813,G__24814,G__24815,G__24816,G__24817) : self__.afn.call(null,G__24808,G__24809,G__24810,G__24811,G__24812,G__24813,G__24814,G__24815,G__24816,G__24817));
});
var G__25227__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24818 = a;
var G__24819 = b;
var G__24820 = c;
var G__24821 = d;
var G__24822 = e;
var G__24823 = f;
var G__24824 = g;
var G__24825 = h;
var G__24826 = i;
var G__24827 = j;
var G__24828 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__24818,G__24819,G__24820,G__24821,G__24822,G__24823,G__24824,G__24825,G__24826,G__24827,G__24828) : self__.afn.call(null,G__24818,G__24819,G__24820,G__24821,G__24822,G__24823,G__24824,G__24825,G__24826,G__24827,G__24828));
});
var G__25227__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24829 = a;
var G__24830 = b;
var G__24831 = c;
var G__24832 = d;
var G__24833 = e;
var G__24834 = f;
var G__24835 = g;
var G__24836 = h;
var G__24837 = i;
var G__24838 = j;
var G__24839 = k;
var G__24840 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__24829,G__24830,G__24831,G__24832,G__24833,G__24834,G__24835,G__24836,G__24837,G__24838,G__24839,G__24840) : self__.afn.call(null,G__24829,G__24830,G__24831,G__24832,G__24833,G__24834,G__24835,G__24836,G__24837,G__24838,G__24839,G__24840));
});
var G__25227__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24841 = a;
var G__24842 = b;
var G__24843 = c;
var G__24844 = d;
var G__24845 = e;
var G__24846 = f;
var G__24847 = g;
var G__24848 = h;
var G__24849 = i;
var G__24850 = j;
var G__24851 = k;
var G__24852 = l;
var G__24853 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__24841,G__24842,G__24843,G__24844,G__24845,G__24846,G__24847,G__24848,G__24849,G__24850,G__24851,G__24852,G__24853) : self__.afn.call(null,G__24841,G__24842,G__24843,G__24844,G__24845,G__24846,G__24847,G__24848,G__24849,G__24850,G__24851,G__24852,G__24853));
});
var G__25227__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24854 = a;
var G__24855 = b;
var G__24856 = c;
var G__24857 = d;
var G__24858 = e;
var G__24859 = f;
var G__24860 = g;
var G__24861 = h;
var G__24862 = i;
var G__24863 = j;
var G__24864 = k;
var G__24865 = l;
var G__24866 = m;
var G__24867 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__24854,G__24855,G__24856,G__24857,G__24858,G__24859,G__24860,G__24861,G__24862,G__24863,G__24864,G__24865,G__24866,G__24867) : self__.afn.call(null,G__24854,G__24855,G__24856,G__24857,G__24858,G__24859,G__24860,G__24861,G__24862,G__24863,G__24864,G__24865,G__24866,G__24867));
});
var G__25227__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24868 = a;
var G__24869 = b;
var G__24870 = c;
var G__24871 = d;
var G__24872 = e;
var G__24873 = f;
var G__24874 = g;
var G__24875 = h;
var G__24876 = i;
var G__24877 = j;
var G__24878 = k;
var G__24879 = l;
var G__24880 = m;
var G__24881 = n;
var G__24882 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__24868,G__24869,G__24870,G__24871,G__24872,G__24873,G__24874,G__24875,G__24876,G__24877,G__24878,G__24879,G__24880,G__24881,G__24882) : self__.afn.call(null,G__24868,G__24869,G__24870,G__24871,G__24872,G__24873,G__24874,G__24875,G__24876,G__24877,G__24878,G__24879,G__24880,G__24881,G__24882));
});
var G__25227__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24883 = a;
var G__24884 = b;
var G__24885 = c;
var G__24886 = d;
var G__24887 = e;
var G__24888 = f;
var G__24889 = g;
var G__24890 = h;
var G__24891 = i;
var G__24892 = j;
var G__24893 = k;
var G__24894 = l;
var G__24895 = m;
var G__24896 = n;
var G__24897 = o;
var G__24898 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__24883,G__24884,G__24885,G__24886,G__24887,G__24888,G__24889,G__24890,G__24891,G__24892,G__24893,G__24894,G__24895,G__24896,G__24897,G__24898) : self__.afn.call(null,G__24883,G__24884,G__24885,G__24886,G__24887,G__24888,G__24889,G__24890,G__24891,G__24892,G__24893,G__24894,G__24895,G__24896,G__24897,G__24898));
});
var G__25227__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24899 = a;
var G__24900 = b;
var G__24901 = c;
var G__24902 = d;
var G__24903 = e;
var G__24904 = f;
var G__24905 = g;
var G__24906 = h;
var G__24907 = i;
var G__24908 = j;
var G__24909 = k;
var G__24910 = l;
var G__24911 = m;
var G__24912 = n;
var G__24913 = o;
var G__24914 = p;
var G__24915 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__24899,G__24900,G__24901,G__24902,G__24903,G__24904,G__24905,G__24906,G__24907,G__24908,G__24909,G__24910,G__24911,G__24912,G__24913,G__24914,G__24915) : self__.afn.call(null,G__24899,G__24900,G__24901,G__24902,G__24903,G__24904,G__24905,G__24906,G__24907,G__24908,G__24909,G__24910,G__24911,G__24912,G__24913,G__24914,G__24915));
});
var G__25227__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24916 = a;
var G__24917 = b;
var G__24918 = c;
var G__24919 = d;
var G__24920 = e;
var G__24921 = f;
var G__24922 = g;
var G__24923 = h;
var G__24924 = i;
var G__24925 = j;
var G__24926 = k;
var G__24927 = l;
var G__24928 = m;
var G__24929 = n;
var G__24930 = o;
var G__24931 = p;
var G__24932 = q;
var G__24933 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__24916,G__24917,G__24918,G__24919,G__24920,G__24921,G__24922,G__24923,G__24924,G__24925,G__24926,G__24927,G__24928,G__24929,G__24930,G__24931,G__24932,G__24933) : self__.afn.call(null,G__24916,G__24917,G__24918,G__24919,G__24920,G__24921,G__24922,G__24923,G__24924,G__24925,G__24926,G__24927,G__24928,G__24929,G__24930,G__24931,G__24932,G__24933));
});
var G__25227__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24934 = a;
var G__24935 = b;
var G__24936 = c;
var G__24937 = d;
var G__24938 = e;
var G__24939 = f;
var G__24940 = g;
var G__24941 = h;
var G__24942 = i;
var G__24943 = j;
var G__24944 = k;
var G__24945 = l;
var G__24946 = m;
var G__24947 = n;
var G__24948 = o;
var G__24949 = p;
var G__24950 = q;
var G__24951 = r;
var G__24952 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__24934,G__24935,G__24936,G__24937,G__24938,G__24939,G__24940,G__24941,G__24942,G__24943,G__24944,G__24945,G__24946,G__24947,G__24948,G__24949,G__24950,G__24951,G__24952) : self__.afn.call(null,G__24934,G__24935,G__24936,G__24937,G__24938,G__24939,G__24940,G__24941,G__24942,G__24943,G__24944,G__24945,G__24946,G__24947,G__24948,G__24949,G__24950,G__24951,G__24952));
});
var G__25227__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24953 = a;
var G__24954 = b;
var G__24955 = c;
var G__24956 = d;
var G__24957 = e;
var G__24958 = f;
var G__24959 = g;
var G__24960 = h;
var G__24961 = i;
var G__24962 = j;
var G__24963 = k;
var G__24964 = l;
var G__24965 = m;
var G__24966 = n;
var G__24967 = o;
var G__24968 = p;
var G__24969 = q;
var G__24970 = r;
var G__24971 = s;
var G__24972 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__24953,G__24954,G__24955,G__24956,G__24957,G__24958,G__24959,G__24960,G__24961,G__24962,G__24963,G__24964,G__24965,G__24966,G__24967,G__24968,G__24969,G__24970,G__24971,G__24972) : self__.afn.call(null,G__24953,G__24954,G__24955,G__24956,G__24957,G__24958,G__24959,G__24960,G__24961,G__24962,G__24963,G__24964,G__24965,G__24966,G__24967,G__24968,G__24969,G__24970,G__24971,G__24972));
});
var G__25227__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__24973 = self__.afn;
var G__24974 = a;
var G__24975 = b;
var G__24976 = c;
var G__24977 = d;
var G__24978 = e;
var G__24979 = f;
var G__24980 = g;
var G__24981 = h;
var G__24982 = i;
var G__24983 = j;
var G__24984 = k;
var G__24985 = l;
var G__24986 = m;
var G__24987 = n;
var G__24988 = o;
var G__24989 = p;
var G__24990 = q;
var G__24991 = r;
var G__24992 = s;
var G__24993 = t;
var G__24994 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__24973,G__24974,G__24975,G__24976,G__24977,G__24978,G__24979,G__24980,G__24981,G__24982,G__24983,G__24984,G__24985,G__24986,G__24987,G__24988,G__24989,G__24990,G__24991,G__24992,G__24993,G__24994) : cljs.core.apply.call(null,G__24973,G__24974,G__24975,G__24976,G__24977,G__24978,G__24979,G__24980,G__24981,G__24982,G__24983,G__24984,G__24985,G__24986,G__24987,G__24988,G__24989,G__24990,G__24991,G__24992,G__24993,G__24994));
});
G__25227 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__25227__1.call(this,self__);
case 2:
return G__25227__2.call(this,self__,a);
case 3:
return G__25227__3.call(this,self__,a,b);
case 4:
return G__25227__4.call(this,self__,a,b,c);
case 5:
return G__25227__5.call(this,self__,a,b,c,d);
case 6:
return G__25227__6.call(this,self__,a,b,c,d,e);
case 7:
return G__25227__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__25227__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__25227__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__25227__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__25227__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__25227__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__25227__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__25227__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__25227__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__25227__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__25227__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__25227__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__25227__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__25227__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__25227__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__25227__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25227.cljs$core$IFn$_invoke$arity$1 = G__25227__1;
G__25227.cljs$core$IFn$_invoke$arity$2 = G__25227__2;
G__25227.cljs$core$IFn$_invoke$arity$3 = G__25227__3;
G__25227.cljs$core$IFn$_invoke$arity$4 = G__25227__4;
G__25227.cljs$core$IFn$_invoke$arity$5 = G__25227__5;
G__25227.cljs$core$IFn$_invoke$arity$6 = G__25227__6;
G__25227.cljs$core$IFn$_invoke$arity$7 = G__25227__7;
G__25227.cljs$core$IFn$_invoke$arity$8 = G__25227__8;
G__25227.cljs$core$IFn$_invoke$arity$9 = G__25227__9;
G__25227.cljs$core$IFn$_invoke$arity$10 = G__25227__10;
G__25227.cljs$core$IFn$_invoke$arity$11 = G__25227__11;
G__25227.cljs$core$IFn$_invoke$arity$12 = G__25227__12;
G__25227.cljs$core$IFn$_invoke$arity$13 = G__25227__13;
G__25227.cljs$core$IFn$_invoke$arity$14 = G__25227__14;
G__25227.cljs$core$IFn$_invoke$arity$15 = G__25227__15;
G__25227.cljs$core$IFn$_invoke$arity$16 = G__25227__16;
G__25227.cljs$core$IFn$_invoke$arity$17 = G__25227__17;
G__25227.cljs$core$IFn$_invoke$arity$18 = G__25227__18;
G__25227.cljs$core$IFn$_invoke$arity$19 = G__25227__19;
G__25227.cljs$core$IFn$_invoke$arity$20 = G__25227__20;
G__25227.cljs$core$IFn$_invoke$arity$21 = G__25227__21;
G__25227.cljs$core$IFn$_invoke$arity$22 = G__25227__22;
return G__25227;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args24762){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24762)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__24995 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__24995) : self__.afn.call(null,G__24995));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__24996 = a;
var G__24997 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__24996,G__24997) : self__.afn.call(null,G__24996,G__24997));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__24998 = a;
var G__24999 = b;
var G__25000 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__24998,G__24999,G__25000) : self__.afn.call(null,G__24998,G__24999,G__25000));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__25001 = a;
var G__25002 = b;
var G__25003 = c;
var G__25004 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__25001,G__25002,G__25003,G__25004) : self__.afn.call(null,G__25001,G__25002,G__25003,G__25004));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__25005 = a;
var G__25006 = b;
var G__25007 = c;
var G__25008 = d;
var G__25009 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__25005,G__25006,G__25007,G__25008,G__25009) : self__.afn.call(null,G__25005,G__25006,G__25007,G__25008,G__25009));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__25010 = a;
var G__25011 = b;
var G__25012 = c;
var G__25013 = d;
var G__25014 = e;
var G__25015 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__25010,G__25011,G__25012,G__25013,G__25014,G__25015) : self__.afn.call(null,G__25010,G__25011,G__25012,G__25013,G__25014,G__25015));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__25016 = a;
var G__25017 = b;
var G__25018 = c;
var G__25019 = d;
var G__25020 = e;
var G__25021 = f;
var G__25022 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__25016,G__25017,G__25018,G__25019,G__25020,G__25021,G__25022) : self__.afn.call(null,G__25016,G__25017,G__25018,G__25019,G__25020,G__25021,G__25022));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__25023 = a;
var G__25024 = b;
var G__25025 = c;
var G__25026 = d;
var G__25027 = e;
var G__25028 = f;
var G__25029 = g;
var G__25030 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__25023,G__25024,G__25025,G__25026,G__25027,G__25028,G__25029,G__25030) : self__.afn.call(null,G__25023,G__25024,G__25025,G__25026,G__25027,G__25028,G__25029,G__25030));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__25031 = a;
var G__25032 = b;
var G__25033 = c;
var G__25034 = d;
var G__25035 = e;
var G__25036 = f;
var G__25037 = g;
var G__25038 = h;
var G__25039 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__25031,G__25032,G__25033,G__25034,G__25035,G__25036,G__25037,G__25038,G__25039) : self__.afn.call(null,G__25031,G__25032,G__25033,G__25034,G__25035,G__25036,G__25037,G__25038,G__25039));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__25040 = a;
var G__25041 = b;
var G__25042 = c;
var G__25043 = d;
var G__25044 = e;
var G__25045 = f;
var G__25046 = g;
var G__25047 = h;
var G__25048 = i;
var G__25049 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__25040,G__25041,G__25042,G__25043,G__25044,G__25045,G__25046,G__25047,G__25048,G__25049) : self__.afn.call(null,G__25040,G__25041,G__25042,G__25043,G__25044,G__25045,G__25046,G__25047,G__25048,G__25049));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__25050 = a;
var G__25051 = b;
var G__25052 = c;
var G__25053 = d;
var G__25054 = e;
var G__25055 = f;
var G__25056 = g;
var G__25057 = h;
var G__25058 = i;
var G__25059 = j;
var G__25060 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__25050,G__25051,G__25052,G__25053,G__25054,G__25055,G__25056,G__25057,G__25058,G__25059,G__25060) : self__.afn.call(null,G__25050,G__25051,G__25052,G__25053,G__25054,G__25055,G__25056,G__25057,G__25058,G__25059,G__25060));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__25061 = a;
var G__25062 = b;
var G__25063 = c;
var G__25064 = d;
var G__25065 = e;
var G__25066 = f;
var G__25067 = g;
var G__25068 = h;
var G__25069 = i;
var G__25070 = j;
var G__25071 = k;
var G__25072 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__25061,G__25062,G__25063,G__25064,G__25065,G__25066,G__25067,G__25068,G__25069,G__25070,G__25071,G__25072) : self__.afn.call(null,G__25061,G__25062,G__25063,G__25064,G__25065,G__25066,G__25067,G__25068,G__25069,G__25070,G__25071,G__25072));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__25073 = a;
var G__25074 = b;
var G__25075 = c;
var G__25076 = d;
var G__25077 = e;
var G__25078 = f;
var G__25079 = g;
var G__25080 = h;
var G__25081 = i;
var G__25082 = j;
var G__25083 = k;
var G__25084 = l;
var G__25085 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__25073,G__25074,G__25075,G__25076,G__25077,G__25078,G__25079,G__25080,G__25081,G__25082,G__25083,G__25084,G__25085) : self__.afn.call(null,G__25073,G__25074,G__25075,G__25076,G__25077,G__25078,G__25079,G__25080,G__25081,G__25082,G__25083,G__25084,G__25085));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__25086 = a;
var G__25087 = b;
var G__25088 = c;
var G__25089 = d;
var G__25090 = e;
var G__25091 = f;
var G__25092 = g;
var G__25093 = h;
var G__25094 = i;
var G__25095 = j;
var G__25096 = k;
var G__25097 = l;
var G__25098 = m;
var G__25099 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__25086,G__25087,G__25088,G__25089,G__25090,G__25091,G__25092,G__25093,G__25094,G__25095,G__25096,G__25097,G__25098,G__25099) : self__.afn.call(null,G__25086,G__25087,G__25088,G__25089,G__25090,G__25091,G__25092,G__25093,G__25094,G__25095,G__25096,G__25097,G__25098,G__25099));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__25100 = a;
var G__25101 = b;
var G__25102 = c;
var G__25103 = d;
var G__25104 = e;
var G__25105 = f;
var G__25106 = g;
var G__25107 = h;
var G__25108 = i;
var G__25109 = j;
var G__25110 = k;
var G__25111 = l;
var G__25112 = m;
var G__25113 = n;
var G__25114 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__25100,G__25101,G__25102,G__25103,G__25104,G__25105,G__25106,G__25107,G__25108,G__25109,G__25110,G__25111,G__25112,G__25113,G__25114) : self__.afn.call(null,G__25100,G__25101,G__25102,G__25103,G__25104,G__25105,G__25106,G__25107,G__25108,G__25109,G__25110,G__25111,G__25112,G__25113,G__25114));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__25115 = a;
var G__25116 = b;
var G__25117 = c;
var G__25118 = d;
var G__25119 = e;
var G__25120 = f;
var G__25121 = g;
var G__25122 = h;
var G__25123 = i;
var G__25124 = j;
var G__25125 = k;
var G__25126 = l;
var G__25127 = m;
var G__25128 = n;
var G__25129 = o;
var G__25130 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__25115,G__25116,G__25117,G__25118,G__25119,G__25120,G__25121,G__25122,G__25123,G__25124,G__25125,G__25126,G__25127,G__25128,G__25129,G__25130) : self__.afn.call(null,G__25115,G__25116,G__25117,G__25118,G__25119,G__25120,G__25121,G__25122,G__25123,G__25124,G__25125,G__25126,G__25127,G__25128,G__25129,G__25130));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__25131 = a;
var G__25132 = b;
var G__25133 = c;
var G__25134 = d;
var G__25135 = e;
var G__25136 = f;
var G__25137 = g;
var G__25138 = h;
var G__25139 = i;
var G__25140 = j;
var G__25141 = k;
var G__25142 = l;
var G__25143 = m;
var G__25144 = n;
var G__25145 = o;
var G__25146 = p;
var G__25147 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__25131,G__25132,G__25133,G__25134,G__25135,G__25136,G__25137,G__25138,G__25139,G__25140,G__25141,G__25142,G__25143,G__25144,G__25145,G__25146,G__25147) : self__.afn.call(null,G__25131,G__25132,G__25133,G__25134,G__25135,G__25136,G__25137,G__25138,G__25139,G__25140,G__25141,G__25142,G__25143,G__25144,G__25145,G__25146,G__25147));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__25148 = a;
var G__25149 = b;
var G__25150 = c;
var G__25151 = d;
var G__25152 = e;
var G__25153 = f;
var G__25154 = g;
var G__25155 = h;
var G__25156 = i;
var G__25157 = j;
var G__25158 = k;
var G__25159 = l;
var G__25160 = m;
var G__25161 = n;
var G__25162 = o;
var G__25163 = p;
var G__25164 = q;
var G__25165 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__25148,G__25149,G__25150,G__25151,G__25152,G__25153,G__25154,G__25155,G__25156,G__25157,G__25158,G__25159,G__25160,G__25161,G__25162,G__25163,G__25164,G__25165) : self__.afn.call(null,G__25148,G__25149,G__25150,G__25151,G__25152,G__25153,G__25154,G__25155,G__25156,G__25157,G__25158,G__25159,G__25160,G__25161,G__25162,G__25163,G__25164,G__25165));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__25166 = a;
var G__25167 = b;
var G__25168 = c;
var G__25169 = d;
var G__25170 = e;
var G__25171 = f;
var G__25172 = g;
var G__25173 = h;
var G__25174 = i;
var G__25175 = j;
var G__25176 = k;
var G__25177 = l;
var G__25178 = m;
var G__25179 = n;
var G__25180 = o;
var G__25181 = p;
var G__25182 = q;
var G__25183 = r;
var G__25184 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__25166,G__25167,G__25168,G__25169,G__25170,G__25171,G__25172,G__25173,G__25174,G__25175,G__25176,G__25177,G__25178,G__25179,G__25180,G__25181,G__25182,G__25183,G__25184) : self__.afn.call(null,G__25166,G__25167,G__25168,G__25169,G__25170,G__25171,G__25172,G__25173,G__25174,G__25175,G__25176,G__25177,G__25178,G__25179,G__25180,G__25181,G__25182,G__25183,G__25184));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__25185 = a;
var G__25186 = b;
var G__25187 = c;
var G__25188 = d;
var G__25189 = e;
var G__25190 = f;
var G__25191 = g;
var G__25192 = h;
var G__25193 = i;
var G__25194 = j;
var G__25195 = k;
var G__25196 = l;
var G__25197 = m;
var G__25198 = n;
var G__25199 = o;
var G__25200 = p;
var G__25201 = q;
var G__25202 = r;
var G__25203 = s;
var G__25204 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__25185,G__25186,G__25187,G__25188,G__25189,G__25190,G__25191,G__25192,G__25193,G__25194,G__25195,G__25196,G__25197,G__25198,G__25199,G__25200,G__25201,G__25202,G__25203,G__25204) : self__.afn.call(null,G__25185,G__25186,G__25187,G__25188,G__25189,G__25190,G__25191,G__25192,G__25193,G__25194,G__25195,G__25196,G__25197,G__25198,G__25199,G__25200,G__25201,G__25202,G__25203,G__25204));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__25205 = self__.afn;
var G__25206 = a;
var G__25207 = b;
var G__25208 = c;
var G__25209 = d;
var G__25210 = e;
var G__25211 = f;
var G__25212 = g;
var G__25213 = h;
var G__25214 = i;
var G__25215 = j;
var G__25216 = k;
var G__25217 = l;
var G__25218 = m;
var G__25219 = n;
var G__25220 = o;
var G__25221 = p;
var G__25222 = q;
var G__25223 = r;
var G__25224 = s;
var G__25225 = t;
var G__25226 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__25205,G__25206,G__25207,G__25208,G__25209,G__25210,G__25211,G__25212,G__25213,G__25214,G__25215,G__25216,G__25217,G__25218,G__25219,G__25220,G__25221,G__25222,G__25223,G__25224,G__25225,G__25226) : cljs.core.apply.call(null,G__25205,G__25206,G__25207,G__25208,G__25209,G__25210,G__25211,G__25212,G__25213,G__25214,G__25215,G__25216,G__25217,G__25218,G__25219,G__25220,G__25221,G__25222,G__25223,G__25224,G__25225,G__25226));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__25231 = o;
if(G__25231){
var bit__18299__auto__ = (G__25231.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__18299__auto__) || (G__25231.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__25231.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__25231);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__25231);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__17606__auto__ = !((o == null));
if(and__17606__auto__){
var G__25235 = o;
if(G__25235){
var bit__18299__auto__ = (G__25235.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__18299__auto__) || (G__25235.cljs$core$IMeta$)){
return true;
} else {
if((!G__25235.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__25235);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__25235);
}
} else {
return and__17606__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__25238__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__25239 = ret;
var G__25240 = cljs.core.first(ks);
var G__25241 = cljs.core.next(ks);
coll = G__25239;
k = G__25240;
ks = G__25241;
continue;
} else {
return ret;
}
}
break;
}
};
var G__25238 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__25242__i = 0, G__25242__a = new Array(arguments.length -  2);
while (G__25242__i < G__25242__a.length) {G__25242__a[G__25242__i] = arguments[G__25242__i + 2]; ++G__25242__i;}
  ks = new cljs.core.IndexedSeq(G__25242__a,0);
} 
return G__25238__delegate.call(this,coll,k,ks);};
G__25238.cljs$lang$maxFixedArity = 2;
G__25238.cljs$lang$applyTo = (function (arglist__25243){
var coll = cljs.core.first(arglist__25243);
arglist__25243 = cljs.core.next(arglist__25243);
var k = cljs.core.first(arglist__25243);
var ks = cljs.core.rest(arglist__25243);
return G__25238__delegate(coll,k,ks);
});
G__25238.cljs$core$IFn$_invoke$arity$variadic = G__25238__delegate;
return G__25238;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__25244 = null;
if (arguments.length > 2) {
var G__25245__i = 0, G__25245__a = new Array(arguments.length -  2);
while (G__25245__i < G__25245__a.length) {G__25245__a[G__25245__i] = arguments[G__25245__i + 2]; ++G__25245__i;}
G__25244 = new cljs.core.IndexedSeq(G__25245__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__25244);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__25247 = x;
if(G__25247){
var bit__18299__auto__ = (G__25247.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__18299__auto__) || (G__25247.cljs$core$ICollection$)){
return true;
} else {
if((!G__25247.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__25247);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__25247);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__25249 = x;
if(G__25249){
var bit__18299__auto__ = (G__25249.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__18299__auto__) || (G__25249.cljs$core$ISet$)){
return true;
} else {
if((!G__25249.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__25249);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__25249);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__25251 = x;
if(G__25251){
var bit__18299__auto__ = (G__25251.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__18299__auto__) || (G__25251.cljs$core$IAssociative$)){
return true;
} else {
if((!G__25251.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__25251);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__25251);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__25253 = x;
if(G__25253){
var bit__18299__auto__ = (G__25253.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__18299__auto__) || (G__25253.cljs$core$ISequential$)){
return true;
} else {
if((!G__25253.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__25253);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__25253);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__25255 = x;
if(G__25255){
var bit__18299__auto__ = (G__25255.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__18299__auto__) || (G__25255.cljs$core$ISorted$)){
return true;
} else {
if((!G__25255.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__25255);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__25255);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__25257 = x;
if(G__25257){
var bit__18299__auto__ = (G__25257.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__18299__auto__) || (G__25257.cljs$core$IReduce$)){
return true;
} else {
if((!G__25257.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__25257);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__25257);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__25259 = x;
if(G__25259){
var bit__18299__auto__ = (G__25259.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__18299__auto__) || (G__25259.cljs$core$IMap$)){
return true;
} else {
if((!G__25259.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__25259);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__25259);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__25261 = x;
if(G__25261){
var bit__18299__auto__ = (G__25261.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__18299__auto__) || (G__25261.cljs$core$IVector$)){
return true;
} else {
if((!G__25261.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__25261);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__25261);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__25263 = x;
if(G__25263){
var bit__18292__auto__ = (G__25263.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__18292__auto__) || (G__25263.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj25269 = {};
return obj25269;
});
var js_obj__1 = (function() { 
var G__25272__delegate = function (keyvals){
var G__25270 = goog.object.create;
var G__25271 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__25270,G__25271) : cljs.core.apply.call(null,G__25270,G__25271));
};
var G__25272 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__25273__i = 0, G__25273__a = new Array(arguments.length -  0);
while (G__25273__i < G__25273__a.length) {G__25273__a[G__25273__i] = arguments[G__25273__i + 0]; ++G__25273__i;}
  keyvals = new cljs.core.IndexedSeq(G__25273__a,0);
} 
return G__25272__delegate.call(this,keyvals);};
G__25272.cljs$lang$maxFixedArity = 0;
G__25272.cljs$lang$applyTo = (function (arglist__25274){
var keyvals = cljs.core.seq(arglist__25274);
return G__25272__delegate(keyvals);
});
G__25272.cljs$core$IFn$_invoke$arity$variadic = G__25272__delegate;
return G__25272;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__25275 = null;
if (arguments.length > 0) {
var G__25276__i = 0, G__25276__a = new Array(arguments.length -  0);
while (G__25276__i < G__25276__a.length) {G__25276__a[G__25276__i] = arguments[G__25276__i + 0]; ++G__25276__i;}
G__25275 = new cljs.core.IndexedSeq(G__25276__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__25275);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__25279_25281 = obj;
var G__25280_25282 = ((function (G__25279_25281,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__25279_25281,keys))
;
goog.object.forEach(G__25279_25281,G__25280_25282);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__25283 = (i__$1 + (1));
var G__25284 = (j__$1 + (1));
var G__25285 = (len__$1 - (1));
i__$1 = G__25283;
j__$1 = G__25284;
len__$1 = G__25285;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__25286 = (i__$1 - (1));
var G__25287 = (j__$1 - (1));
var G__25288 = (len__$1 - (1));
i__$1 = G__25286;
j__$1 = G__25287;
len__$1 = G__25288;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj25290 = {};
return obj25290;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__25292 = s;
if(G__25292){
var bit__18299__auto__ = (G__25292.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__18299__auto__) || (G__25292.cljs$core$ISeq$)){
return true;
} else {
if((!G__25292.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__25292);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__25292);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__25294 = s;
if(G__25294){
var bit__18299__auto__ = (G__25294.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__18299__auto__) || (G__25294.cljs$core$ISeqable$)){
return true;
} else {
if((!G__25294.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__25294);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__25294);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__17618__auto__ = cljs.core.fn_QMARK_(f);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var G__25298 = f;
if(G__25298){
var bit__18299__auto__ = (G__25298.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__18299__auto__) || (G__25298.cljs$core$IFn$)){
return true;
} else {
if((!G__25298.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__25298);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__25298);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__25311 = n;
return isNaN(G__25311);
})())) && (!((n === Infinity))) && (((function (){var G__25312 = n;
return parseFloat(G__25312);
})() === (function (){var G__25313 = n;
var G__25314 = (10);
return parseInt(G__25313,G__25314);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__25315__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__25316 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__25317 = etc;
s = G__25316;
xs = G__25317;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__25315 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25318__i = 0, G__25318__a = new Array(arguments.length -  2);
while (G__25318__i < G__25318__a.length) {G__25318__a[G__25318__i] = arguments[G__25318__i + 2]; ++G__25318__i;}
  more = new cljs.core.IndexedSeq(G__25318__a,0);
} 
return G__25315__delegate.call(this,x,y,more);};
G__25315.cljs$lang$maxFixedArity = 2;
G__25315.cljs$lang$applyTo = (function (arglist__25319){
var x = cljs.core.first(arglist__25319);
arglist__25319 = cljs.core.next(arglist__25319);
var y = cljs.core.first(arglist__25319);
var more = cljs.core.rest(arglist__25319);
return G__25315__delegate(x,y,more);
});
G__25315.cljs$core$IFn$_invoke$arity$variadic = G__25315__delegate;
return G__25315;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__25320 = null;
if (arguments.length > 2) {
var G__25321__i = 0, G__25321__a = new Array(arguments.length -  2);
while (G__25321__i < G__25321__a.length) {G__25321__a[G__25321__i] = arguments[G__25321__i + 2]; ++G__25321__i;}
G__25320 = new cljs.core.IndexedSeq(G__25321__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25320);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__25325 = x;
if(G__25325){
var bit__18292__auto__ = (G__25325.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__18292__auto__) || (G__25325.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__25326 = x;
var G__25327 = y;
return goog.array.defaultCompare(G__25326,G__25327);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__25332 = xs;
var G__25333 = ys;
var G__25334 = len;
var G__25335 = (n + (1));
xs = G__25332;
ys = G__25333;
len = G__25334;
n = G__25335;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__25340 = x;
var G__25341 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25340,G__25341) : f.call(null,G__25340,G__25341));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__25342 = y;
var G__25343 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25342,G__25343) : f.call(null,G__25342,G__25343));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__25349 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__25349) : cljs.core.to_array.call(null,G__25349));
})();
var G__25350_25352 = a;
var G__25351_25353 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__25350_25352,G__25351_25353);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__25359 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__25359) : keyfn.call(null,G__25359));
})(),(function (){var G__25360 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__25360) : keyfn.call(null,G__25360));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__25366 = f;
var G__25367 = cljs.core.first(s);
var G__25368 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__25366,G__25367,G__25368) : cljs.core.reduce.call(null,G__25366,G__25367,G__25368));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__25369 = val__$1;
var G__25370 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25369,G__25370) : f.call(null,G__25369,G__25370));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__25371 = nval;
var G__25372 = cljs.core.next(coll__$1);
val__$1 = G__25371;
coll__$1 = G__25372;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__25376 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__25376) : cljs.core.to_array.call(null,G__25376));
})();
var G__25377_25379 = a;
goog.array.shuffle(G__25377_25379);

var G__25378 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__25378) : cljs.core.vec.call(null,G__25378));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__25382 = coll;
if(G__25382){
var bit__18292__auto__ = (G__25382.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__18292__auto__) || (G__25382.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__25383 = coll;
if(G__25383){
var bit__18292__auto__ = (G__25383.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__18292__auto__) || (G__25383.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__25392 = null;
var G__25392__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__25392__1 = (function (x){
var G__25389 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__25389) : cf.call(null,G__25389));
});
var G__25392__2 = (function (x,y){
var G__25390 = x;
var G__25391 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25390,G__25391) : f.call(null,G__25390,G__25391));
});
G__25392 = function(x,y){
switch(arguments.length){
case 0:
return G__25392__0.call(this);
case 1:
return G__25392__1.call(this,x);
case 2:
return G__25392__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25392.cljs$core$IFn$_invoke$arity$0 = G__25392__0;
G__25392.cljs$core$IFn$_invoke$arity$1 = G__25392__1;
G__25392.cljs$core$IFn$_invoke$arity$2 = G__25392__2;
return G__25392;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__25399 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__25399) : xform.call(null,G__25399));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__25400 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__25400) : f__$1.call(null,G__25400));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__25401__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__25401 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25402__i = 0, G__25402__a = new Array(arguments.length -  2);
while (G__25402__i < G__25402__a.length) {G__25402__a[G__25402__i] = arguments[G__25402__i + 2]; ++G__25402__i;}
  more = new cljs.core.IndexedSeq(G__25402__a,0);
} 
return G__25401__delegate.call(this,x,y,more);};
G__25401.cljs$lang$maxFixedArity = 2;
G__25401.cljs$lang$applyTo = (function (arglist__25403){
var x = cljs.core.first(arglist__25403);
arglist__25403 = cljs.core.next(arglist__25403);
var y = cljs.core.first(arglist__25403);
var more = cljs.core.rest(arglist__25403);
return G__25401__delegate(x,y,more);
});
G__25401.cljs$core$IFn$_invoke$arity$variadic = G__25401__delegate;
return G__25401;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__25404 = null;
if (arguments.length > 2) {
var G__25405__i = 0, G__25405__a = new Array(arguments.length -  2);
while (G__25405__i < G__25405__a.length) {G__25405__a[G__25405__i] = arguments[G__25405__i + 2]; ++G__25405__i;}
G__25404 = new cljs.core.IndexedSeq(G__25405__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25404);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__25406__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__25406 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25407__i = 0, G__25407__a = new Array(arguments.length -  2);
while (G__25407__i < G__25407__a.length) {G__25407__a[G__25407__i] = arguments[G__25407__i + 2]; ++G__25407__i;}
  more = new cljs.core.IndexedSeq(G__25407__a,0);
} 
return G__25406__delegate.call(this,x,y,more);};
G__25406.cljs$lang$maxFixedArity = 2;
G__25406.cljs$lang$applyTo = (function (arglist__25408){
var x = cljs.core.first(arglist__25408);
arglist__25408 = cljs.core.next(arglist__25408);
var y = cljs.core.first(arglist__25408);
var more = cljs.core.rest(arglist__25408);
return G__25406__delegate(x,y,more);
});
G__25406.cljs$core$IFn$_invoke$arity$variadic = G__25406__delegate;
return G__25406;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__25409 = null;
if (arguments.length > 2) {
var G__25410__i = 0, G__25410__a = new Array(arguments.length -  2);
while (G__25410__i < G__25410__a.length) {G__25410__a[G__25410__i] = arguments[G__25410__i + 2]; ++G__25410__i;}
G__25409 = new cljs.core.IndexedSeq(G__25410__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25409);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__25411__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__25411 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25412__i = 0, G__25412__a = new Array(arguments.length -  2);
while (G__25412__i < G__25412__a.length) {G__25412__a[G__25412__i] = arguments[G__25412__i + 2]; ++G__25412__i;}
  more = new cljs.core.IndexedSeq(G__25412__a,0);
} 
return G__25411__delegate.call(this,x,y,more);};
G__25411.cljs$lang$maxFixedArity = 2;
G__25411.cljs$lang$applyTo = (function (arglist__25413){
var x = cljs.core.first(arglist__25413);
arglist__25413 = cljs.core.next(arglist__25413);
var y = cljs.core.first(arglist__25413);
var more = cljs.core.rest(arglist__25413);
return G__25411__delegate(x,y,more);
});
G__25411.cljs$core$IFn$_invoke$arity$variadic = G__25411__delegate;
return G__25411;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__25414 = null;
if (arguments.length > 2) {
var G__25415__i = 0, G__25415__a = new Array(arguments.length -  2);
while (G__25415__i < G__25415__a.length) {G__25415__a[G__25415__i] = arguments[G__25415__i + 2]; ++G__25415__i;}
G__25414 = new cljs.core.IndexedSeq(G__25415__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25414);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__25420__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__25420 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25421__i = 0, G__25421__a = new Array(arguments.length -  2);
while (G__25421__i < G__25421__a.length) {G__25421__a[G__25421__i] = arguments[G__25421__i + 2]; ++G__25421__i;}
  more = new cljs.core.IndexedSeq(G__25421__a,0);
} 
return G__25420__delegate.call(this,x,y,more);};
G__25420.cljs$lang$maxFixedArity = 2;
G__25420.cljs$lang$applyTo = (function (arglist__25422){
var x = cljs.core.first(arglist__25422);
arglist__25422 = cljs.core.next(arglist__25422);
var y = cljs.core.first(arglist__25422);
var more = cljs.core.rest(arglist__25422);
return G__25420__delegate(x,y,more);
});
G__25420.cljs$core$IFn$_invoke$arity$variadic = G__25420__delegate;
return G__25420;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__25423 = null;
if (arguments.length > 2) {
var G__25424__i = 0, G__25424__a = new Array(arguments.length -  2);
while (G__25424__i < G__25424__a.length) {G__25424__a[G__25424__i] = arguments[G__25424__i + 2]; ++G__25424__i;}
G__25423 = new cljs.core.IndexedSeq(G__25424__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25423);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__25425__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__25426 = y;
var G__25427 = cljs.core.first(more);
var G__25428 = cljs.core.next(more);
x = G__25426;
y = G__25427;
more = G__25428;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__25425 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25429__i = 0, G__25429__a = new Array(arguments.length -  2);
while (G__25429__i < G__25429__a.length) {G__25429__a[G__25429__i] = arguments[G__25429__i + 2]; ++G__25429__i;}
  more = new cljs.core.IndexedSeq(G__25429__a,0);
} 
return G__25425__delegate.call(this,x,y,more);};
G__25425.cljs$lang$maxFixedArity = 2;
G__25425.cljs$lang$applyTo = (function (arglist__25430){
var x = cljs.core.first(arglist__25430);
arglist__25430 = cljs.core.next(arglist__25430);
var y = cljs.core.first(arglist__25430);
var more = cljs.core.rest(arglist__25430);
return G__25425__delegate(x,y,more);
});
G__25425.cljs$core$IFn$_invoke$arity$variadic = G__25425__delegate;
return G__25425;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__25431 = null;
if (arguments.length > 2) {
var G__25432__i = 0, G__25432__a = new Array(arguments.length -  2);
while (G__25432__i < G__25432__a.length) {G__25432__a[G__25432__i] = arguments[G__25432__i + 2]; ++G__25432__i;}
G__25431 = new cljs.core.IndexedSeq(G__25432__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25431);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__25433__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__25434 = y;
var G__25435 = cljs.core.first(more);
var G__25436 = cljs.core.next(more);
x = G__25434;
y = G__25435;
more = G__25436;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__25433 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25437__i = 0, G__25437__a = new Array(arguments.length -  2);
while (G__25437__i < G__25437__a.length) {G__25437__a[G__25437__i] = arguments[G__25437__i + 2]; ++G__25437__i;}
  more = new cljs.core.IndexedSeq(G__25437__a,0);
} 
return G__25433__delegate.call(this,x,y,more);};
G__25433.cljs$lang$maxFixedArity = 2;
G__25433.cljs$lang$applyTo = (function (arglist__25438){
var x = cljs.core.first(arglist__25438);
arglist__25438 = cljs.core.next(arglist__25438);
var y = cljs.core.first(arglist__25438);
var more = cljs.core.rest(arglist__25438);
return G__25433__delegate(x,y,more);
});
G__25433.cljs$core$IFn$_invoke$arity$variadic = G__25433__delegate;
return G__25433;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__25439 = null;
if (arguments.length > 2) {
var G__25440__i = 0, G__25440__a = new Array(arguments.length -  2);
while (G__25440__i < G__25440__a.length) {G__25440__a[G__25440__i] = arguments[G__25440__i + 2]; ++G__25440__i;}
G__25439 = new cljs.core.IndexedSeq(G__25440__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25439);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__25441__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__25442 = y;
var G__25443 = cljs.core.first(more);
var G__25444 = cljs.core.next(more);
x = G__25442;
y = G__25443;
more = G__25444;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__25441 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25445__i = 0, G__25445__a = new Array(arguments.length -  2);
while (G__25445__i < G__25445__a.length) {G__25445__a[G__25445__i] = arguments[G__25445__i + 2]; ++G__25445__i;}
  more = new cljs.core.IndexedSeq(G__25445__a,0);
} 
return G__25441__delegate.call(this,x,y,more);};
G__25441.cljs$lang$maxFixedArity = 2;
G__25441.cljs$lang$applyTo = (function (arglist__25446){
var x = cljs.core.first(arglist__25446);
arglist__25446 = cljs.core.next(arglist__25446);
var y = cljs.core.first(arglist__25446);
var more = cljs.core.rest(arglist__25446);
return G__25441__delegate(x,y,more);
});
G__25441.cljs$core$IFn$_invoke$arity$variadic = G__25441__delegate;
return G__25441;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__25447 = null;
if (arguments.length > 2) {
var G__25448__i = 0, G__25448__a = new Array(arguments.length -  2);
while (G__25448__i < G__25448__a.length) {G__25448__a[G__25448__i] = arguments[G__25448__i + 2]; ++G__25448__i;}
G__25447 = new cljs.core.IndexedSeq(G__25448__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25447);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__25449__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__25450 = y;
var G__25451 = cljs.core.first(more);
var G__25452 = cljs.core.next(more);
x = G__25450;
y = G__25451;
more = G__25452;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__25449 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25453__i = 0, G__25453__a = new Array(arguments.length -  2);
while (G__25453__i < G__25453__a.length) {G__25453__a[G__25453__i] = arguments[G__25453__i + 2]; ++G__25453__i;}
  more = new cljs.core.IndexedSeq(G__25453__a,0);
} 
return G__25449__delegate.call(this,x,y,more);};
G__25449.cljs$lang$maxFixedArity = 2;
G__25449.cljs$lang$applyTo = (function (arglist__25454){
var x = cljs.core.first(arglist__25454);
arglist__25454 = cljs.core.next(arglist__25454);
var y = cljs.core.first(arglist__25454);
var more = cljs.core.rest(arglist__25454);
return G__25449__delegate(x,y,more);
});
G__25449.cljs$core$IFn$_invoke$arity$variadic = G__25449__delegate;
return G__25449;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__25455 = null;
if (arguments.length > 2) {
var G__25456__i = 0, G__25456__a = new Array(arguments.length -  2);
while (G__25456__i < G__25456__a.length) {G__25456__a[G__25456__i] = arguments[G__25456__i + 2]; ++G__25456__i;}
G__25455 = new cljs.core.IndexedSeq(G__25456__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25455);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__17935__auto__ = x;
var y__17936__auto__ = y;
return ((x__17935__auto__ > y__17936__auto__) ? x__17935__auto__ : y__17936__auto__);
});
var max__3 = (function() { 
var G__25457__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__17935__auto__ = x;
var y__17936__auto__ = y;
return ((x__17935__auto__ > y__17936__auto__) ? x__17935__auto__ : y__17936__auto__);
})(),more);
};
var G__25457 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25458__i = 0, G__25458__a = new Array(arguments.length -  2);
while (G__25458__i < G__25458__a.length) {G__25458__a[G__25458__i] = arguments[G__25458__i + 2]; ++G__25458__i;}
  more = new cljs.core.IndexedSeq(G__25458__a,0);
} 
return G__25457__delegate.call(this,x,y,more);};
G__25457.cljs$lang$maxFixedArity = 2;
G__25457.cljs$lang$applyTo = (function (arglist__25459){
var x = cljs.core.first(arglist__25459);
arglist__25459 = cljs.core.next(arglist__25459);
var y = cljs.core.first(arglist__25459);
var more = cljs.core.rest(arglist__25459);
return G__25457__delegate(x,y,more);
});
G__25457.cljs$core$IFn$_invoke$arity$variadic = G__25457__delegate;
return G__25457;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__25460 = null;
if (arguments.length > 2) {
var G__25461__i = 0, G__25461__a = new Array(arguments.length -  2);
while (G__25461__i < G__25461__a.length) {G__25461__a[G__25461__i] = arguments[G__25461__i + 2]; ++G__25461__i;}
G__25460 = new cljs.core.IndexedSeq(G__25461__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25460);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__17942__auto__ = x;
var y__17943__auto__ = y;
return ((x__17942__auto__ < y__17943__auto__) ? x__17942__auto__ : y__17943__auto__);
});
var min__3 = (function() { 
var G__25462__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__17942__auto__ = x;
var y__17943__auto__ = y;
return ((x__17942__auto__ < y__17943__auto__) ? x__17942__auto__ : y__17943__auto__);
})(),more);
};
var G__25462 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25463__i = 0, G__25463__a = new Array(arguments.length -  2);
while (G__25463__i < G__25463__a.length) {G__25463__a[G__25463__i] = arguments[G__25463__i + 2]; ++G__25463__i;}
  more = new cljs.core.IndexedSeq(G__25463__a,0);
} 
return G__25462__delegate.call(this,x,y,more);};
G__25462.cljs$lang$maxFixedArity = 2;
G__25462.cljs$lang$applyTo = (function (arglist__25464){
var x = cljs.core.first(arglist__25464);
arglist__25464 = cljs.core.next(arglist__25464);
var y = cljs.core.first(arglist__25464);
var more = cljs.core.rest(arglist__25464);
return G__25462__delegate(x,y,more);
});
G__25462.cljs$core$IFn$_invoke$arity$variadic = G__25462__delegate;
return G__25462;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__25465 = null;
if (arguments.length > 2) {
var G__25466__i = 0, G__25466__a = new Array(arguments.length -  2);
while (G__25466__i < G__25466__a.length) {G__25466__a[G__25466__i] = arguments[G__25466__i + 2]; ++G__25466__i;}
G__25465 = new cljs.core.IndexedSeq(G__25466__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25465);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__25467__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__25467 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25468__i = 0, G__25468__a = new Array(arguments.length -  2);
while (G__25468__i < G__25468__a.length) {G__25468__a[G__25468__i] = arguments[G__25468__i + 2]; ++G__25468__i;}
  more = new cljs.core.IndexedSeq(G__25468__a,0);
} 
return G__25467__delegate.call(this,x,y,more);};
G__25467.cljs$lang$maxFixedArity = 2;
G__25467.cljs$lang$applyTo = (function (arglist__25469){
var x = cljs.core.first(arglist__25469);
arglist__25469 = cljs.core.next(arglist__25469);
var y = cljs.core.first(arglist__25469);
var more = cljs.core.rest(arglist__25469);
return G__25467__delegate(x,y,more);
});
G__25467.cljs$core$IFn$_invoke$arity$variadic = G__25467__delegate;
return G__25467;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__25470 = null;
if (arguments.length > 2) {
var G__25471__i = 0, G__25471__a = new Array(arguments.length -  2);
while (G__25471__i < G__25471__a.length) {G__25471__a[G__25471__i] = arguments[G__25471__i + 2]; ++G__25471__i;}
G__25470 = new cljs.core.IndexedSeq(G__25471__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25470);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__25472__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__25472 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25473__i = 0, G__25473__a = new Array(arguments.length -  2);
while (G__25473__i < G__25473__a.length) {G__25473__a[G__25473__i] = arguments[G__25473__i + 2]; ++G__25473__i;}
  more = new cljs.core.IndexedSeq(G__25473__a,0);
} 
return G__25472__delegate.call(this,x,y,more);};
G__25472.cljs$lang$maxFixedArity = 2;
G__25472.cljs$lang$applyTo = (function (arglist__25474){
var x = cljs.core.first(arglist__25474);
arglist__25474 = cljs.core.next(arglist__25474);
var y = cljs.core.first(arglist__25474);
var more = cljs.core.rest(arglist__25474);
return G__25472__delegate(x,y,more);
});
G__25472.cljs$core$IFn$_invoke$arity$variadic = G__25472__delegate;
return G__25472;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__25475 = null;
if (arguments.length > 2) {
var G__25476__i = 0, G__25476__a = new Array(arguments.length -  2);
while (G__25476__i < G__25476__a.length) {G__25476__a[G__25476__i] = arguments[G__25476__i + 2]; ++G__25476__i;}
G__25475 = new cljs.core.IndexedSeq(G__25476__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25475);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__25481__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__25481 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25482__i = 0, G__25482__a = new Array(arguments.length -  2);
while (G__25482__i < G__25482__a.length) {G__25482__a[G__25482__i] = arguments[G__25482__i + 2]; ++G__25482__i;}
  more = new cljs.core.IndexedSeq(G__25482__a,0);
} 
return G__25481__delegate.call(this,x,y,more);};
G__25481.cljs$lang$maxFixedArity = 2;
G__25481.cljs$lang$applyTo = (function (arglist__25483){
var x = cljs.core.first(arglist__25483);
arglist__25483 = cljs.core.next(arglist__25483);
var y = cljs.core.first(arglist__25483);
var more = cljs.core.rest(arglist__25483);
return G__25481__delegate(x,y,more);
});
G__25481.cljs$core$IFn$_invoke$arity$variadic = G__25481__delegate;
return G__25481;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__25484 = null;
if (arguments.length > 2) {
var G__25485__i = 0, G__25485__a = new Array(arguments.length -  2);
while (G__25485__i < G__25485__a.length) {G__25485__a[G__25485__i] = arguments[G__25485__i + 2]; ++G__25485__i;}
G__25484 = new cljs.core.IndexedSeq(G__25485__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25484);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__25486__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__25486 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25487__i = 0, G__25487__a = new Array(arguments.length -  2);
while (G__25487__i < G__25487__a.length) {G__25487__a[G__25487__i] = arguments[G__25487__i + 2]; ++G__25487__i;}
  more = new cljs.core.IndexedSeq(G__25487__a,0);
} 
return G__25486__delegate.call(this,x,y,more);};
G__25486.cljs$lang$maxFixedArity = 2;
G__25486.cljs$lang$applyTo = (function (arglist__25488){
var x = cljs.core.first(arglist__25488);
arglist__25488 = cljs.core.next(arglist__25488);
var y = cljs.core.first(arglist__25488);
var more = cljs.core.rest(arglist__25488);
return G__25486__delegate(x,y,more);
});
G__25486.cljs$core$IFn$_invoke$arity$variadic = G__25486__delegate;
return G__25486;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__25489 = null;
if (arguments.length > 2) {
var G__25490__i = 0, G__25490__a = new Array(arguments.length -  2);
while (G__25490__i < G__25490__a.length) {G__25490__a[G__25490__i] = arguments[G__25490__i + 2]; ++G__25490__i;}
G__25489 = new cljs.core.IndexedSeq(G__25490__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25489);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__25491__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__25491 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25492__i = 0, G__25492__a = new Array(arguments.length -  2);
while (G__25492__i < G__25492__a.length) {G__25492__a[G__25492__i] = arguments[G__25492__i + 2]; ++G__25492__i;}
  more = new cljs.core.IndexedSeq(G__25492__a,0);
} 
return G__25491__delegate.call(this,x,y,more);};
G__25491.cljs$lang$maxFixedArity = 2;
G__25491.cljs$lang$applyTo = (function (arglist__25493){
var x = cljs.core.first(arglist__25493);
arglist__25493 = cljs.core.next(arglist__25493);
var y = cljs.core.first(arglist__25493);
var more = cljs.core.rest(arglist__25493);
return G__25491__delegate(x,y,more);
});
G__25491.cljs$core$IFn$_invoke$arity$variadic = G__25491__delegate;
return G__25491;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__25494 = null;
if (arguments.length > 2) {
var G__25495__i = 0, G__25495__a = new Array(arguments.length -  2);
while (G__25495__i < G__25495__a.length) {G__25495__a[G__25495__i] = arguments[G__25495__i + 2]; ++G__25495__i;}
G__25494 = new cljs.core.IndexedSeq(G__25495__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25494);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__25498 = x;
var G__25499 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__25498,G__25499) : cljs.core.mod.call(null,G__25498,G__25499));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__25500__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__25500 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25501__i = 0, G__25501__a = new Array(arguments.length -  2);
while (G__25501__i < G__25501__a.length) {G__25501__a[G__25501__i] = arguments[G__25501__i + 2]; ++G__25501__i;}
  more = new cljs.core.IndexedSeq(G__25501__a,0);
} 
return G__25500__delegate.call(this,x,y,more);};
G__25500.cljs$lang$maxFixedArity = 2;
G__25500.cljs$lang$applyTo = (function (arglist__25502){
var x = cljs.core.first(arglist__25502);
arglist__25502 = cljs.core.next(arglist__25502);
var y = cljs.core.first(arglist__25502);
var more = cljs.core.rest(arglist__25502);
return G__25500__delegate(x,y,more);
});
G__25500.cljs$core$IFn$_invoke$arity$variadic = G__25500__delegate;
return G__25500;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__25503 = null;
if (arguments.length > 2) {
var G__25504__i = 0, G__25504__a = new Array(arguments.length -  2);
while (G__25504__i < G__25504__a.length) {G__25504__a[G__25504__i] = arguments[G__25504__i + 2]; ++G__25504__i;}
G__25503 = new cljs.core.IndexedSeq(G__25504__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25503);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__25505__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__25505 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25506__i = 0, G__25506__a = new Array(arguments.length -  2);
while (G__25506__i < G__25506__a.length) {G__25506__a[G__25506__i] = arguments[G__25506__i + 2]; ++G__25506__i;}
  more = new cljs.core.IndexedSeq(G__25506__a,0);
} 
return G__25505__delegate.call(this,x,y,more);};
G__25505.cljs$lang$maxFixedArity = 2;
G__25505.cljs$lang$applyTo = (function (arglist__25507){
var x = cljs.core.first(arglist__25507);
arglist__25507 = cljs.core.next(arglist__25507);
var y = cljs.core.first(arglist__25507);
var more = cljs.core.rest(arglist__25507);
return G__25505__delegate(x,y,more);
});
G__25505.cljs$core$IFn$_invoke$arity$variadic = G__25505__delegate;
return G__25505;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__25508 = null;
if (arguments.length > 2) {
var G__25509__i = 0, G__25509__a = new Array(arguments.length -  2);
while (G__25509__i < G__25509__a.length) {G__25509__a[G__25509__i] = arguments[G__25509__i + 2]; ++G__25509__i;}
G__25508 = new cljs.core.IndexedSeq(G__25509__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25508);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__25512 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__25512) : Math.floor.call(null,G__25512));
} else {
var G__25513 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__25513) : Math.ceil.call(null,G__25513));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__25514__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__25514 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25515__i = 0, G__25515__a = new Array(arguments.length -  2);
while (G__25515__i < G__25515__a.length) {G__25515__a[G__25515__i] = arguments[G__25515__i + 2]; ++G__25515__i;}
  more = new cljs.core.IndexedSeq(G__25515__a,0);
} 
return G__25514__delegate.call(this,x,y,more);};
G__25514.cljs$lang$maxFixedArity = 2;
G__25514.cljs$lang$applyTo = (function (arglist__25516){
var x = cljs.core.first(arglist__25516);
arglist__25516 = cljs.core.next(arglist__25516);
var y = cljs.core.first(arglist__25516);
var more = cljs.core.rest(arglist__25516);
return G__25514__delegate(x,y,more);
});
G__25514.cljs$core$IFn$_invoke$arity$variadic = G__25514__delegate;
return G__25514;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__25517 = null;
if (arguments.length > 2) {
var G__25518__i = 0, G__25518__a = new Array(arguments.length -  2);
while (G__25518__i < G__25518__a.length) {G__25518__a[G__25518__i] = arguments[G__25518__i + 2]; ++G__25518__i;}
G__25517 = new cljs.core.IndexedSeq(G__25518__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25517);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__25519__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__25519 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25520__i = 0, G__25520__a = new Array(arguments.length -  2);
while (G__25520__i < G__25520__a.length) {G__25520__a[G__25520__i] = arguments[G__25520__i + 2]; ++G__25520__i;}
  more = new cljs.core.IndexedSeq(G__25520__a,0);
} 
return G__25519__delegate.call(this,x,y,more);};
G__25519.cljs$lang$maxFixedArity = 2;
G__25519.cljs$lang$applyTo = (function (arglist__25521){
var x = cljs.core.first(arglist__25521);
arglist__25521 = cljs.core.next(arglist__25521);
var y = cljs.core.first(arglist__25521);
var more = cljs.core.rest(arglist__25521);
return G__25519__delegate(x,y,more);
});
G__25519.cljs$core$IFn$_invoke$arity$variadic = G__25519__delegate;
return G__25519;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__25522 = null;
if (arguments.length > 2) {
var G__25523__i = 0, G__25523__a = new Array(arguments.length -  2);
while (G__25523__i < G__25523__a.length) {G__25523__a[G__25523__i] = arguments[G__25523__i + 2]; ++G__25523__i;}
G__25522 = new cljs.core.IndexedSeq(G__25523__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25522);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__25524__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__25524 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25525__i = 0, G__25525__a = new Array(arguments.length -  2);
while (G__25525__i < G__25525__a.length) {G__25525__a[G__25525__i] = arguments[G__25525__i + 2]; ++G__25525__i;}
  more = new cljs.core.IndexedSeq(G__25525__a,0);
} 
return G__25524__delegate.call(this,x,y,more);};
G__25524.cljs$lang$maxFixedArity = 2;
G__25524.cljs$lang$applyTo = (function (arglist__25526){
var x = cljs.core.first(arglist__25526);
arglist__25526 = cljs.core.next(arglist__25526);
var y = cljs.core.first(arglist__25526);
var more = cljs.core.rest(arglist__25526);
return G__25524__delegate(x,y,more);
});
G__25524.cljs$core$IFn$_invoke$arity$variadic = G__25524__delegate;
return G__25524;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__25527 = null;
if (arguments.length > 2) {
var G__25528__i = 0, G__25528__a = new Array(arguments.length -  2);
while (G__25528__i < G__25528__a.length) {G__25528__a[G__25528__i] = arguments[G__25528__i + 2]; ++G__25528__i;}
G__25527 = new cljs.core.IndexedSeq(G__25528__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25527);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__25529__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__25529 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25530__i = 0, G__25530__a = new Array(arguments.length -  2);
while (G__25530__i < G__25530__a.length) {G__25530__a[G__25530__i] = arguments[G__25530__i + 2]; ++G__25530__i;}
  more = new cljs.core.IndexedSeq(G__25530__a,0);
} 
return G__25529__delegate.call(this,x,y,more);};
G__25529.cljs$lang$maxFixedArity = 2;
G__25529.cljs$lang$applyTo = (function (arglist__25531){
var x = cljs.core.first(arglist__25531);
arglist__25531 = cljs.core.next(arglist__25531);
var y = cljs.core.first(arglist__25531);
var more = cljs.core.rest(arglist__25531);
return G__25529__delegate(x,y,more);
});
G__25529.cljs$core$IFn$_invoke$arity$variadic = G__25529__delegate;
return G__25529;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__25532 = null;
if (arguments.length > 2) {
var G__25533__i = 0, G__25533__a = new Array(arguments.length -  2);
while (G__25533__i < G__25533__a.length) {G__25533__a[G__25533__i] = arguments[G__25533__i + 2]; ++G__25533__i;}
G__25532 = new cljs.core.IndexedSeq(G__25533__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25532);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__25538__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__25539 = y;
var G__25540 = cljs.core.first(more);
var G__25541 = cljs.core.next(more);
x = G__25539;
y = G__25540;
more = G__25541;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__25538 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25542__i = 0, G__25542__a = new Array(arguments.length -  2);
while (G__25542__i < G__25542__a.length) {G__25542__a[G__25542__i] = arguments[G__25542__i + 2]; ++G__25542__i;}
  more = new cljs.core.IndexedSeq(G__25542__a,0);
} 
return G__25538__delegate.call(this,x,y,more);};
G__25538.cljs$lang$maxFixedArity = 2;
G__25538.cljs$lang$applyTo = (function (arglist__25543){
var x = cljs.core.first(arglist__25543);
arglist__25543 = cljs.core.next(arglist__25543);
var y = cljs.core.first(arglist__25543);
var more = cljs.core.rest(arglist__25543);
return G__25538__delegate(x,y,more);
});
G__25538.cljs$core$IFn$_invoke$arity$variadic = G__25538__delegate;
return G__25538;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__25544 = null;
if (arguments.length > 2) {
var G__25545__i = 0, G__25545__a = new Array(arguments.length -  2);
while (G__25545__i < G__25545__a.length) {G__25545__a[G__25545__i] = arguments[G__25545__i + 2]; ++G__25545__i;}
G__25544 = new cljs.core.IndexedSeq(G__25545__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25544);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__25546 = (n__$1 - (1));
var G__25547 = cljs.core.next(xs);
n__$1 = G__25546;
xs = G__25547;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__25551 = x;
return goog.string.buildString(G__25551);
}
});
var str__2 = (function() { 
var G__25552__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__25553 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__25554 = cljs.core.next(more);
sb = G__25553;
more = G__25554;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__25552 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__25555__i = 0, G__25555__a = new Array(arguments.length -  1);
while (G__25555__i < G__25555__a.length) {G__25555__a[G__25555__i] = arguments[G__25555__i + 1]; ++G__25555__i;}
  ys = new cljs.core.IndexedSeq(G__25555__a,0);
} 
return G__25552__delegate.call(this,x,ys);};
G__25552.cljs$lang$maxFixedArity = 1;
G__25552.cljs$lang$applyTo = (function (arglist__25556){
var x = cljs.core.first(arglist__25556);
var ys = cljs.core.rest(arglist__25556);
return G__25552__delegate(x,ys);
});
G__25552.cljs$core$IFn$_invoke$arity$variadic = G__25552__delegate;
return G__25552;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__25557 = null;
if (arguments.length > 1) {
var G__25558__i = 0, G__25558__a = new Array(arguments.length -  1);
while (G__25558__i < G__25558__a.length) {G__25558__a[G__25558__i] = arguments[G__25558__i + 1]; ++G__25558__i;}
G__25557 = new cljs.core.IndexedSeq(G__25558__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__25557);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__25559 = cljs.core.next(xs);
var G__25560 = cljs.core.next(ys);
xs = G__25559;
ys = G__25560;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__25561 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__25562 = cljs.core.next(s);
res = G__25561;
s = G__25562;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__25567 = ((h + (cljs.core.hash((function (){var G__25565 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__25565) : cljs.core.key.call(null,G__25565));
})()) ^ cljs.core.hash((function (){var G__25566 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__25566) : cljs.core.val.call(null,G__25566));
})()))) % (4503599627370496));
var G__25568 = cljs.core.next(s);
h = G__25567;
s = G__25568;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__25569 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__25570 = cljs.core.next(s__$1);
h = G__25569;
s__$1 = G__25570;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__25581_25591 = cljs.core.seq(fn_map);
var chunk__25582_25592 = null;
var count__25583_25593 = (0);
var i__25584_25594 = (0);
while(true){
if((i__25584_25594 < count__25583_25593)){
var vec__25585_25595 = chunk__25582_25592.cljs$core$IIndexed$_nth$arity$2(null,i__25584_25594);
var key_name_25596 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25585_25595,(0),null);
var f_25597 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25585_25595,(1),null);
var str_name_25598 = (function (){var G__25586 = key_name_25596;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__25586) : cljs.core.name.call(null,G__25586));
})();
(obj[str_name_25598] = f_25597);

var G__25599 = seq__25581_25591;
var G__25600 = chunk__25582_25592;
var G__25601 = count__25583_25593;
var G__25602 = (i__25584_25594 + (1));
seq__25581_25591 = G__25599;
chunk__25582_25592 = G__25600;
count__25583_25593 = G__25601;
i__25584_25594 = G__25602;
continue;
} else {
var temp__4126__auto___25603 = cljs.core.seq(seq__25581_25591);
if(temp__4126__auto___25603){
var seq__25581_25604__$1 = temp__4126__auto___25603;
if(cljs.core.chunked_seq_QMARK_(seq__25581_25604__$1)){
var c__18405__auto___25605 = (function (){var G__25587 = seq__25581_25604__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__25587) : cljs.core.chunk_first.call(null,G__25587));
})();
var G__25606 = (function (){var G__25588 = seq__25581_25604__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__25588) : cljs.core.chunk_rest.call(null,G__25588));
})();
var G__25607 = c__18405__auto___25605;
var G__25608 = cljs.core.count(c__18405__auto___25605);
var G__25609 = (0);
seq__25581_25591 = G__25606;
chunk__25582_25592 = G__25607;
count__25583_25593 = G__25608;
i__25584_25594 = G__25609;
continue;
} else {
var vec__25589_25610 = cljs.core.first(seq__25581_25604__$1);
var key_name_25611 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25589_25610,(0),null);
var f_25612 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25589_25610,(1),null);
var str_name_25613 = (function (){var G__25590 = key_name_25611;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__25590) : cljs.core.name.call(null,G__25590));
})();
(obj[str_name_25613] = f_25612);

var G__25614 = cljs.core.next(seq__25581_25604__$1);
var G__25615 = null;
var G__25616 = (0);
var G__25617 = (0);
seq__25581_25591 = G__25614;
chunk__25582_25592 = G__25615;
count__25583_25593 = G__25616;
i__25584_25594 = G__25617;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18039__auto__ = self__.__hash;
if(!((h__18039__auto__ == null))){
return h__18039__auto__;
} else {
var h__18039__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18039__auto____$1;

return h__18039__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18596__auto__ = this;
return cljs.core.es6_iterator(this__18596__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18596__auto__ = this;
return cljs.core.es6_iterator(this__18596__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__25619 = coll;
if(G__25619){
var bit__18299__auto__ = (G__25619.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__18299__auto__) || (G__25619.cljs$core$IReversible$)){
return true;
} else {
if((!G__25619.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__25619);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__25619);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__25620 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__25620;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__25621 = (i - (1));
var G__25622 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__25621;
r = G__25622;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__25623__i = 0, G__25623__a = new Array(arguments.length -  0);
while (G__25623__i < G__25623__a.length) {G__25623__a[G__25623__i] = arguments[G__25623__i + 0]; ++G__25623__i;}
  xs = new cljs.core.IndexedSeq(G__25623__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__25624){
var xs = cljs.core.seq(arglist__25624);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18039__auto__ = self__.__hash;
if(!((h__18039__auto__ == null))){
return h__18039__auto__;
} else {
var h__18039__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18039__auto____$1;

return h__18039__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18596__auto__ = this;
return cljs.core.es6_iterator(this__18596__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__17618__auto__ = (coll == null);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var G__25628 = coll;
if(G__25628){
var bit__18292__auto__ = (G__25628.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__18292__auto__) || (G__25628.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__25630 = x;
if(G__25630){
var bit__18299__auto__ = (G__25630.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__18299__auto__) || (G__25630.cljs$core$IList$)){
return true;
} else {
if((!G__25630.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__25630);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__25630);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__17606__auto__ = cljs.core.not(a.ns);
if(and__17606__auto__){
return b.ns;
} else {
return and__17606__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__25637 = a.ns;
var G__25638 = b.ns;
return goog.array.defaultCompare(G__25637,G__25638);
})();
if(((0) === nsc)){
var G__25639 = a.name;
var G__25640 = b.name;
return goog.array.defaultCompare(G__25639,G__25640);
} else {
return nsc;
}
}
} else {
var G__25641 = a.name;
var G__25642 = b.name;
return goog.array.defaultCompare(G__25641,G__25642);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__18039__auto__ = self__._hash;
if(!((h__18039__auto__ == null))){
return h__18039__auto__;
} else {
var h__18039__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__18039__auto____$1;

return h__18039__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__25644 = null;
var G__25644__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__25644__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__25644 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__25644__2.call(this,self__,coll);
case 3:
return G__25644__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25644.cljs$core$IFn$_invoke$arity$2 = G__25644__2;
G__25644.cljs$core$IFn$_invoke$arity$3 = G__25644__3;
return G__25644;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args25643){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25643)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__25646 = x;
if(G__25646){
var bit__18292__auto__ = (G__25646.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__18292__auto__) || (G__25646.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__25648 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__25648) : cljs.core.name.call(null,G__25648));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18039__auto__ = self__.__hash;
if(!((h__18039__auto__ == null))){
return h__18039__auto__;
} else {
var h__18039__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18039__auto____$1;

return h__18039__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__25649 = ls.sval();
ls = G__25649;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18596__auto__ = this;
return cljs.core.es6_iterator(this__18596__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18039__auto__ = self__.__hash;
if(!((h__18039__auto__ == null))){
return h__18039__auto__;
} else {
var h__18039__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18039__auto____$1;

return h__18039__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18596__auto__ = this;
return cljs.core.es6_iterator(this__18596__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__25651 = s;
if(G__25651){
var bit__18292__auto__ = (G__25651.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__18292__auto__) || (G__25651.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__25652 = cljs.core.next(s__$1);
s__$1 = G__25652;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_25653 = (0);
var xs_25654 = cljs.core.seq(coll);
while(true){
if(xs_25654){
(ret[i_25653] = cljs.core.to_array(cljs.core.first(xs_25654)));

var G__25655 = (i_25653 + (1));
var G__25656 = cljs.core.next(xs_25654);
i_25653 = G__25655;
xs_25654 = G__25656;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__25659 = (i + (1));
var G__25660 = cljs.core.next(s__$1);
i = G__25659;
s__$1 = G__25660;
continue;
} else {
return a;
}
break;
}
} else {
var n__18505__auto___25661 = size;
var i_25662 = (0);
while(true){
if((i_25662 < n__18505__auto___25661)){
(a[i_25662] = init_val_or_seq);

var G__25663 = (i_25662 + (1));
i_25662 = G__25663;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__25666 = (i + (1));
var G__25667 = cljs.core.next(s__$1);
i = G__25666;
s__$1 = G__25667;
continue;
} else {
return a;
}
break;
}
} else {
var n__18505__auto___25668 = size;
var i_25669 = (0);
while(true){
if((i_25669 < n__18505__auto___25668)){
(a[i_25669] = init_val_or_seq);

var G__25670 = (i_25669 + (1));
i_25669 = G__25670;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__25673 = (i + (1));
var G__25674 = cljs.core.next(s__$1);
i = G__25673;
s__$1 = G__25674;
continue;
} else {
return a;
}
break;
}
} else {
var n__18505__auto___25675 = size;
var i_25676 = (0);
while(true){
if((i_25676 < n__18505__auto___25675)){
(a[i_25676] = init_val_or_seq);

var G__25677 = (i_25676 + (1));
i_25676 = G__25677;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__25680 = (i + (1));
var G__25681 = cljs.core.next(s__$1);
i = G__25680;
s__$1 = G__25681;
continue;
} else {
return a;
}
break;
}
} else {
var n__18505__auto___25682 = size;
var i_25683 = (0);
while(true){
if((i_25683 < n__18505__auto___25682)){
(a[i_25683] = init_val_or_seq);

var G__25684 = (i_25683 + (1));
i_25683 = G__25684;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__25685 = cljs.core.next(s__$1);
var G__25686 = (i - (1));
var G__25687 = (sum + (1));
s__$1 = G__25685;
i = G__25686;
sum = G__25687;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__25707__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__25707 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__25708__i = 0, G__25708__a = new Array(arguments.length -  2);
while (G__25708__i < G__25708__a.length) {G__25708__a[G__25708__i] = arguments[G__25708__i + 2]; ++G__25708__i;}
  zs = new cljs.core.IndexedSeq(G__25708__a,0);
} 
return G__25707__delegate.call(this,x,y,zs);};
G__25707.cljs$lang$maxFixedArity = 2;
G__25707.cljs$lang$applyTo = (function (arglist__25709){
var x = cljs.core.first(arglist__25709);
arglist__25709 = cljs.core.next(arglist__25709);
var y = cljs.core.first(arglist__25709);
var zs = cljs.core.rest(arglist__25709);
return G__25707__delegate(x,y,zs);
});
G__25707.cljs$core$IFn$_invoke$arity$variadic = G__25707__delegate;
return G__25707;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__25710 = null;
if (arguments.length > 2) {
var G__25711__i = 0, G__25711__a = new Array(arguments.length -  2);
while (G__25711__i < G__25711__a.length) {G__25711__a[G__25711__i] = arguments[G__25711__i + 2]; ++G__25711__i;}
G__25710 = new cljs.core.IndexedSeq(G__25711__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25710);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__25712__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__25712 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__25713__i = 0, G__25713__a = new Array(arguments.length -  4);
while (G__25713__i < G__25713__a.length) {G__25713__a[G__25713__i] = arguments[G__25713__i + 4]; ++G__25713__i;}
  more = new cljs.core.IndexedSeq(G__25713__a,0);
} 
return G__25712__delegate.call(this,a,b,c,d,more);};
G__25712.cljs$lang$maxFixedArity = 4;
G__25712.cljs$lang$applyTo = (function (arglist__25714){
var a = cljs.core.first(arglist__25714);
arglist__25714 = cljs.core.next(arglist__25714);
var b = cljs.core.first(arglist__25714);
arglist__25714 = cljs.core.next(arglist__25714);
var c = cljs.core.first(arglist__25714);
arglist__25714 = cljs.core.next(arglist__25714);
var d = cljs.core.first(arglist__25714);
var more = cljs.core.rest(arglist__25714);
return G__25712__delegate(a,b,c,d,more);
});
G__25712.cljs$core$IFn$_invoke$arity$variadic = G__25712__delegate;
return G__25712;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__25715 = null;
if (arguments.length > 4) {
var G__25716__i = 0, G__25716__a = new Array(arguments.length -  4);
while (G__25716__i < G__25716__a.length) {G__25716__a[G__25716__i] = arguments[G__25716__i + 4]; ++G__25716__i;}
G__25715 = new cljs.core.IndexedSeq(G__25716__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__25715);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__25717__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__25718 = ntcoll;
var G__25719 = cljs.core.first(vals);
var G__25720 = cljs.core.next(vals);
tcoll = G__25718;
val = G__25719;
vals = G__25720;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__25717 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__25721__i = 0, G__25721__a = new Array(arguments.length -  2);
while (G__25721__i < G__25721__a.length) {G__25721__a[G__25721__i] = arguments[G__25721__i + 2]; ++G__25721__i;}
  vals = new cljs.core.IndexedSeq(G__25721__a,0);
} 
return G__25717__delegate.call(this,tcoll,val,vals);};
G__25717.cljs$lang$maxFixedArity = 2;
G__25717.cljs$lang$applyTo = (function (arglist__25722){
var tcoll = cljs.core.first(arglist__25722);
arglist__25722 = cljs.core.next(arglist__25722);
var val = cljs.core.first(arglist__25722);
var vals = cljs.core.rest(arglist__25722);
return G__25717__delegate(tcoll,val,vals);
});
G__25717.cljs$core$IFn$_invoke$arity$variadic = G__25717__delegate;
return G__25717;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__25723 = null;
if (arguments.length > 2) {
var G__25724__i = 0, G__25724__a = new Array(arguments.length -  2);
while (G__25724__i < G__25724__a.length) {G__25724__a[G__25724__i] = arguments[G__25724__i + 2]; ++G__25724__i;}
G__25723 = new cljs.core.IndexedSeq(G__25724__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__25723);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__25725__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__25726 = ntcoll;
var G__25727 = cljs.core.first(kvs);
var G__25728 = cljs.core.second(kvs);
var G__25729 = cljs.core.nnext(kvs);
tcoll = G__25726;
key = G__25727;
val = G__25728;
kvs = G__25729;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__25725 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__25730__i = 0, G__25730__a = new Array(arguments.length -  3);
while (G__25730__i < G__25730__a.length) {G__25730__a[G__25730__i] = arguments[G__25730__i + 3]; ++G__25730__i;}
  kvs = new cljs.core.IndexedSeq(G__25730__a,0);
} 
return G__25725__delegate.call(this,tcoll,key,val,kvs);};
G__25725.cljs$lang$maxFixedArity = 3;
G__25725.cljs$lang$applyTo = (function (arglist__25731){
var tcoll = cljs.core.first(arglist__25731);
arglist__25731 = cljs.core.next(arglist__25731);
var key = cljs.core.first(arglist__25731);
arglist__25731 = cljs.core.next(arglist__25731);
var val = cljs.core.first(arglist__25731);
var kvs = cljs.core.rest(arglist__25731);
return G__25725__delegate(tcoll,key,val,kvs);
});
G__25725.cljs$core$IFn$_invoke$arity$variadic = G__25725__delegate;
return G__25725;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__25732 = null;
if (arguments.length > 3) {
var G__25733__i = 0, G__25733__a = new Array(arguments.length -  3);
while (G__25733__i < G__25733__a.length) {G__25733__a[G__25733__i] = arguments[G__25733__i + 3]; ++G__25733__i;}
G__25732 = new cljs.core.IndexedSeq(G__25733__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__25732);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__25734__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__25735 = ntcoll;
var G__25736 = cljs.core.first(ks);
var G__25737 = cljs.core.next(ks);
tcoll = G__25735;
key = G__25736;
ks = G__25737;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__25734 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__25738__i = 0, G__25738__a = new Array(arguments.length -  2);
while (G__25738__i < G__25738__a.length) {G__25738__a[G__25738__i] = arguments[G__25738__i + 2]; ++G__25738__i;}
  ks = new cljs.core.IndexedSeq(G__25738__a,0);
} 
return G__25734__delegate.call(this,tcoll,key,ks);};
G__25734.cljs$lang$maxFixedArity = 2;
G__25734.cljs$lang$applyTo = (function (arglist__25739){
var tcoll = cljs.core.first(arglist__25739);
arglist__25739 = cljs.core.next(arglist__25739);
var key = cljs.core.first(arglist__25739);
var ks = cljs.core.rest(arglist__25739);
return G__25734__delegate(tcoll,key,ks);
});
G__25734.cljs$core$IFn$_invoke$arity$variadic = G__25734__delegate;
return G__25734;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__25740 = null;
if (arguments.length > 2) {
var G__25741__i = 0, G__25741__a = new Array(arguments.length -  2);
while (G__25741__i < G__25741__a.length) {G__25741__a[G__25741__i] = arguments[G__25741__i + 2]; ++G__25741__i;}
G__25740 = new cljs.core.IndexedSeq(G__25741__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__25740);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__25742__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__25743 = ntcoll;
var G__25744 = cljs.core.first(vals);
var G__25745 = cljs.core.next(vals);
tcoll = G__25743;
val = G__25744;
vals = G__25745;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__25742 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__25746__i = 0, G__25746__a = new Array(arguments.length -  2);
while (G__25746__i < G__25746__a.length) {G__25746__a[G__25746__i] = arguments[G__25746__i + 2]; ++G__25746__i;}
  vals = new cljs.core.IndexedSeq(G__25746__a,0);
} 
return G__25742__delegate.call(this,tcoll,val,vals);};
G__25742.cljs$lang$maxFixedArity = 2;
G__25742.cljs$lang$applyTo = (function (arglist__25747){
var tcoll = cljs.core.first(arglist__25747);
arglist__25747 = cljs.core.next(arglist__25747);
var val = cljs.core.first(arglist__25747);
var vals = cljs.core.rest(arglist__25747);
return G__25742__delegate(tcoll,val,vals);
});
G__25742.cljs$core$IFn$_invoke$arity$variadic = G__25742__delegate;
return G__25742;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__25748 = null;
if (arguments.length > 2) {
var G__25749__i = 0, G__25749__a = new Array(arguments.length -  2);
while (G__25749__i < G__25749__a.length) {G__25749__a[G__25749__i] = arguments[G__25749__i + 2]; ++G__25749__i;}
G__25748 = new cljs.core.IndexedSeq(G__25749__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__25748);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a18549 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a18549);
} else {
var G__25960 = a18549;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25960) : f.call(null,G__25960));
}
} else {
var b18550 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a18549,b18550);
} else {
var G__25961 = a18549;
var G__25962 = b18550;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25961,G__25962) : f.call(null,G__25961,G__25962));
}
} else {
var c18551 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a18549,b18550,c18551);
} else {
var G__25963 = a18549;
var G__25964 = b18550;
var G__25965 = c18551;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25963,G__25964,G__25965) : f.call(null,G__25963,G__25964,G__25965));
}
} else {
var d18552 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a18549,b18550,c18551,d18552);
} else {
var G__25966 = a18549;
var G__25967 = b18550;
var G__25968 = c18551;
var G__25969 = d18552;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25966,G__25967,G__25968,G__25969) : f.call(null,G__25966,G__25967,G__25968,G__25969));
}
} else {
var e18553 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a18549,b18550,c18551,d18552,e18553);
} else {
var G__25970 = a18549;
var G__25971 = b18550;
var G__25972 = c18551;
var G__25973 = d18552;
var G__25974 = e18553;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__25970,G__25971,G__25972,G__25973,G__25974) : f.call(null,G__25970,G__25971,G__25972,G__25973,G__25974));
}
} else {
var f18554 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a18549,b18550,c18551,d18552,e18553,f18554);
} else {
var G__25975 = a18549;
var G__25976 = b18550;
var G__25977 = c18551;
var G__25978 = d18552;
var G__25979 = e18553;
var G__25980 = f18554;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__25975,G__25976,G__25977,G__25978,G__25979,G__25980) : f.call(null,G__25975,G__25976,G__25977,G__25978,G__25979,G__25980));
}
} else {
var g18555 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a18549,b18550,c18551,d18552,e18553,f18554,g18555);
} else {
var G__25981 = a18549;
var G__25982 = b18550;
var G__25983 = c18551;
var G__25984 = d18552;
var G__25985 = e18553;
var G__25986 = f18554;
var G__25987 = g18555;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__25981,G__25982,G__25983,G__25984,G__25985,G__25986,G__25987) : f.call(null,G__25981,G__25982,G__25983,G__25984,G__25985,G__25986,G__25987));
}
} else {
var h18556 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a18549,b18550,c18551,d18552,e18553,f18554,g18555,h18556);
} else {
var G__25988 = a18549;
var G__25989 = b18550;
var G__25990 = c18551;
var G__25991 = d18552;
var G__25992 = e18553;
var G__25993 = f18554;
var G__25994 = g18555;
var G__25995 = h18556;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__25988,G__25989,G__25990,G__25991,G__25992,G__25993,G__25994,G__25995) : f.call(null,G__25988,G__25989,G__25990,G__25991,G__25992,G__25993,G__25994,G__25995));
}
} else {
var i18557 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a18549,b18550,c18551,d18552,e18553,f18554,g18555,h18556,i18557);
} else {
var G__25996 = a18549;
var G__25997 = b18550;
var G__25998 = c18551;
var G__25999 = d18552;
var G__26000 = e18553;
var G__26001 = f18554;
var G__26002 = g18555;
var G__26003 = h18556;
var G__26004 = i18557;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__25996,G__25997,G__25998,G__25999,G__26000,G__26001,G__26002,G__26003,G__26004) : f.call(null,G__25996,G__25997,G__25998,G__25999,G__26000,G__26001,G__26002,G__26003,G__26004));
}
} else {
var j18558 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a18549,b18550,c18551,d18552,e18553,f18554,g18555,h18556,i18557,j18558);
} else {
var G__26005 = a18549;
var G__26006 = b18550;
var G__26007 = c18551;
var G__26008 = d18552;
var G__26009 = e18553;
var G__26010 = f18554;
var G__26011 = g18555;
var G__26012 = h18556;
var G__26013 = i18557;
var G__26014 = j18558;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__26005,G__26006,G__26007,G__26008,G__26009,G__26010,G__26011,G__26012,G__26013,G__26014) : f.call(null,G__26005,G__26006,G__26007,G__26008,G__26009,G__26010,G__26011,G__26012,G__26013,G__26014));
}
} else {
var k18559 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a18549,b18550,c18551,d18552,e18553,f18554,g18555,h18556,i18557,j18558,k18559);
} else {
var G__26015 = a18549;
var G__26016 = b18550;
var G__26017 = c18551;
var G__26018 = d18552;
var G__26019 = e18553;
var G__26020 = f18554;
var G__26021 = g18555;
var G__26022 = h18556;
var G__26023 = i18557;
var G__26024 = j18558;
var G__26025 = k18559;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__26015,G__26016,G__26017,G__26018,G__26019,G__26020,G__26021,G__26022,G__26023,G__26024,G__26025) : f.call(null,G__26015,G__26016,G__26017,G__26018,G__26019,G__26020,G__26021,G__26022,G__26023,G__26024,G__26025));
}
} else {
var l18560 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a18549,b18550,c18551,d18552,e18553,f18554,g18555,h18556,i18557,j18558,k18559,l18560);
} else {
var G__26026 = a18549;
var G__26027 = b18550;
var G__26028 = c18551;
var G__26029 = d18552;
var G__26030 = e18553;
var G__26031 = f18554;
var G__26032 = g18555;
var G__26033 = h18556;
var G__26034 = i18557;
var G__26035 = j18558;
var G__26036 = k18559;
var G__26037 = l18560;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__26026,G__26027,G__26028,G__26029,G__26030,G__26031,G__26032,G__26033,G__26034,G__26035,G__26036,G__26037) : f.call(null,G__26026,G__26027,G__26028,G__26029,G__26030,G__26031,G__26032,G__26033,G__26034,G__26035,G__26036,G__26037));
}
} else {
var m18561 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a18549,b18550,c18551,d18552,e18553,f18554,g18555,h18556,i18557,j18558,k18559,l18560,m18561);
} else {
var G__26038 = a18549;
var G__26039 = b18550;
var G__26040 = c18551;
var G__26041 = d18552;
var G__26042 = e18553;
var G__26043 = f18554;
var G__26044 = g18555;
var G__26045 = h18556;
var G__26046 = i18557;
var G__26047 = j18558;
var G__26048 = k18559;
var G__26049 = l18560;
var G__26050 = m18561;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__26038,G__26039,G__26040,G__26041,G__26042,G__26043,G__26044,G__26045,G__26046,G__26047,G__26048,G__26049,G__26050) : f.call(null,G__26038,G__26039,G__26040,G__26041,G__26042,G__26043,G__26044,G__26045,G__26046,G__26047,G__26048,G__26049,G__26050));
}
} else {
var n18562 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a18549,b18550,c18551,d18552,e18553,f18554,g18555,h18556,i18557,j18558,k18559,l18560,m18561,n18562);
} else {
var G__26051 = a18549;
var G__26052 = b18550;
var G__26053 = c18551;
var G__26054 = d18552;
var G__26055 = e18553;
var G__26056 = f18554;
var G__26057 = g18555;
var G__26058 = h18556;
var G__26059 = i18557;
var G__26060 = j18558;
var G__26061 = k18559;
var G__26062 = l18560;
var G__26063 = m18561;
var G__26064 = n18562;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__26051,G__26052,G__26053,G__26054,G__26055,G__26056,G__26057,G__26058,G__26059,G__26060,G__26061,G__26062,G__26063,G__26064) : f.call(null,G__26051,G__26052,G__26053,G__26054,G__26055,G__26056,G__26057,G__26058,G__26059,G__26060,G__26061,G__26062,G__26063,G__26064));
}
} else {
var o18563 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a18549,b18550,c18551,d18552,e18553,f18554,g18555,h18556,i18557,j18558,k18559,l18560,m18561,n18562,o18563);
} else {
var G__26065 = a18549;
var G__26066 = b18550;
var G__26067 = c18551;
var G__26068 = d18552;
var G__26069 = e18553;
var G__26070 = f18554;
var G__26071 = g18555;
var G__26072 = h18556;
var G__26073 = i18557;
var G__26074 = j18558;
var G__26075 = k18559;
var G__26076 = l18560;
var G__26077 = m18561;
var G__26078 = n18562;
var G__26079 = o18563;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__26065,G__26066,G__26067,G__26068,G__26069,G__26070,G__26071,G__26072,G__26073,G__26074,G__26075,G__26076,G__26077,G__26078,G__26079) : f.call(null,G__26065,G__26066,G__26067,G__26068,G__26069,G__26070,G__26071,G__26072,G__26073,G__26074,G__26075,G__26076,G__26077,G__26078,G__26079));
}
} else {
var p18564 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a18549,b18550,c18551,d18552,e18553,f18554,g18555,h18556,i18557,j18558,k18559,l18560,m18561,n18562,o18563,p18564);
} else {
var G__26080 = a18549;
var G__26081 = b18550;
var G__26082 = c18551;
var G__26083 = d18552;
var G__26084 = e18553;
var G__26085 = f18554;
var G__26086 = g18555;
var G__26087 = h18556;
var G__26088 = i18557;
var G__26089 = j18558;
var G__26090 = k18559;
var G__26091 = l18560;
var G__26092 = m18561;
var G__26093 = n18562;
var G__26094 = o18563;
var G__26095 = p18564;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__26080,G__26081,G__26082,G__26083,G__26084,G__26085,G__26086,G__26087,G__26088,G__26089,G__26090,G__26091,G__26092,G__26093,G__26094,G__26095) : f.call(null,G__26080,G__26081,G__26082,G__26083,G__26084,G__26085,G__26086,G__26087,G__26088,G__26089,G__26090,G__26091,G__26092,G__26093,G__26094,G__26095));
}
} else {
var q18565 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a18549,b18550,c18551,d18552,e18553,f18554,g18555,h18556,i18557,j18558,k18559,l18560,m18561,n18562,o18563,p18564,q18565);
} else {
var G__26096 = a18549;
var G__26097 = b18550;
var G__26098 = c18551;
var G__26099 = d18552;
var G__26100 = e18553;
var G__26101 = f18554;
var G__26102 = g18555;
var G__26103 = h18556;
var G__26104 = i18557;
var G__26105 = j18558;
var G__26106 = k18559;
var G__26107 = l18560;
var G__26108 = m18561;
var G__26109 = n18562;
var G__26110 = o18563;
var G__26111 = p18564;
var G__26112 = q18565;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__26096,G__26097,G__26098,G__26099,G__26100,G__26101,G__26102,G__26103,G__26104,G__26105,G__26106,G__26107,G__26108,G__26109,G__26110,G__26111,G__26112) : f.call(null,G__26096,G__26097,G__26098,G__26099,G__26100,G__26101,G__26102,G__26103,G__26104,G__26105,G__26106,G__26107,G__26108,G__26109,G__26110,G__26111,G__26112));
}
} else {
var r18566 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a18549,b18550,c18551,d18552,e18553,f18554,g18555,h18556,i18557,j18558,k18559,l18560,m18561,n18562,o18563,p18564,q18565,r18566);
} else {
var G__26113 = a18549;
var G__26114 = b18550;
var G__26115 = c18551;
var G__26116 = d18552;
var G__26117 = e18553;
var G__26118 = f18554;
var G__26119 = g18555;
var G__26120 = h18556;
var G__26121 = i18557;
var G__26122 = j18558;
var G__26123 = k18559;
var G__26124 = l18560;
var G__26125 = m18561;
var G__26126 = n18562;
var G__26127 = o18563;
var G__26128 = p18564;
var G__26129 = q18565;
var G__26130 = r18566;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__26113,G__26114,G__26115,G__26116,G__26117,G__26118,G__26119,G__26120,G__26121,G__26122,G__26123,G__26124,G__26125,G__26126,G__26127,G__26128,G__26129,G__26130) : f.call(null,G__26113,G__26114,G__26115,G__26116,G__26117,G__26118,G__26119,G__26120,G__26121,G__26122,G__26123,G__26124,G__26125,G__26126,G__26127,G__26128,G__26129,G__26130));
}
} else {
var s18567 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a18549,b18550,c18551,d18552,e18553,f18554,g18555,h18556,i18557,j18558,k18559,l18560,m18561,n18562,o18563,p18564,q18565,r18566,s18567);
} else {
var G__26131 = a18549;
var G__26132 = b18550;
var G__26133 = c18551;
var G__26134 = d18552;
var G__26135 = e18553;
var G__26136 = f18554;
var G__26137 = g18555;
var G__26138 = h18556;
var G__26139 = i18557;
var G__26140 = j18558;
var G__26141 = k18559;
var G__26142 = l18560;
var G__26143 = m18561;
var G__26144 = n18562;
var G__26145 = o18563;
var G__26146 = p18564;
var G__26147 = q18565;
var G__26148 = r18566;
var G__26149 = s18567;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__26131,G__26132,G__26133,G__26134,G__26135,G__26136,G__26137,G__26138,G__26139,G__26140,G__26141,G__26142,G__26143,G__26144,G__26145,G__26146,G__26147,G__26148,G__26149) : f.call(null,G__26131,G__26132,G__26133,G__26134,G__26135,G__26136,G__26137,G__26138,G__26139,G__26140,G__26141,G__26142,G__26143,G__26144,G__26145,G__26146,G__26147,G__26148,G__26149));
}
} else {
var t18568 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a18549,b18550,c18551,d18552,e18553,f18554,g18555,h18556,i18557,j18558,k18559,l18560,m18561,n18562,o18563,p18564,q18565,r18566,s18567,t18568);
} else {
var G__26150 = a18549;
var G__26151 = b18550;
var G__26152 = c18551;
var G__26153 = d18552;
var G__26154 = e18553;
var G__26155 = f18554;
var G__26156 = g18555;
var G__26157 = h18556;
var G__26158 = i18557;
var G__26159 = j18558;
var G__26160 = k18559;
var G__26161 = l18560;
var G__26162 = m18561;
var G__26163 = n18562;
var G__26164 = o18563;
var G__26165 = p18564;
var G__26166 = q18565;
var G__26167 = r18566;
var G__26168 = s18567;
var G__26169 = t18568;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__26150,G__26151,G__26152,G__26153,G__26154,G__26155,G__26156,G__26157,G__26158,G__26159,G__26160,G__26161,G__26162,G__26163,G__26164,G__26165,G__26166,G__26167,G__26168,G__26169) : f.call(null,G__26150,G__26151,G__26152,G__26153,G__26154,G__26155,G__26156,G__26157,G__26158,G__26159,G__26160,G__26161,G__26162,G__26163,G__26164,G__26165,G__26166,G__26167,G__26168,G__26169));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__26170__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__26170 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__26171__i = 0, G__26171__a = new Array(arguments.length -  5);
while (G__26171__i < G__26171__a.length) {G__26171__a[G__26171__i] = arguments[G__26171__i + 5]; ++G__26171__i;}
  args = new cljs.core.IndexedSeq(G__26171__a,0);
} 
return G__26170__delegate.call(this,f,a,b,c,d,args);};
G__26170.cljs$lang$maxFixedArity = 5;
G__26170.cljs$lang$applyTo = (function (arglist__26172){
var f = cljs.core.first(arglist__26172);
arglist__26172 = cljs.core.next(arglist__26172);
var a = cljs.core.first(arglist__26172);
arglist__26172 = cljs.core.next(arglist__26172);
var b = cljs.core.first(arglist__26172);
arglist__26172 = cljs.core.next(arglist__26172);
var c = cljs.core.first(arglist__26172);
arglist__26172 = cljs.core.next(arglist__26172);
var d = cljs.core.first(arglist__26172);
var args = cljs.core.rest(arglist__26172);
return G__26170__delegate(f,a,b,c,d,args);
});
G__26170.cljs$core$IFn$_invoke$arity$variadic = G__26170__delegate;
return G__26170;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__26173 = null;
if (arguments.length > 5) {
var G__26174__i = 0, G__26174__a = new Array(arguments.length -  5);
while (G__26174__i < G__26174__a.length) {G__26174__a[G__26174__i] = arguments[G__26174__i + 5]; ++G__26174__i;}
G__26173 = new cljs.core.IndexedSeq(G__26174__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__26173);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__26190 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26190) : f.call(null,G__26190));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__26191 = cljs.core.meta(obj);
var G__26192 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26191,G__26192) : f.call(null,G__26191,G__26192));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__26193 = cljs.core.meta(obj);
var G__26194 = a;
var G__26195 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26193,G__26194,G__26195) : f.call(null,G__26193,G__26194,G__26195));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__26196 = cljs.core.meta(obj);
var G__26197 = a;
var G__26198 = b;
var G__26199 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26196,G__26197,G__26198,G__26199) : f.call(null,G__26196,G__26197,G__26198,G__26199));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__26200 = cljs.core.meta(obj);
var G__26201 = a;
var G__26202 = b;
var G__26203 = c;
var G__26204 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__26200,G__26201,G__26202,G__26203,G__26204) : f.call(null,G__26200,G__26201,G__26202,G__26203,G__26204));
})());
});
var vary_meta__7 = (function() { 
var G__26205__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__26205 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__26206__i = 0, G__26206__a = new Array(arguments.length -  6);
while (G__26206__i < G__26206__a.length) {G__26206__a[G__26206__i] = arguments[G__26206__i + 6]; ++G__26206__i;}
  args = new cljs.core.IndexedSeq(G__26206__a,0);
} 
return G__26205__delegate.call(this,obj,f,a,b,c,d,args);};
G__26205.cljs$lang$maxFixedArity = 6;
G__26205.cljs$lang$applyTo = (function (arglist__26207){
var obj = cljs.core.first(arglist__26207);
arglist__26207 = cljs.core.next(arglist__26207);
var f = cljs.core.first(arglist__26207);
arglist__26207 = cljs.core.next(arglist__26207);
var a = cljs.core.first(arglist__26207);
arglist__26207 = cljs.core.next(arglist__26207);
var b = cljs.core.first(arglist__26207);
arglist__26207 = cljs.core.next(arglist__26207);
var c = cljs.core.first(arglist__26207);
arglist__26207 = cljs.core.next(arglist__26207);
var d = cljs.core.first(arglist__26207);
var args = cljs.core.rest(arglist__26207);
return G__26205__delegate(obj,f,a,b,c,d,args);
});
G__26205.cljs$core$IFn$_invoke$arity$variadic = G__26205__delegate;
return G__26205;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__26208 = null;
if (arguments.length > 6) {
var G__26209__i = 0, G__26209__a = new Array(arguments.length -  6);
while (G__26209__i < G__26209__a.length) {G__26209__a[G__26209__i] = arguments[G__26209__i + 6]; ++G__26209__i;}
G__26208 = new cljs.core.IndexedSeq(G__26209__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__26208);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__26210__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__26210 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__26211__i = 0, G__26211__a = new Array(arguments.length -  2);
while (G__26211__i < G__26211__a.length) {G__26211__a[G__26211__i] = arguments[G__26211__i + 2]; ++G__26211__i;}
  more = new cljs.core.IndexedSeq(G__26211__a,0);
} 
return G__26210__delegate.call(this,x,y,more);};
G__26210.cljs$lang$maxFixedArity = 2;
G__26210.cljs$lang$applyTo = (function (arglist__26212){
var x = cljs.core.first(arglist__26212);
arglist__26212 = cljs.core.next(arglist__26212);
var y = cljs.core.first(arglist__26212);
var more = cljs.core.rest(arglist__26212);
return G__26210__delegate(x,y,more);
});
G__26210.cljs$core$IFn$_invoke$arity$variadic = G__26210__delegate;
return G__26210;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__26213 = null;
if (arguments.length > 2) {
var G__26214__i = 0, G__26214__a = new Array(arguments.length -  2);
while (G__26214__i < G__26214__a.length) {G__26214__a[G__26214__i] = arguments[G__26214__i + 2]; ++G__26214__i;}
G__26213 = new cljs.core.IndexedSeq(G__26214__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__26213);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t26218 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t26218 = (function (nil_iter,meta26219){
this.nil_iter = nil_iter;
this.meta26219 = meta26219;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t26218.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t26218.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t26218.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t26218.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_26220){
var self__ = this;
var _26220__$1 = this;
return self__.meta26219;
});

cljs.core.t26218.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_26220,meta26219__$1){
var self__ = this;
var _26220__$1 = this;
return (new cljs.core.t26218(self__.nil_iter,meta26219__$1));
});

cljs.core.t26218.cljs$lang$type = true;

cljs.core.t26218.cljs$lang$ctorStr = "cljs.core/t26218";

cljs.core.t26218.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/t26218");
});

cljs.core.__GT_t26218 = (function __GT_t26218(nil_iter__$1,meta26219){
return (new cljs.core.t26218(nil_iter__$1,meta26219));
});

}

return (new cljs.core.t26218(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__17606__auto__ = !((lt.stepper == null));
if(and__17606__auto__){
return self__.iter.hasNext();
} else {
return and__17606__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__26221 = lt;
var G__26222 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__26221,G__26222) : self__.xform.call(null,G__26221,G__26222));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__26223 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__26223) : self__.xform.call(null,G__26223));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__26225 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__26225) : xform.call(null,G__26225));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__26227 = cljs.core.next(iters__$1);
iters__$1 = G__26227;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__18505__auto___26228 = self__.iters.length;
var i_26229 = (0);
while(true){
if((i_26229 < n__18505__auto___26228)){
(self__.nexts[i_26229] = (self__.iters[i_26229]).next());

var G__26230 = (i_26229 + (1));
i_26229 = G__26230;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__17606__auto__ = !((lt.stepper == null));
if(and__17606__auto__){
return this$.hasNext();
} else {
return and__17606__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__26226 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__26226) : self__.xform.call(null,G__26226));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__26235 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__26235) : xform.call(null,G__26235));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18596__auto__ = this;
return cljs.core.es6_iterator(this__18596__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__26236_26240 = cljs.core.seq(colls);
var chunk__26237_26241 = null;
var count__26238_26242 = (0);
var i__26239_26243 = (0);
while(true){
if((i__26239_26243 < count__26238_26242)){
var coll_26244 = chunk__26237_26241.cljs$core$IIndexed$_nth$arity$2(null,i__26239_26243);
iters.push(cljs.core.iter(coll_26244));

var G__26245 = seq__26236_26240;
var G__26246 = chunk__26237_26241;
var G__26247 = count__26238_26242;
var G__26248 = (i__26239_26243 + (1));
seq__26236_26240 = G__26245;
chunk__26237_26241 = G__26246;
count__26238_26242 = G__26247;
i__26239_26243 = G__26248;
continue;
} else {
var temp__4126__auto___26249 = cljs.core.seq(seq__26236_26240);
if(temp__4126__auto___26249){
var seq__26236_26250__$1 = temp__4126__auto___26249;
if(cljs.core.chunked_seq_QMARK_(seq__26236_26250__$1)){
var c__18405__auto___26251 = cljs.core.chunk_first(seq__26236_26250__$1);
var G__26252 = cljs.core.chunk_rest(seq__26236_26250__$1);
var G__26253 = c__18405__auto___26251;
var G__26254 = cljs.core.count(c__18405__auto___26251);
var G__26255 = (0);
seq__26236_26240 = G__26252;
chunk__26237_26241 = G__26253;
count__26238_26242 = G__26254;
i__26239_26243 = G__26255;
continue;
} else {
var coll_26256 = cljs.core.first(seq__26236_26250__$1);
iters.push(cljs.core.iter(coll_26256));

var G__26257 = cljs.core.next(seq__26236_26250__$1);
var G__26258 = null;
var G__26259 = (0);
var G__26260 = (0);
seq__26236_26240 = G__26257;
chunk__26237_26241 = G__26258;
count__26238_26242 = G__26259;
i__26239_26243 = G__26260;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__17618__auto__ = cljs.core.seq(coll);
if(or__17618__auto__){
return or__17618__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__26261__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__26261 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__26262__i = 0, G__26262__a = new Array(arguments.length -  2);
while (G__26262__i < G__26262__a.length) {G__26262__a[G__26262__i] = arguments[G__26262__i + 2]; ++G__26262__i;}
  colls = new cljs.core.IndexedSeq(G__26262__a,0);
} 
return G__26261__delegate.call(this,xform,coll,colls);};
G__26261.cljs$lang$maxFixedArity = 2;
G__26261.cljs$lang$applyTo = (function (arglist__26263){
var xform = cljs.core.first(arglist__26263);
arglist__26263 = cljs.core.next(arglist__26263);
var coll = cljs.core.first(arglist__26263);
var colls = cljs.core.rest(arglist__26263);
return G__26261__delegate(xform,coll,colls);
});
G__26261.cljs$core$IFn$_invoke$arity$variadic = G__26261__delegate;
return G__26261;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__26264 = null;
if (arguments.length > 2) {
var G__26265__i = 0, G__26265__a = new Array(arguments.length -  2);
while (G__26265__i < G__26265__a.length) {G__26265__a[G__26265__i] = arguments[G__26265__i + 2]; ++G__26265__i;}
G__26264 = new cljs.core.IndexedSeq(G__26265__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__26264);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__26267 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26267) : pred.call(null,G__26267));
})())){
var G__26268 = pred;
var G__26269 = cljs.core.next(coll);
pred = G__26268;
coll = G__26269;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__17618__auto__ = (function (){var G__26273 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26273) : pred.call(null,G__26273));
})();
if(cljs.core.truth_(or__17618__auto__)){
return or__17618__auto__;
} else {
var G__26274 = pred;
var G__26275 = cljs.core.next(coll);
pred = G__26274;
coll = G__26275;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__26282 = null;
var G__26282__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__26282__1 = (function (x){
return cljs.core.not((function (){var G__26279 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26279) : f.call(null,G__26279));
})());
});
var G__26282__2 = (function (x,y){
return cljs.core.not((function (){var G__26280 = x;
var G__26281 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26280,G__26281) : f.call(null,G__26280,G__26281));
})());
});
var G__26282__3 = (function() { 
var G__26283__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__26283 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__26284__i = 0, G__26284__a = new Array(arguments.length -  2);
while (G__26284__i < G__26284__a.length) {G__26284__a[G__26284__i] = arguments[G__26284__i + 2]; ++G__26284__i;}
  zs = new cljs.core.IndexedSeq(G__26284__a,0);
} 
return G__26283__delegate.call(this,x,y,zs);};
G__26283.cljs$lang$maxFixedArity = 2;
G__26283.cljs$lang$applyTo = (function (arglist__26285){
var x = cljs.core.first(arglist__26285);
arglist__26285 = cljs.core.next(arglist__26285);
var y = cljs.core.first(arglist__26285);
var zs = cljs.core.rest(arglist__26285);
return G__26283__delegate(x,y,zs);
});
G__26283.cljs$core$IFn$_invoke$arity$variadic = G__26283__delegate;
return G__26283;
})()
;
G__26282 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__26282__0.call(this);
case 1:
return G__26282__1.call(this,x);
case 2:
return G__26282__2.call(this,x,y);
default:
var G__26286 = null;
if (arguments.length > 2) {
var G__26287__i = 0, G__26287__a = new Array(arguments.length -  2);
while (G__26287__i < G__26287__a.length) {G__26287__a[G__26287__i] = arguments[G__26287__i + 2]; ++G__26287__i;}
G__26286 = new cljs.core.IndexedSeq(G__26287__a,0);
}
return G__26282__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__26286);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26282.cljs$lang$maxFixedArity = 2;
G__26282.cljs$lang$applyTo = G__26282__3.cljs$lang$applyTo;
G__26282.cljs$core$IFn$_invoke$arity$0 = G__26282__0;
G__26282.cljs$core$IFn$_invoke$arity$1 = G__26282__1;
G__26282.cljs$core$IFn$_invoke$arity$2 = G__26282__2;
G__26282.cljs$core$IFn$_invoke$arity$variadic = G__26282__3.cljs$core$IFn$_invoke$arity$variadic;
return G__26282;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__26288__delegate = function (args){
return x;
};
var G__26288 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__26289__i = 0, G__26289__a = new Array(arguments.length -  0);
while (G__26289__i < G__26289__a.length) {G__26289__a[G__26289__i] = arguments[G__26289__i + 0]; ++G__26289__i;}
  args = new cljs.core.IndexedSeq(G__26289__a,0);
} 
return G__26288__delegate.call(this,args);};
G__26288.cljs$lang$maxFixedArity = 0;
G__26288.cljs$lang$applyTo = (function (arglist__26290){
var args = cljs.core.seq(arglist__26290);
return G__26288__delegate(args);
});
G__26288.cljs$core$IFn$_invoke$arity$variadic = G__26288__delegate;
return G__26288;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__26345 = null;
var G__26345__0 = (function (){
var G__26318 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26318) : f.call(null,G__26318));
});
var G__26345__1 = (function (x){
var G__26319 = (function (){var G__26320 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__26320) : g.call(null,G__26320));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26319) : f.call(null,G__26319));
});
var G__26345__2 = (function (x,y){
var G__26321 = (function (){var G__26322 = x;
var G__26323 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__26322,G__26323) : g.call(null,G__26322,G__26323));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26321) : f.call(null,G__26321));
});
var G__26345__3 = (function (x,y,z){
var G__26324 = (function (){var G__26325 = x;
var G__26326 = y;
var G__26327 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__26325,G__26326,G__26327) : g.call(null,G__26325,G__26326,G__26327));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26324) : f.call(null,G__26324));
});
var G__26345__4 = (function() { 
var G__26346__delegate = function (x,y,z,args){
var G__26328 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26328) : f.call(null,G__26328));
};
var G__26346 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26347__i = 0, G__26347__a = new Array(arguments.length -  3);
while (G__26347__i < G__26347__a.length) {G__26347__a[G__26347__i] = arguments[G__26347__i + 3]; ++G__26347__i;}
  args = new cljs.core.IndexedSeq(G__26347__a,0);
} 
return G__26346__delegate.call(this,x,y,z,args);};
G__26346.cljs$lang$maxFixedArity = 3;
G__26346.cljs$lang$applyTo = (function (arglist__26348){
var x = cljs.core.first(arglist__26348);
arglist__26348 = cljs.core.next(arglist__26348);
var y = cljs.core.first(arglist__26348);
arglist__26348 = cljs.core.next(arglist__26348);
var z = cljs.core.first(arglist__26348);
var args = cljs.core.rest(arglist__26348);
return G__26346__delegate(x,y,z,args);
});
G__26346.cljs$core$IFn$_invoke$arity$variadic = G__26346__delegate;
return G__26346;
})()
;
G__26345 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__26345__0.call(this);
case 1:
return G__26345__1.call(this,x);
case 2:
return G__26345__2.call(this,x,y);
case 3:
return G__26345__3.call(this,x,y,z);
default:
var G__26349 = null;
if (arguments.length > 3) {
var G__26350__i = 0, G__26350__a = new Array(arguments.length -  3);
while (G__26350__i < G__26350__a.length) {G__26350__a[G__26350__i] = arguments[G__26350__i + 3]; ++G__26350__i;}
G__26349 = new cljs.core.IndexedSeq(G__26350__a,0);
}
return G__26345__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26349);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26345.cljs$lang$maxFixedArity = 3;
G__26345.cljs$lang$applyTo = G__26345__4.cljs$lang$applyTo;
G__26345.cljs$core$IFn$_invoke$arity$0 = G__26345__0;
G__26345.cljs$core$IFn$_invoke$arity$1 = G__26345__1;
G__26345.cljs$core$IFn$_invoke$arity$2 = G__26345__2;
G__26345.cljs$core$IFn$_invoke$arity$3 = G__26345__3;
G__26345.cljs$core$IFn$_invoke$arity$variadic = G__26345__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26345;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__26351 = null;
var G__26351__0 = (function (){
var G__26329 = (function (){var G__26330 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__26330) : g.call(null,G__26330));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26329) : f.call(null,G__26329));
});
var G__26351__1 = (function (x){
var G__26331 = (function (){var G__26332 = (function (){var G__26333 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__26333) : h.call(null,G__26333));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__26332) : g.call(null,G__26332));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26331) : f.call(null,G__26331));
});
var G__26351__2 = (function (x,y){
var G__26334 = (function (){var G__26335 = (function (){var G__26336 = x;
var G__26337 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__26336,G__26337) : h.call(null,G__26336,G__26337));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__26335) : g.call(null,G__26335));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26334) : f.call(null,G__26334));
});
var G__26351__3 = (function (x,y,z){
var G__26338 = (function (){var G__26339 = (function (){var G__26340 = x;
var G__26341 = y;
var G__26342 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__26340,G__26341,G__26342) : h.call(null,G__26340,G__26341,G__26342));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__26339) : g.call(null,G__26339));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26338) : f.call(null,G__26338));
});
var G__26351__4 = (function() { 
var G__26352__delegate = function (x,y,z,args){
var G__26343 = (function (){var G__26344 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__26344) : g.call(null,G__26344));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26343) : f.call(null,G__26343));
};
var G__26352 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26353__i = 0, G__26353__a = new Array(arguments.length -  3);
while (G__26353__i < G__26353__a.length) {G__26353__a[G__26353__i] = arguments[G__26353__i + 3]; ++G__26353__i;}
  args = new cljs.core.IndexedSeq(G__26353__a,0);
} 
return G__26352__delegate.call(this,x,y,z,args);};
G__26352.cljs$lang$maxFixedArity = 3;
G__26352.cljs$lang$applyTo = (function (arglist__26354){
var x = cljs.core.first(arglist__26354);
arglist__26354 = cljs.core.next(arglist__26354);
var y = cljs.core.first(arglist__26354);
arglist__26354 = cljs.core.next(arglist__26354);
var z = cljs.core.first(arglist__26354);
var args = cljs.core.rest(arglist__26354);
return G__26352__delegate(x,y,z,args);
});
G__26352.cljs$core$IFn$_invoke$arity$variadic = G__26352__delegate;
return G__26352;
})()
;
G__26351 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__26351__0.call(this);
case 1:
return G__26351__1.call(this,x);
case 2:
return G__26351__2.call(this,x,y);
case 3:
return G__26351__3.call(this,x,y,z);
default:
var G__26355 = null;
if (arguments.length > 3) {
var G__26356__i = 0, G__26356__a = new Array(arguments.length -  3);
while (G__26356__i < G__26356__a.length) {G__26356__a[G__26356__i] = arguments[G__26356__i + 3]; ++G__26356__i;}
G__26355 = new cljs.core.IndexedSeq(G__26356__a,0);
}
return G__26351__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26355);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26351.cljs$lang$maxFixedArity = 3;
G__26351.cljs$lang$applyTo = G__26351__4.cljs$lang$applyTo;
G__26351.cljs$core$IFn$_invoke$arity$0 = G__26351__0;
G__26351.cljs$core$IFn$_invoke$arity$1 = G__26351__1;
G__26351.cljs$core$IFn$_invoke$arity$2 = G__26351__2;
G__26351.cljs$core$IFn$_invoke$arity$3 = G__26351__3;
G__26351.cljs$core$IFn$_invoke$arity$variadic = G__26351__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26351;
})()
});
var comp__4 = (function() { 
var G__26357__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__26358__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__26359 = cljs.core.first(fs__$2).call(null,ret);
var G__26360 = cljs.core.next(fs__$2);
ret = G__26359;
fs__$2 = G__26360;
continue;
} else {
return ret;
}
break;
}
};
var G__26358 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__26361__i = 0, G__26361__a = new Array(arguments.length -  0);
while (G__26361__i < G__26361__a.length) {G__26361__a[G__26361__i] = arguments[G__26361__i + 0]; ++G__26361__i;}
  args = new cljs.core.IndexedSeq(G__26361__a,0);
} 
return G__26358__delegate.call(this,args);};
G__26358.cljs$lang$maxFixedArity = 0;
G__26358.cljs$lang$applyTo = (function (arglist__26362){
var args = cljs.core.seq(arglist__26362);
return G__26358__delegate(args);
});
G__26358.cljs$core$IFn$_invoke$arity$variadic = G__26358__delegate;
return G__26358;
})()
;
;})(fs__$1))
};
var G__26357 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__26363__i = 0, G__26363__a = new Array(arguments.length -  3);
while (G__26363__i < G__26363__a.length) {G__26363__a[G__26363__i] = arguments[G__26363__i + 3]; ++G__26363__i;}
  fs = new cljs.core.IndexedSeq(G__26363__a,0);
} 
return G__26357__delegate.call(this,f1,f2,f3,fs);};
G__26357.cljs$lang$maxFixedArity = 3;
G__26357.cljs$lang$applyTo = (function (arglist__26364){
var f1 = cljs.core.first(arglist__26364);
arglist__26364 = cljs.core.next(arglist__26364);
var f2 = cljs.core.first(arglist__26364);
arglist__26364 = cljs.core.next(arglist__26364);
var f3 = cljs.core.first(arglist__26364);
var fs = cljs.core.rest(arglist__26364);
return G__26357__delegate(f1,f2,f3,fs);
});
G__26357.cljs$core$IFn$_invoke$arity$variadic = G__26357__delegate;
return G__26357;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__26365 = null;
if (arguments.length > 3) {
var G__26366__i = 0, G__26366__a = new Array(arguments.length -  3);
while (G__26366__i < G__26366__a.length) {G__26366__a[G__26366__i] = arguments[G__26366__i + 3]; ++G__26366__i;}
G__26365 = new cljs.core.IndexedSeq(G__26366__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__26365);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__26451 = null;
var G__26451__0 = (function (){
var G__26409 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26409) : f.call(null,G__26409));
});
var G__26451__1 = (function (x){
var G__26410 = arg1;
var G__26411 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26410,G__26411) : f.call(null,G__26410,G__26411));
});
var G__26451__2 = (function (x,y){
var G__26412 = arg1;
var G__26413 = x;
var G__26414 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26412,G__26413,G__26414) : f.call(null,G__26412,G__26413,G__26414));
});
var G__26451__3 = (function (x,y,z){
var G__26415 = arg1;
var G__26416 = x;
var G__26417 = y;
var G__26418 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26415,G__26416,G__26417,G__26418) : f.call(null,G__26415,G__26416,G__26417,G__26418));
});
var G__26451__4 = (function() { 
var G__26452__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__26452 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26453__i = 0, G__26453__a = new Array(arguments.length -  3);
while (G__26453__i < G__26453__a.length) {G__26453__a[G__26453__i] = arguments[G__26453__i + 3]; ++G__26453__i;}
  args = new cljs.core.IndexedSeq(G__26453__a,0);
} 
return G__26452__delegate.call(this,x,y,z,args);};
G__26452.cljs$lang$maxFixedArity = 3;
G__26452.cljs$lang$applyTo = (function (arglist__26454){
var x = cljs.core.first(arglist__26454);
arglist__26454 = cljs.core.next(arglist__26454);
var y = cljs.core.first(arglist__26454);
arglist__26454 = cljs.core.next(arglist__26454);
var z = cljs.core.first(arglist__26454);
var args = cljs.core.rest(arglist__26454);
return G__26452__delegate(x,y,z,args);
});
G__26452.cljs$core$IFn$_invoke$arity$variadic = G__26452__delegate;
return G__26452;
})()
;
G__26451 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__26451__0.call(this);
case 1:
return G__26451__1.call(this,x);
case 2:
return G__26451__2.call(this,x,y);
case 3:
return G__26451__3.call(this,x,y,z);
default:
var G__26455 = null;
if (arguments.length > 3) {
var G__26456__i = 0, G__26456__a = new Array(arguments.length -  3);
while (G__26456__i < G__26456__a.length) {G__26456__a[G__26456__i] = arguments[G__26456__i + 3]; ++G__26456__i;}
G__26455 = new cljs.core.IndexedSeq(G__26456__a,0);
}
return G__26451__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26455);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26451.cljs$lang$maxFixedArity = 3;
G__26451.cljs$lang$applyTo = G__26451__4.cljs$lang$applyTo;
G__26451.cljs$core$IFn$_invoke$arity$0 = G__26451__0;
G__26451.cljs$core$IFn$_invoke$arity$1 = G__26451__1;
G__26451.cljs$core$IFn$_invoke$arity$2 = G__26451__2;
G__26451.cljs$core$IFn$_invoke$arity$3 = G__26451__3;
G__26451.cljs$core$IFn$_invoke$arity$variadic = G__26451__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26451;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__26457 = null;
var G__26457__0 = (function (){
var G__26419 = arg1;
var G__26420 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26419,G__26420) : f.call(null,G__26419,G__26420));
});
var G__26457__1 = (function (x){
var G__26421 = arg1;
var G__26422 = arg2;
var G__26423 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26421,G__26422,G__26423) : f.call(null,G__26421,G__26422,G__26423));
});
var G__26457__2 = (function (x,y){
var G__26424 = arg1;
var G__26425 = arg2;
var G__26426 = x;
var G__26427 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26424,G__26425,G__26426,G__26427) : f.call(null,G__26424,G__26425,G__26426,G__26427));
});
var G__26457__3 = (function (x,y,z){
var G__26428 = arg1;
var G__26429 = arg2;
var G__26430 = x;
var G__26431 = y;
var G__26432 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__26428,G__26429,G__26430,G__26431,G__26432) : f.call(null,G__26428,G__26429,G__26430,G__26431,G__26432));
});
var G__26457__4 = (function() { 
var G__26458__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__26458 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26459__i = 0, G__26459__a = new Array(arguments.length -  3);
while (G__26459__i < G__26459__a.length) {G__26459__a[G__26459__i] = arguments[G__26459__i + 3]; ++G__26459__i;}
  args = new cljs.core.IndexedSeq(G__26459__a,0);
} 
return G__26458__delegate.call(this,x,y,z,args);};
G__26458.cljs$lang$maxFixedArity = 3;
G__26458.cljs$lang$applyTo = (function (arglist__26460){
var x = cljs.core.first(arglist__26460);
arglist__26460 = cljs.core.next(arglist__26460);
var y = cljs.core.first(arglist__26460);
arglist__26460 = cljs.core.next(arglist__26460);
var z = cljs.core.first(arglist__26460);
var args = cljs.core.rest(arglist__26460);
return G__26458__delegate(x,y,z,args);
});
G__26458.cljs$core$IFn$_invoke$arity$variadic = G__26458__delegate;
return G__26458;
})()
;
G__26457 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__26457__0.call(this);
case 1:
return G__26457__1.call(this,x);
case 2:
return G__26457__2.call(this,x,y);
case 3:
return G__26457__3.call(this,x,y,z);
default:
var G__26461 = null;
if (arguments.length > 3) {
var G__26462__i = 0, G__26462__a = new Array(arguments.length -  3);
while (G__26462__i < G__26462__a.length) {G__26462__a[G__26462__i] = arguments[G__26462__i + 3]; ++G__26462__i;}
G__26461 = new cljs.core.IndexedSeq(G__26462__a,0);
}
return G__26457__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26461);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26457.cljs$lang$maxFixedArity = 3;
G__26457.cljs$lang$applyTo = G__26457__4.cljs$lang$applyTo;
G__26457.cljs$core$IFn$_invoke$arity$0 = G__26457__0;
G__26457.cljs$core$IFn$_invoke$arity$1 = G__26457__1;
G__26457.cljs$core$IFn$_invoke$arity$2 = G__26457__2;
G__26457.cljs$core$IFn$_invoke$arity$3 = G__26457__3;
G__26457.cljs$core$IFn$_invoke$arity$variadic = G__26457__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26457;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__26463 = null;
var G__26463__0 = (function (){
var G__26433 = arg1;
var G__26434 = arg2;
var G__26435 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26433,G__26434,G__26435) : f.call(null,G__26433,G__26434,G__26435));
});
var G__26463__1 = (function (x){
var G__26436 = arg1;
var G__26437 = arg2;
var G__26438 = arg3;
var G__26439 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26436,G__26437,G__26438,G__26439) : f.call(null,G__26436,G__26437,G__26438,G__26439));
});
var G__26463__2 = (function (x,y){
var G__26440 = arg1;
var G__26441 = arg2;
var G__26442 = arg3;
var G__26443 = x;
var G__26444 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__26440,G__26441,G__26442,G__26443,G__26444) : f.call(null,G__26440,G__26441,G__26442,G__26443,G__26444));
});
var G__26463__3 = (function (x,y,z){
var G__26445 = arg1;
var G__26446 = arg2;
var G__26447 = arg3;
var G__26448 = x;
var G__26449 = y;
var G__26450 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__26445,G__26446,G__26447,G__26448,G__26449,G__26450) : f.call(null,G__26445,G__26446,G__26447,G__26448,G__26449,G__26450));
});
var G__26463__4 = (function() { 
var G__26464__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__26464 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26465__i = 0, G__26465__a = new Array(arguments.length -  3);
while (G__26465__i < G__26465__a.length) {G__26465__a[G__26465__i] = arguments[G__26465__i + 3]; ++G__26465__i;}
  args = new cljs.core.IndexedSeq(G__26465__a,0);
} 
return G__26464__delegate.call(this,x,y,z,args);};
G__26464.cljs$lang$maxFixedArity = 3;
G__26464.cljs$lang$applyTo = (function (arglist__26466){
var x = cljs.core.first(arglist__26466);
arglist__26466 = cljs.core.next(arglist__26466);
var y = cljs.core.first(arglist__26466);
arglist__26466 = cljs.core.next(arglist__26466);
var z = cljs.core.first(arglist__26466);
var args = cljs.core.rest(arglist__26466);
return G__26464__delegate(x,y,z,args);
});
G__26464.cljs$core$IFn$_invoke$arity$variadic = G__26464__delegate;
return G__26464;
})()
;
G__26463 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__26463__0.call(this);
case 1:
return G__26463__1.call(this,x);
case 2:
return G__26463__2.call(this,x,y);
case 3:
return G__26463__3.call(this,x,y,z);
default:
var G__26467 = null;
if (arguments.length > 3) {
var G__26468__i = 0, G__26468__a = new Array(arguments.length -  3);
while (G__26468__i < G__26468__a.length) {G__26468__a[G__26468__i] = arguments[G__26468__i + 3]; ++G__26468__i;}
G__26467 = new cljs.core.IndexedSeq(G__26468__a,0);
}
return G__26463__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26467);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26463.cljs$lang$maxFixedArity = 3;
G__26463.cljs$lang$applyTo = G__26463__4.cljs$lang$applyTo;
G__26463.cljs$core$IFn$_invoke$arity$0 = G__26463__0;
G__26463.cljs$core$IFn$_invoke$arity$1 = G__26463__1;
G__26463.cljs$core$IFn$_invoke$arity$2 = G__26463__2;
G__26463.cljs$core$IFn$_invoke$arity$3 = G__26463__3;
G__26463.cljs$core$IFn$_invoke$arity$variadic = G__26463__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26463;
})()
});
var partial__5 = (function() { 
var G__26469__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__26470__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__26470 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__26471__i = 0, G__26471__a = new Array(arguments.length -  0);
while (G__26471__i < G__26471__a.length) {G__26471__a[G__26471__i] = arguments[G__26471__i + 0]; ++G__26471__i;}
  args = new cljs.core.IndexedSeq(G__26471__a,0);
} 
return G__26470__delegate.call(this,args);};
G__26470.cljs$lang$maxFixedArity = 0;
G__26470.cljs$lang$applyTo = (function (arglist__26472){
var args = cljs.core.seq(arglist__26472);
return G__26470__delegate(args);
});
G__26470.cljs$core$IFn$_invoke$arity$variadic = G__26470__delegate;
return G__26470;
})()
;
};
var G__26469 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__26473__i = 0, G__26473__a = new Array(arguments.length -  4);
while (G__26473__i < G__26473__a.length) {G__26473__a[G__26473__i] = arguments[G__26473__i + 4]; ++G__26473__i;}
  more = new cljs.core.IndexedSeq(G__26473__a,0);
} 
return G__26469__delegate.call(this,f,arg1,arg2,arg3,more);};
G__26469.cljs$lang$maxFixedArity = 4;
G__26469.cljs$lang$applyTo = (function (arglist__26474){
var f = cljs.core.first(arglist__26474);
arglist__26474 = cljs.core.next(arglist__26474);
var arg1 = cljs.core.first(arglist__26474);
arglist__26474 = cljs.core.next(arglist__26474);
var arg2 = cljs.core.first(arglist__26474);
arglist__26474 = cljs.core.next(arglist__26474);
var arg3 = cljs.core.first(arglist__26474);
var more = cljs.core.rest(arglist__26474);
return G__26469__delegate(f,arg1,arg2,arg3,more);
});
G__26469.cljs$core$IFn$_invoke$arity$variadic = G__26469__delegate;
return G__26469;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__26475 = null;
if (arguments.length > 4) {
var G__26476__i = 0, G__26476__a = new Array(arguments.length -  4);
while (G__26476__i < G__26476__a.length) {G__26476__a[G__26476__i] = arguments[G__26476__i + 4]; ++G__26476__i;}
G__26475 = new cljs.core.IndexedSeq(G__26476__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__26475);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__26509 = null;
var G__26509__1 = (function (a){
var G__26493 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26493) : f.call(null,G__26493));
});
var G__26509__2 = (function (a,b){
var G__26494 = (((a == null))?x:a);
var G__26495 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26494,G__26495) : f.call(null,G__26494,G__26495));
});
var G__26509__3 = (function (a,b,c){
var G__26496 = (((a == null))?x:a);
var G__26497 = b;
var G__26498 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26496,G__26497,G__26498) : f.call(null,G__26496,G__26497,G__26498));
});
var G__26509__4 = (function() { 
var G__26510__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__26510 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__26511__i = 0, G__26511__a = new Array(arguments.length -  3);
while (G__26511__i < G__26511__a.length) {G__26511__a[G__26511__i] = arguments[G__26511__i + 3]; ++G__26511__i;}
  ds = new cljs.core.IndexedSeq(G__26511__a,0);
} 
return G__26510__delegate.call(this,a,b,c,ds);};
G__26510.cljs$lang$maxFixedArity = 3;
G__26510.cljs$lang$applyTo = (function (arglist__26512){
var a = cljs.core.first(arglist__26512);
arglist__26512 = cljs.core.next(arglist__26512);
var b = cljs.core.first(arglist__26512);
arglist__26512 = cljs.core.next(arglist__26512);
var c = cljs.core.first(arglist__26512);
var ds = cljs.core.rest(arglist__26512);
return G__26510__delegate(a,b,c,ds);
});
G__26510.cljs$core$IFn$_invoke$arity$variadic = G__26510__delegate;
return G__26510;
})()
;
G__26509 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__26509__1.call(this,a);
case 2:
return G__26509__2.call(this,a,b);
case 3:
return G__26509__3.call(this,a,b,c);
default:
var G__26513 = null;
if (arguments.length > 3) {
var G__26514__i = 0, G__26514__a = new Array(arguments.length -  3);
while (G__26514__i < G__26514__a.length) {G__26514__a[G__26514__i] = arguments[G__26514__i + 3]; ++G__26514__i;}
G__26513 = new cljs.core.IndexedSeq(G__26514__a,0);
}
return G__26509__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__26513);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26509.cljs$lang$maxFixedArity = 3;
G__26509.cljs$lang$applyTo = G__26509__4.cljs$lang$applyTo;
G__26509.cljs$core$IFn$_invoke$arity$1 = G__26509__1;
G__26509.cljs$core$IFn$_invoke$arity$2 = G__26509__2;
G__26509.cljs$core$IFn$_invoke$arity$3 = G__26509__3;
G__26509.cljs$core$IFn$_invoke$arity$variadic = G__26509__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26509;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__26515 = null;
var G__26515__2 = (function (a,b){
var G__26499 = (((a == null))?x:a);
var G__26500 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26499,G__26500) : f.call(null,G__26499,G__26500));
});
var G__26515__3 = (function (a,b,c){
var G__26501 = (((a == null))?x:a);
var G__26502 = (((b == null))?y:b);
var G__26503 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26501,G__26502,G__26503) : f.call(null,G__26501,G__26502,G__26503));
});
var G__26515__4 = (function() { 
var G__26516__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__26516 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__26517__i = 0, G__26517__a = new Array(arguments.length -  3);
while (G__26517__i < G__26517__a.length) {G__26517__a[G__26517__i] = arguments[G__26517__i + 3]; ++G__26517__i;}
  ds = new cljs.core.IndexedSeq(G__26517__a,0);
} 
return G__26516__delegate.call(this,a,b,c,ds);};
G__26516.cljs$lang$maxFixedArity = 3;
G__26516.cljs$lang$applyTo = (function (arglist__26518){
var a = cljs.core.first(arglist__26518);
arglist__26518 = cljs.core.next(arglist__26518);
var b = cljs.core.first(arglist__26518);
arglist__26518 = cljs.core.next(arglist__26518);
var c = cljs.core.first(arglist__26518);
var ds = cljs.core.rest(arglist__26518);
return G__26516__delegate(a,b,c,ds);
});
G__26516.cljs$core$IFn$_invoke$arity$variadic = G__26516__delegate;
return G__26516;
})()
;
G__26515 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__26515__2.call(this,a,b);
case 3:
return G__26515__3.call(this,a,b,c);
default:
var G__26519 = null;
if (arguments.length > 3) {
var G__26520__i = 0, G__26520__a = new Array(arguments.length -  3);
while (G__26520__i < G__26520__a.length) {G__26520__a[G__26520__i] = arguments[G__26520__i + 3]; ++G__26520__i;}
G__26519 = new cljs.core.IndexedSeq(G__26520__a,0);
}
return G__26515__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__26519);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26515.cljs$lang$maxFixedArity = 3;
G__26515.cljs$lang$applyTo = G__26515__4.cljs$lang$applyTo;
G__26515.cljs$core$IFn$_invoke$arity$2 = G__26515__2;
G__26515.cljs$core$IFn$_invoke$arity$3 = G__26515__3;
G__26515.cljs$core$IFn$_invoke$arity$variadic = G__26515__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26515;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__26521 = null;
var G__26521__2 = (function (a,b){
var G__26504 = (((a == null))?x:a);
var G__26505 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26504,G__26505) : f.call(null,G__26504,G__26505));
});
var G__26521__3 = (function (a,b,c){
var G__26506 = (((a == null))?x:a);
var G__26507 = (((b == null))?y:b);
var G__26508 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26506,G__26507,G__26508) : f.call(null,G__26506,G__26507,G__26508));
});
var G__26521__4 = (function() { 
var G__26522__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__26522 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__26523__i = 0, G__26523__a = new Array(arguments.length -  3);
while (G__26523__i < G__26523__a.length) {G__26523__a[G__26523__i] = arguments[G__26523__i + 3]; ++G__26523__i;}
  ds = new cljs.core.IndexedSeq(G__26523__a,0);
} 
return G__26522__delegate.call(this,a,b,c,ds);};
G__26522.cljs$lang$maxFixedArity = 3;
G__26522.cljs$lang$applyTo = (function (arglist__26524){
var a = cljs.core.first(arglist__26524);
arglist__26524 = cljs.core.next(arglist__26524);
var b = cljs.core.first(arglist__26524);
arglist__26524 = cljs.core.next(arglist__26524);
var c = cljs.core.first(arglist__26524);
var ds = cljs.core.rest(arglist__26524);
return G__26522__delegate(a,b,c,ds);
});
G__26522.cljs$core$IFn$_invoke$arity$variadic = G__26522__delegate;
return G__26522;
})()
;
G__26521 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__26521__2.call(this,a,b);
case 3:
return G__26521__3.call(this,a,b,c);
default:
var G__26525 = null;
if (arguments.length > 3) {
var G__26526__i = 0, G__26526__a = new Array(arguments.length -  3);
while (G__26526__i < G__26526__a.length) {G__26526__a[G__26526__i] = arguments[G__26526__i + 3]; ++G__26526__i;}
G__26525 = new cljs.core.IndexedSeq(G__26526__a,0);
}
return G__26521__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__26525);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26521.cljs$lang$maxFixedArity = 3;
G__26521.cljs$lang$applyTo = G__26521__4.cljs$lang$applyTo;
G__26521.cljs$core$IFn$_invoke$arity$2 = G__26521__2;
G__26521.cljs$core$IFn$_invoke$arity$3 = G__26521__3;
G__26521.cljs$core$IFn$_invoke$arity$variadic = G__26521__4.cljs$core$IFn$_invoke$arity$variadic;
return G__26521;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__26557 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__26557) : cljs.core.volatile_BANG_.call(null,G__26557));
})();
return ((function (i){
return (function() {
var G__26587 = null;
var G__26587__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26587__1 = (function (result){
var G__26558 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26558) : rf.call(null,G__26558));
});
var G__26587__2 = (function (result,input){
var G__26559 = result;
var G__26560 = (function (){var G__26561 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__26562 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26561,G__26562) : f.call(null,G__26561,G__26562));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26559,G__26560) : rf.call(null,G__26559,G__26560));
});
G__26587 = function(result,input){
switch(arguments.length){
case 0:
return G__26587__0.call(this);
case 1:
return G__26587__1.call(this,result);
case 2:
return G__26587__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26587.cljs$core$IFn$_invoke$arity$0 = G__26587__0;
G__26587.cljs$core$IFn$_invoke$arity$1 = G__26587__1;
G__26587.cljs$core$IFn$_invoke$arity$2 = G__26587__2;
return G__26587;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__18505__auto___26588 = size;
var i_26589 = (0);
while(true){
if((i_26589 < n__18505__auto___26588)){
cljs.core.chunk_append(b,(function (){var G__26583 = (idx + i_26589);
var G__26584 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_26589);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26583,G__26584) : f.call(null,G__26583,G__26584));
})());

var G__26590 = (i_26589 + (1));
i_26589 = G__26590;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__26585 = idx;
var G__26586 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26585,G__26586) : f.call(null,G__26585,G__26586));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__26609 = null;
var G__26609__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26609__1 = (function (result){
var G__26603 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26603) : rf.call(null,G__26603));
});
var G__26609__2 = (function (result,input){
var v = (function (){var G__26604 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26604) : f.call(null,G__26604));
})();
if((v == null)){
return result;
} else {
var G__26605 = result;
var G__26606 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26605,G__26606) : rf.call(null,G__26605,G__26606));
}
});
G__26609 = function(result,input){
switch(arguments.length){
case 0:
return G__26609__0.call(this);
case 1:
return G__26609__1.call(this,result);
case 2:
return G__26609__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26609.cljs$core$IFn$_invoke$arity$0 = G__26609__0;
G__26609.cljs$core$IFn$_invoke$arity$1 = G__26609__1;
G__26609.cljs$core$IFn$_invoke$arity$2 = G__26609__2;
return G__26609;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__18505__auto___26610 = size;
var i_26611 = (0);
while(true){
if((i_26611 < n__18505__auto___26610)){
var x_26612 = (function (){var G__26607 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_26611);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26607) : f.call(null,G__26607));
})();
if((x_26612 == null)){
} else {
cljs.core.chunk_append(b,x_26612);
}

var G__26613 = (i_26611 + (1));
i_26611 = G__26613;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__26608 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26608) : f.call(null,G__26608));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__26614 = this$__$1;
return goog.getUid(G__26614);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__26615 = cljs.core.seq(self__.watches);
var chunk__26616 = null;
var count__26617 = (0);
var i__26618 = (0);
while(true){
if((i__26618 < count__26617)){
var vec__26619 = chunk__26616.cljs$core$IIndexed$_nth$arity$2(null,i__26618);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26619,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26619,(1),null);
var G__26620_26629 = key;
var G__26621_26630 = this$__$1;
var G__26622_26631 = oldval;
var G__26623_26632 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26620_26629,G__26621_26630,G__26622_26631,G__26623_26632) : f.call(null,G__26620_26629,G__26621_26630,G__26622_26631,G__26623_26632));

var G__26633 = seq__26615;
var G__26634 = chunk__26616;
var G__26635 = count__26617;
var G__26636 = (i__26618 + (1));
seq__26615 = G__26633;
chunk__26616 = G__26634;
count__26617 = G__26635;
i__26618 = G__26636;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__26615);
if(temp__4126__auto__){
var seq__26615__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__26615__$1)){
var c__18405__auto__ = cljs.core.chunk_first(seq__26615__$1);
var G__26637 = cljs.core.chunk_rest(seq__26615__$1);
var G__26638 = c__18405__auto__;
var G__26639 = cljs.core.count(c__18405__auto__);
var G__26640 = (0);
seq__26615 = G__26637;
chunk__26616 = G__26638;
count__26617 = G__26639;
i__26618 = G__26640;
continue;
} else {
var vec__26624 = cljs.core.first(seq__26615__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26624,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26624,(1),null);
var G__26625_26641 = key;
var G__26626_26642 = this$__$1;
var G__26627_26643 = oldval;
var G__26628_26644 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26625_26641,G__26626_26642,G__26627_26643,G__26628_26644) : f.call(null,G__26625_26641,G__26626_26642,G__26627_26643,G__26628_26644));

var G__26645 = cljs.core.next(seq__26615__$1);
var G__26646 = null;
var G__26647 = (0);
var G__26648 = (0);
seq__26615 = G__26645;
chunk__26616 = G__26646;
count__26617 = G__26647;
i__26618 = G__26648;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__26652__delegate = function (x,p__26649){
var map__26651 = p__26649;
var map__26651__$1 = ((cljs.core.seq_QMARK_(map__26651))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__26651):map__26651);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__26651__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__26651__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__26652 = function (x,var_args){
var p__26649 = null;
if (arguments.length > 1) {
var G__26653__i = 0, G__26653__a = new Array(arguments.length -  1);
while (G__26653__i < G__26653__a.length) {G__26653__a[G__26653__i] = arguments[G__26653__i + 1]; ++G__26653__i;}
  p__26649 = new cljs.core.IndexedSeq(G__26653__a,0);
} 
return G__26652__delegate.call(this,x,p__26649);};
G__26652.cljs$lang$maxFixedArity = 1;
G__26652.cljs$lang$applyTo = (function (arglist__26654){
var x = cljs.core.first(arglist__26654);
var p__26649 = cljs.core.rest(arglist__26654);
return G__26652__delegate(x,p__26649);
});
G__26652.cljs$core$IFn$_invoke$arity$variadic = G__26652__delegate;
return G__26652;
})()
;
atom = function(x,var_args){
var p__26649 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__26655 = null;
if (arguments.length > 1) {
var G__26656__i = 0, G__26656__a = new Array(arguments.length -  1);
while (G__26656__i < G__26656__a.length) {G__26656__a[G__26656__i] = arguments[G__26656__i + 1]; ++G__26656__i;}
G__26655 = new cljs.core.IndexedSeq(G__26656__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__26655);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__26659 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__26659) : validate.call(null,G__26659));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__26660 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__26660) : cljs.core.pr_str.call(null,G__26660));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__26667 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26667) : f.call(null,G__26667));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__26668 = a.state;
var G__26669 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26668,G__26669) : f.call(null,G__26668,G__26669));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__26670 = a.state;
var G__26671 = x;
var G__26672 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26670,G__26671,G__26672) : f.call(null,G__26670,G__26671,G__26672));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__26673__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__26673 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__26674__i = 0, G__26674__a = new Array(arguments.length -  4);
while (G__26674__i < G__26674__a.length) {G__26674__a[G__26674__i] = arguments[G__26674__i + 4]; ++G__26674__i;}
  more = new cljs.core.IndexedSeq(G__26674__a,0);
} 
return G__26673__delegate.call(this,a,f,x,y,more);};
G__26673.cljs$lang$maxFixedArity = 4;
G__26673.cljs$lang$applyTo = (function (arglist__26675){
var a = cljs.core.first(arglist__26675);
arglist__26675 = cljs.core.next(arglist__26675);
var f = cljs.core.first(arglist__26675);
arglist__26675 = cljs.core.next(arglist__26675);
var x = cljs.core.first(arglist__26675);
arglist__26675 = cljs.core.next(arglist__26675);
var y = cljs.core.first(arglist__26675);
var more = cljs.core.rest(arglist__26675);
return G__26673__delegate(a,f,x,y,more);
});
G__26673.cljs$core$IFn$_invoke$arity$variadic = G__26673__delegate;
return G__26673;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__26676 = null;
if (arguments.length > 4) {
var G__26677__i = 0, G__26677__a = new Array(arguments.length -  4);
while (G__26677__i < G__26677__a.length) {G__26677__a[G__26677__i] = arguments[G__26677__i + 4]; ++G__26677__i;}
G__26676 = new cljs.core.IndexedSeq(G__26677__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__26676);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__26744 = null;
var G__26744__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26744__1 = (function (result){
var G__26711 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26711) : rf.call(null,G__26711));
});
var G__26744__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__26712 = i;
var G__26713 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26712,G__26713) : f.call(null,G__26712,G__26713));
})();
if((v == null)){
return result;
} else {
var G__26714 = result;
var G__26715 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26714,G__26715) : rf.call(null,G__26714,G__26715));
}
});
G__26744 = function(result,input){
switch(arguments.length){
case 0:
return G__26744__0.call(this);
case 1:
return G__26744__1.call(this,result);
case 2:
return G__26744__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26744.cljs$core$IFn$_invoke$arity$0 = G__26744__0;
G__26744.cljs$core$IFn$_invoke$arity$1 = G__26744__1;
G__26744.cljs$core$IFn$_invoke$arity$2 = G__26744__2;
return G__26744;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__18505__auto___26745 = size;
var i_26746 = (0);
while(true){
if((i_26746 < n__18505__auto___26745)){
var x_26747 = (function (){var G__26740 = (idx + i_26746);
var G__26741 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_26746);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26740,G__26741) : f.call(null,G__26740,G__26741));
})();
if((x_26747 == null)){
} else {
cljs.core.chunk_append(b,x_26747);
}

var G__26748 = (i_26746 + (1));
i_26746 = G__26748;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__26742 = idx;
var G__26743 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26742,G__26743) : f.call(null,G__26742,G__26743));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__26962 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26962) : p.call(null,G__26962));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__17606__auto__ = (function (){var G__26964 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26964) : p.call(null,G__26964));
})();
if(cljs.core.truth_(and__17606__auto__)){
var G__26965 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26965) : p.call(null,G__26965));
} else {
return and__17606__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__17606__auto__ = (function (){var G__26967 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26967) : p.call(null,G__26967));
})();
if(cljs.core.truth_(and__17606__auto__)){
var and__17606__auto____$1 = (function (){var G__26969 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26969) : p.call(null,G__26969));
})();
if(cljs.core.truth_(and__17606__auto____$1)){
var G__26970 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26970) : p.call(null,G__26970));
} else {
return and__17606__auto____$1;
}
} else {
return and__17606__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__27139__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__27139 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27140__i = 0, G__27140__a = new Array(arguments.length -  3);
while (G__27140__i < G__27140__a.length) {G__27140__a[G__27140__i] = arguments[G__27140__i + 3]; ++G__27140__i;}
  args = new cljs.core.IndexedSeq(G__27140__a,0);
} 
return G__27139__delegate.call(this,x,y,z,args);};
G__27139.cljs$lang$maxFixedArity = 3;
G__27139.cljs$lang$applyTo = (function (arglist__27141){
var x = cljs.core.first(arglist__27141);
arglist__27141 = cljs.core.next(arglist__27141);
var y = cljs.core.first(arglist__27141);
arglist__27141 = cljs.core.next(arglist__27141);
var z = cljs.core.first(arglist__27141);
var args = cljs.core.rest(arglist__27141);
return G__27139__delegate(x,y,z,args);
});
G__27139.cljs$core$IFn$_invoke$arity$variadic = G__27139__delegate;
return G__27139;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__27142 = null;
if (arguments.length > 3) {
var G__27143__i = 0, G__27143__a = new Array(arguments.length -  3);
while (G__27143__i < G__27143__a.length) {G__27143__a[G__27143__i] = arguments[G__27143__i + 3]; ++G__27143__i;}
G__27142 = new cljs.core.IndexedSeq(G__27143__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27142);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__17606__auto__ = (function (){var G__27002 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27002) : p1.call(null,G__27002));
})();
if(cljs.core.truth_(and__17606__auto__)){
var G__27003 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27003) : p2.call(null,G__27003));
} else {
return and__17606__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__17606__auto__ = (function (){var G__27005 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27005) : p1.call(null,G__27005));
})();
if(cljs.core.truth_(and__17606__auto__)){
var and__17606__auto____$1 = (function (){var G__27007 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27007) : p1.call(null,G__27007));
})();
if(cljs.core.truth_(and__17606__auto____$1)){
var and__17606__auto____$2 = (function (){var G__27009 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27009) : p2.call(null,G__27009));
})();
if(cljs.core.truth_(and__17606__auto____$2)){
var G__27010 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27010) : p2.call(null,G__27010));
} else {
return and__17606__auto____$2;
}
} else {
return and__17606__auto____$1;
}
} else {
return and__17606__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__17606__auto__ = (function (){var G__27012 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27012) : p1.call(null,G__27012));
})();
if(cljs.core.truth_(and__17606__auto__)){
var and__17606__auto____$1 = (function (){var G__27014 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27014) : p1.call(null,G__27014));
})();
if(cljs.core.truth_(and__17606__auto____$1)){
var and__17606__auto____$2 = (function (){var G__27016 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27016) : p1.call(null,G__27016));
})();
if(cljs.core.truth_(and__17606__auto____$2)){
var and__17606__auto____$3 = (function (){var G__27018 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27018) : p2.call(null,G__27018));
})();
if(cljs.core.truth_(and__17606__auto____$3)){
var and__17606__auto____$4 = (function (){var G__27020 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27020) : p2.call(null,G__27020));
})();
if(cljs.core.truth_(and__17606__auto____$4)){
var G__27021 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27021) : p2.call(null,G__27021));
} else {
return and__17606__auto____$4;
}
} else {
return and__17606__auto____$3;
}
} else {
return and__17606__auto____$2;
}
} else {
return and__17606__auto____$1;
}
} else {
return and__17606__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__27144__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__26749_SHARP_){
var and__17606__auto__ = (function (){var G__27026 = p1__26749_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27026) : p1.call(null,G__27026));
})();
if(cljs.core.truth_(and__17606__auto__)){
var G__27027 = p1__26749_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27027) : p2.call(null,G__27027));
} else {
return and__17606__auto__;
}
}),args)));
};
var G__27144 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27145__i = 0, G__27145__a = new Array(arguments.length -  3);
while (G__27145__i < G__27145__a.length) {G__27145__a[G__27145__i] = arguments[G__27145__i + 3]; ++G__27145__i;}
  args = new cljs.core.IndexedSeq(G__27145__a,0);
} 
return G__27144__delegate.call(this,x,y,z,args);};
G__27144.cljs$lang$maxFixedArity = 3;
G__27144.cljs$lang$applyTo = (function (arglist__27146){
var x = cljs.core.first(arglist__27146);
arglist__27146 = cljs.core.next(arglist__27146);
var y = cljs.core.first(arglist__27146);
arglist__27146 = cljs.core.next(arglist__27146);
var z = cljs.core.first(arglist__27146);
var args = cljs.core.rest(arglist__27146);
return G__27144__delegate(x,y,z,args);
});
G__27144.cljs$core$IFn$_invoke$arity$variadic = G__27144__delegate;
return G__27144;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__27147 = null;
if (arguments.length > 3) {
var G__27148__i = 0, G__27148__a = new Array(arguments.length -  3);
while (G__27148__i < G__27148__a.length) {G__27148__a[G__27148__i] = arguments[G__27148__i + 3]; ++G__27148__i;}
G__27147 = new cljs.core.IndexedSeq(G__27148__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27147);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__17606__auto__ = (function (){var G__27073 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27073) : p1.call(null,G__27073));
})();
if(cljs.core.truth_(and__17606__auto__)){
var and__17606__auto____$1 = (function (){var G__27075 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27075) : p2.call(null,G__27075));
})();
if(cljs.core.truth_(and__17606__auto____$1)){
var G__27076 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27076) : p3.call(null,G__27076));
} else {
return and__17606__auto____$1;
}
} else {
return and__17606__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__17606__auto__ = (function (){var G__27078 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27078) : p1.call(null,G__27078));
})();
if(cljs.core.truth_(and__17606__auto__)){
var and__17606__auto____$1 = (function (){var G__27080 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27080) : p2.call(null,G__27080));
})();
if(cljs.core.truth_(and__17606__auto____$1)){
var and__17606__auto____$2 = (function (){var G__27082 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27082) : p3.call(null,G__27082));
})();
if(cljs.core.truth_(and__17606__auto____$2)){
var and__17606__auto____$3 = (function (){var G__27084 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27084) : p1.call(null,G__27084));
})();
if(cljs.core.truth_(and__17606__auto____$3)){
var and__17606__auto____$4 = (function (){var G__27086 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27086) : p2.call(null,G__27086));
})();
if(cljs.core.truth_(and__17606__auto____$4)){
var G__27087 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27087) : p3.call(null,G__27087));
} else {
return and__17606__auto____$4;
}
} else {
return and__17606__auto____$3;
}
} else {
return and__17606__auto____$2;
}
} else {
return and__17606__auto____$1;
}
} else {
return and__17606__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__17606__auto__ = (function (){var G__27089 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27089) : p1.call(null,G__27089));
})();
if(cljs.core.truth_(and__17606__auto__)){
var and__17606__auto____$1 = (function (){var G__27091 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27091) : p2.call(null,G__27091));
})();
if(cljs.core.truth_(and__17606__auto____$1)){
var and__17606__auto____$2 = (function (){var G__27093 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27093) : p3.call(null,G__27093));
})();
if(cljs.core.truth_(and__17606__auto____$2)){
var and__17606__auto____$3 = (function (){var G__27095 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27095) : p1.call(null,G__27095));
})();
if(cljs.core.truth_(and__17606__auto____$3)){
var and__17606__auto____$4 = (function (){var G__27097 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27097) : p2.call(null,G__27097));
})();
if(cljs.core.truth_(and__17606__auto____$4)){
var and__17606__auto____$5 = (function (){var G__27099 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27099) : p3.call(null,G__27099));
})();
if(cljs.core.truth_(and__17606__auto____$5)){
var and__17606__auto____$6 = (function (){var G__27101 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27101) : p1.call(null,G__27101));
})();
if(cljs.core.truth_(and__17606__auto____$6)){
var and__17606__auto____$7 = (function (){var G__27103 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27103) : p2.call(null,G__27103));
})();
if(cljs.core.truth_(and__17606__auto____$7)){
var G__27104 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27104) : p3.call(null,G__27104));
} else {
return and__17606__auto____$7;
}
} else {
return and__17606__auto____$6;
}
} else {
return and__17606__auto____$5;
}
} else {
return and__17606__auto____$4;
}
} else {
return and__17606__auto____$3;
}
} else {
return and__17606__auto____$2;
}
} else {
return and__17606__auto____$1;
}
} else {
return and__17606__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__27149__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__26750_SHARP_){
var and__17606__auto__ = (function (){var G__27111 = p1__26750_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27111) : p1.call(null,G__27111));
})();
if(cljs.core.truth_(and__17606__auto__)){
var and__17606__auto____$1 = (function (){var G__27113 = p1__26750_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27113) : p2.call(null,G__27113));
})();
if(cljs.core.truth_(and__17606__auto____$1)){
var G__27114 = p1__26750_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27114) : p3.call(null,G__27114));
} else {
return and__17606__auto____$1;
}
} else {
return and__17606__auto__;
}
}),args)));
};
var G__27149 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27150__i = 0, G__27150__a = new Array(arguments.length -  3);
while (G__27150__i < G__27150__a.length) {G__27150__a[G__27150__i] = arguments[G__27150__i + 3]; ++G__27150__i;}
  args = new cljs.core.IndexedSeq(G__27150__a,0);
} 
return G__27149__delegate.call(this,x,y,z,args);};
G__27149.cljs$lang$maxFixedArity = 3;
G__27149.cljs$lang$applyTo = (function (arglist__27151){
var x = cljs.core.first(arglist__27151);
arglist__27151 = cljs.core.next(arglist__27151);
var y = cljs.core.first(arglist__27151);
arglist__27151 = cljs.core.next(arglist__27151);
var z = cljs.core.first(arglist__27151);
var args = cljs.core.rest(arglist__27151);
return G__27149__delegate(x,y,z,args);
});
G__27149.cljs$core$IFn$_invoke$arity$variadic = G__27149__delegate;
return G__27149;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__27152 = null;
if (arguments.length > 3) {
var G__27153__i = 0, G__27153__a = new Array(arguments.length -  3);
while (G__27153__i < G__27153__a.length) {G__27153__a[G__27153__i] = arguments[G__27153__i + 3]; ++G__27153__i;}
G__27152 = new cljs.core.IndexedSeq(G__27153__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27152);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__27154__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__26751_SHARP_){
var G__27130 = x;
return (p1__26751_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26751_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27130) : p1__26751_SHARP_.call(null,G__27130));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__26752_SHARP_){
var and__17606__auto__ = (function (){var G__27132 = x;
return (p1__26752_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26752_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27132) : p1__26752_SHARP_.call(null,G__27132));
})();
if(cljs.core.truth_(and__17606__auto__)){
var G__27133 = y;
return (p1__26752_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26752_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27133) : p1__26752_SHARP_.call(null,G__27133));
} else {
return and__17606__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__26753_SHARP_){
var and__17606__auto__ = (function (){var G__27135 = x;
return (p1__26753_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26753_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27135) : p1__26753_SHARP_.call(null,G__27135));
})();
if(cljs.core.truth_(and__17606__auto__)){
var and__17606__auto____$1 = (function (){var G__27137 = y;
return (p1__26753_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26753_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27137) : p1__26753_SHARP_.call(null,G__27137));
})();
if(cljs.core.truth_(and__17606__auto____$1)){
var G__27138 = z;
return (p1__26753_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26753_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27138) : p1__26753_SHARP_.call(null,G__27138));
} else {
return and__17606__auto____$1;
}
} else {
return and__17606__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__27155__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__26754_SHARP_){
return cljs.core.every_QMARK_(p1__26754_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__27155 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27156__i = 0, G__27156__a = new Array(arguments.length -  3);
while (G__27156__i < G__27156__a.length) {G__27156__a[G__27156__i] = arguments[G__27156__i + 3]; ++G__27156__i;}
  args = new cljs.core.IndexedSeq(G__27156__a,0);
} 
return G__27155__delegate.call(this,x,y,z,args);};
G__27155.cljs$lang$maxFixedArity = 3;
G__27155.cljs$lang$applyTo = (function (arglist__27157){
var x = cljs.core.first(arglist__27157);
arglist__27157 = cljs.core.next(arglist__27157);
var y = cljs.core.first(arglist__27157);
arglist__27157 = cljs.core.next(arglist__27157);
var z = cljs.core.first(arglist__27157);
var args = cljs.core.rest(arglist__27157);
return G__27155__delegate(x,y,z,args);
});
G__27155.cljs$core$IFn$_invoke$arity$variadic = G__27155__delegate;
return G__27155;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__27158 = null;
if (arguments.length > 3) {
var G__27159__i = 0, G__27159__a = new Array(arguments.length -  3);
while (G__27159__i < G__27159__a.length) {G__27159__a[G__27159__i] = arguments[G__27159__i + 3]; ++G__27159__i;}
G__27158 = new cljs.core.IndexedSeq(G__27159__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27158);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__27154 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__27160__i = 0, G__27160__a = new Array(arguments.length -  3);
while (G__27160__i < G__27160__a.length) {G__27160__a[G__27160__i] = arguments[G__27160__i + 3]; ++G__27160__i;}
  ps = new cljs.core.IndexedSeq(G__27160__a,0);
} 
return G__27154__delegate.call(this,p1,p2,p3,ps);};
G__27154.cljs$lang$maxFixedArity = 3;
G__27154.cljs$lang$applyTo = (function (arglist__27161){
var p1 = cljs.core.first(arglist__27161);
arglist__27161 = cljs.core.next(arglist__27161);
var p2 = cljs.core.first(arglist__27161);
arglist__27161 = cljs.core.next(arglist__27161);
var p3 = cljs.core.first(arglist__27161);
var ps = cljs.core.rest(arglist__27161);
return G__27154__delegate(p1,p2,p3,ps);
});
G__27154.cljs$core$IFn$_invoke$arity$variadic = G__27154__delegate;
return G__27154;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__27162 = null;
if (arguments.length > 3) {
var G__27163__i = 0, G__27163__a = new Array(arguments.length -  3);
while (G__27163__i < G__27163__a.length) {G__27163__a[G__27163__i] = arguments[G__27163__i + 3]; ++G__27163__i;}
G__27162 = new cljs.core.IndexedSeq(G__27163__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__27162);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__27369 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27369) : p.call(null,G__27369));
});
var sp1__2 = (function (x,y){
var or__17618__auto__ = (function (){var G__27371 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27371) : p.call(null,G__27371));
})();
if(cljs.core.truth_(or__17618__auto__)){
return or__17618__auto__;
} else {
var G__27372 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27372) : p.call(null,G__27372));
}
});
var sp1__3 = (function (x,y,z){
var or__17618__auto__ = (function (){var G__27374 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27374) : p.call(null,G__27374));
})();
if(cljs.core.truth_(or__17618__auto__)){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (function (){var G__27376 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27376) : p.call(null,G__27376));
})();
if(cljs.core.truth_(or__17618__auto____$1)){
return or__17618__auto____$1;
} else {
var G__27377 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__27377) : p.call(null,G__27377));
}
}
});
var sp1__4 = (function() { 
var G__27538__delegate = function (x,y,z,args){
var or__17618__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__17618__auto__)){
return or__17618__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__27538 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27539__i = 0, G__27539__a = new Array(arguments.length -  3);
while (G__27539__i < G__27539__a.length) {G__27539__a[G__27539__i] = arguments[G__27539__i + 3]; ++G__27539__i;}
  args = new cljs.core.IndexedSeq(G__27539__a,0);
} 
return G__27538__delegate.call(this,x,y,z,args);};
G__27538.cljs$lang$maxFixedArity = 3;
G__27538.cljs$lang$applyTo = (function (arglist__27540){
var x = cljs.core.first(arglist__27540);
arglist__27540 = cljs.core.next(arglist__27540);
var y = cljs.core.first(arglist__27540);
arglist__27540 = cljs.core.next(arglist__27540);
var z = cljs.core.first(arglist__27540);
var args = cljs.core.rest(arglist__27540);
return G__27538__delegate(x,y,z,args);
});
G__27538.cljs$core$IFn$_invoke$arity$variadic = G__27538__delegate;
return G__27538;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__27541 = null;
if (arguments.length > 3) {
var G__27542__i = 0, G__27542__a = new Array(arguments.length -  3);
while (G__27542__i < G__27542__a.length) {G__27542__a[G__27542__i] = arguments[G__27542__i + 3]; ++G__27542__i;}
G__27541 = new cljs.core.IndexedSeq(G__27542__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27541);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__17618__auto__ = (function (){var G__27409 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27409) : p1.call(null,G__27409));
})();
if(cljs.core.truth_(or__17618__auto__)){
return or__17618__auto__;
} else {
var G__27410 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27410) : p2.call(null,G__27410));
}
});
var sp2__2 = (function (x,y){
var or__17618__auto__ = (function (){var G__27412 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27412) : p1.call(null,G__27412));
})();
if(cljs.core.truth_(or__17618__auto__)){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (function (){var G__27414 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27414) : p1.call(null,G__27414));
})();
if(cljs.core.truth_(or__17618__auto____$1)){
return or__17618__auto____$1;
} else {
var or__17618__auto____$2 = (function (){var G__27416 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27416) : p2.call(null,G__27416));
})();
if(cljs.core.truth_(or__17618__auto____$2)){
return or__17618__auto____$2;
} else {
var G__27417 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27417) : p2.call(null,G__27417));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__17618__auto__ = (function (){var G__27419 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27419) : p1.call(null,G__27419));
})();
if(cljs.core.truth_(or__17618__auto__)){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (function (){var G__27421 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27421) : p1.call(null,G__27421));
})();
if(cljs.core.truth_(or__17618__auto____$1)){
return or__17618__auto____$1;
} else {
var or__17618__auto____$2 = (function (){var G__27423 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27423) : p1.call(null,G__27423));
})();
if(cljs.core.truth_(or__17618__auto____$2)){
return or__17618__auto____$2;
} else {
var or__17618__auto____$3 = (function (){var G__27425 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27425) : p2.call(null,G__27425));
})();
if(cljs.core.truth_(or__17618__auto____$3)){
return or__17618__auto____$3;
} else {
var or__17618__auto____$4 = (function (){var G__27427 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27427) : p2.call(null,G__27427));
})();
if(cljs.core.truth_(or__17618__auto____$4)){
return or__17618__auto____$4;
} else {
var G__27428 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27428) : p2.call(null,G__27428));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__27543__delegate = function (x,y,z,args){
var or__17618__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__17618__auto__)){
return or__17618__auto__;
} else {
return cljs.core.some(((function (or__17618__auto__){
return (function (p1__27164_SHARP_){
var or__17618__auto____$1 = (function (){var G__27430 = p1__27164_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27430) : p1.call(null,G__27430));
})();
if(cljs.core.truth_(or__17618__auto____$1)){
return or__17618__auto____$1;
} else {
var G__27431 = p1__27164_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27431) : p2.call(null,G__27431));
}
});})(or__17618__auto__))
,args);
}
};
var G__27543 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27544__i = 0, G__27544__a = new Array(arguments.length -  3);
while (G__27544__i < G__27544__a.length) {G__27544__a[G__27544__i] = arguments[G__27544__i + 3]; ++G__27544__i;}
  args = new cljs.core.IndexedSeq(G__27544__a,0);
} 
return G__27543__delegate.call(this,x,y,z,args);};
G__27543.cljs$lang$maxFixedArity = 3;
G__27543.cljs$lang$applyTo = (function (arglist__27545){
var x = cljs.core.first(arglist__27545);
arglist__27545 = cljs.core.next(arglist__27545);
var y = cljs.core.first(arglist__27545);
arglist__27545 = cljs.core.next(arglist__27545);
var z = cljs.core.first(arglist__27545);
var args = cljs.core.rest(arglist__27545);
return G__27543__delegate(x,y,z,args);
});
G__27543.cljs$core$IFn$_invoke$arity$variadic = G__27543__delegate;
return G__27543;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__27546 = null;
if (arguments.length > 3) {
var G__27547__i = 0, G__27547__a = new Array(arguments.length -  3);
while (G__27547__i < G__27547__a.length) {G__27547__a[G__27547__i] = arguments[G__27547__i + 3]; ++G__27547__i;}
G__27546 = new cljs.core.IndexedSeq(G__27547__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27546);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__17618__auto__ = (function (){var G__27477 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27477) : p1.call(null,G__27477));
})();
if(cljs.core.truth_(or__17618__auto__)){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (function (){var G__27479 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27479) : p2.call(null,G__27479));
})();
if(cljs.core.truth_(or__17618__auto____$1)){
return or__17618__auto____$1;
} else {
var G__27480 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27480) : p3.call(null,G__27480));
}
}
});
var sp3__2 = (function (x,y){
var or__17618__auto__ = (function (){var G__27482 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27482) : p1.call(null,G__27482));
})();
if(cljs.core.truth_(or__17618__auto__)){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (function (){var G__27484 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27484) : p2.call(null,G__27484));
})();
if(cljs.core.truth_(or__17618__auto____$1)){
return or__17618__auto____$1;
} else {
var or__17618__auto____$2 = (function (){var G__27486 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27486) : p3.call(null,G__27486));
})();
if(cljs.core.truth_(or__17618__auto____$2)){
return or__17618__auto____$2;
} else {
var or__17618__auto____$3 = (function (){var G__27488 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27488) : p1.call(null,G__27488));
})();
if(cljs.core.truth_(or__17618__auto____$3)){
return or__17618__auto____$3;
} else {
var or__17618__auto____$4 = (function (){var G__27490 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27490) : p2.call(null,G__27490));
})();
if(cljs.core.truth_(or__17618__auto____$4)){
return or__17618__auto____$4;
} else {
var G__27491 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27491) : p3.call(null,G__27491));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__17618__auto__ = (function (){var G__27493 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27493) : p1.call(null,G__27493));
})();
if(cljs.core.truth_(or__17618__auto__)){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (function (){var G__27495 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27495) : p2.call(null,G__27495));
})();
if(cljs.core.truth_(or__17618__auto____$1)){
return or__17618__auto____$1;
} else {
var or__17618__auto____$2 = (function (){var G__27497 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27497) : p3.call(null,G__27497));
})();
if(cljs.core.truth_(or__17618__auto____$2)){
return or__17618__auto____$2;
} else {
var or__17618__auto____$3 = (function (){var G__27499 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27499) : p1.call(null,G__27499));
})();
if(cljs.core.truth_(or__17618__auto____$3)){
return or__17618__auto____$3;
} else {
var or__17618__auto____$4 = (function (){var G__27501 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27501) : p2.call(null,G__27501));
})();
if(cljs.core.truth_(or__17618__auto____$4)){
return or__17618__auto____$4;
} else {
var or__17618__auto____$5 = (function (){var G__27503 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27503) : p3.call(null,G__27503));
})();
if(cljs.core.truth_(or__17618__auto____$5)){
return or__17618__auto____$5;
} else {
var or__17618__auto____$6 = (function (){var G__27505 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27505) : p1.call(null,G__27505));
})();
if(cljs.core.truth_(or__17618__auto____$6)){
return or__17618__auto____$6;
} else {
var or__17618__auto____$7 = (function (){var G__27507 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27507) : p2.call(null,G__27507));
})();
if(cljs.core.truth_(or__17618__auto____$7)){
return or__17618__auto____$7;
} else {
var G__27508 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27508) : p3.call(null,G__27508));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__27548__delegate = function (x,y,z,args){
var or__17618__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__17618__auto__)){
return or__17618__auto__;
} else {
return cljs.core.some(((function (or__17618__auto__){
return (function (p1__27165_SHARP_){
var or__17618__auto____$1 = (function (){var G__27510 = p1__27165_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__27510) : p1.call(null,G__27510));
})();
if(cljs.core.truth_(or__17618__auto____$1)){
return or__17618__auto____$1;
} else {
var or__17618__auto____$2 = (function (){var G__27512 = p1__27165_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__27512) : p2.call(null,G__27512));
})();
if(cljs.core.truth_(or__17618__auto____$2)){
return or__17618__auto____$2;
} else {
var G__27513 = p1__27165_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__27513) : p3.call(null,G__27513));
}
}
});})(or__17618__auto__))
,args);
}
};
var G__27548 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27549__i = 0, G__27549__a = new Array(arguments.length -  3);
while (G__27549__i < G__27549__a.length) {G__27549__a[G__27549__i] = arguments[G__27549__i + 3]; ++G__27549__i;}
  args = new cljs.core.IndexedSeq(G__27549__a,0);
} 
return G__27548__delegate.call(this,x,y,z,args);};
G__27548.cljs$lang$maxFixedArity = 3;
G__27548.cljs$lang$applyTo = (function (arglist__27550){
var x = cljs.core.first(arglist__27550);
arglist__27550 = cljs.core.next(arglist__27550);
var y = cljs.core.first(arglist__27550);
arglist__27550 = cljs.core.next(arglist__27550);
var z = cljs.core.first(arglist__27550);
var args = cljs.core.rest(arglist__27550);
return G__27548__delegate(x,y,z,args);
});
G__27548.cljs$core$IFn$_invoke$arity$variadic = G__27548__delegate;
return G__27548;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__27551 = null;
if (arguments.length > 3) {
var G__27552__i = 0, G__27552__a = new Array(arguments.length -  3);
while (G__27552__i < G__27552__a.length) {G__27552__a[G__27552__i] = arguments[G__27552__i + 3]; ++G__27552__i;}
G__27551 = new cljs.core.IndexedSeq(G__27552__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27551);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__27553__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__27166_SHARP_){
var G__27529 = x;
return (p1__27166_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__27166_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27529) : p1__27166_SHARP_.call(null,G__27529));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__27167_SHARP_){
var or__17618__auto__ = (function (){var G__27531 = x;
return (p1__27167_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__27167_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27531) : p1__27167_SHARP_.call(null,G__27531));
})();
if(cljs.core.truth_(or__17618__auto__)){
return or__17618__auto__;
} else {
var G__27532 = y;
return (p1__27167_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__27167_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27532) : p1__27167_SHARP_.call(null,G__27532));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__27168_SHARP_){
var or__17618__auto__ = (function (){var G__27534 = x;
return (p1__27168_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__27168_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27534) : p1__27168_SHARP_.call(null,G__27534));
})();
if(cljs.core.truth_(or__17618__auto__)){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (function (){var G__27536 = y;
return (p1__27168_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__27168_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27536) : p1__27168_SHARP_.call(null,G__27536));
})();
if(cljs.core.truth_(or__17618__auto____$1)){
return or__17618__auto____$1;
} else {
var G__27537 = z;
return (p1__27168_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__27168_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27537) : p1__27168_SHARP_.call(null,G__27537));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__27554__delegate = function (x,y,z,args){
var or__17618__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__17618__auto__)){
return or__17618__auto__;
} else {
return cljs.core.some(((function (or__17618__auto__,ps__$1){
return (function (p1__27169_SHARP_){
return cljs.core.some(p1__27169_SHARP_,args);
});})(or__17618__auto__,ps__$1))
,ps__$1);
}
};
var G__27554 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27555__i = 0, G__27555__a = new Array(arguments.length -  3);
while (G__27555__i < G__27555__a.length) {G__27555__a[G__27555__i] = arguments[G__27555__i + 3]; ++G__27555__i;}
  args = new cljs.core.IndexedSeq(G__27555__a,0);
} 
return G__27554__delegate.call(this,x,y,z,args);};
G__27554.cljs$lang$maxFixedArity = 3;
G__27554.cljs$lang$applyTo = (function (arglist__27556){
var x = cljs.core.first(arglist__27556);
arglist__27556 = cljs.core.next(arglist__27556);
var y = cljs.core.first(arglist__27556);
arglist__27556 = cljs.core.next(arglist__27556);
var z = cljs.core.first(arglist__27556);
var args = cljs.core.rest(arglist__27556);
return G__27554__delegate(x,y,z,args);
});
G__27554.cljs$core$IFn$_invoke$arity$variadic = G__27554__delegate;
return G__27554;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__27557 = null;
if (arguments.length > 3) {
var G__27558__i = 0, G__27558__a = new Array(arguments.length -  3);
while (G__27558__i < G__27558__a.length) {G__27558__a[G__27558__i] = arguments[G__27558__i + 3]; ++G__27558__i;}
G__27557 = new cljs.core.IndexedSeq(G__27558__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27557);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__27553 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__27559__i = 0, G__27559__a = new Array(arguments.length -  3);
while (G__27559__i < G__27559__a.length) {G__27559__a[G__27559__i] = arguments[G__27559__i + 3]; ++G__27559__i;}
  ps = new cljs.core.IndexedSeq(G__27559__a,0);
} 
return G__27553__delegate.call(this,p1,p2,p3,ps);};
G__27553.cljs$lang$maxFixedArity = 3;
G__27553.cljs$lang$applyTo = (function (arglist__27560){
var p1 = cljs.core.first(arglist__27560);
arglist__27560 = cljs.core.next(arglist__27560);
var p2 = cljs.core.first(arglist__27560);
arglist__27560 = cljs.core.next(arglist__27560);
var p3 = cljs.core.first(arglist__27560);
var ps = cljs.core.rest(arglist__27560);
return G__27553__delegate(p1,p2,p3,ps);
});
G__27553.cljs$core$IFn$_invoke$arity$variadic = G__27553__delegate;
return G__27553;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__27561 = null;
if (arguments.length > 3) {
var G__27562__i = 0, G__27562__a = new Array(arguments.length -  3);
while (G__27562__i < G__27562__a.length) {G__27562__a[G__27562__i] = arguments[G__27562__i + 3]; ++G__27562__i;}
G__27561 = new cljs.core.IndexedSeq(G__27562__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__27561);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__27617 = null;
var G__27617__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27617__1 = (function (result){
var G__27603 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27603) : rf.call(null,G__27603));
});
var G__27617__2 = (function (result,input){
var G__27604 = result;
var G__27605 = (function (){var G__27606 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27606) : f.call(null,G__27606));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27604,G__27605) : rf.call(null,G__27604,G__27605));
});
var G__27617__3 = (function() { 
var G__27618__delegate = function (result,input,inputs){
var G__27607 = result;
var G__27608 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27607,G__27608) : rf.call(null,G__27607,G__27608));
};
var G__27618 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__27619__i = 0, G__27619__a = new Array(arguments.length -  2);
while (G__27619__i < G__27619__a.length) {G__27619__a[G__27619__i] = arguments[G__27619__i + 2]; ++G__27619__i;}
  inputs = new cljs.core.IndexedSeq(G__27619__a,0);
} 
return G__27618__delegate.call(this,result,input,inputs);};
G__27618.cljs$lang$maxFixedArity = 2;
G__27618.cljs$lang$applyTo = (function (arglist__27620){
var result = cljs.core.first(arglist__27620);
arglist__27620 = cljs.core.next(arglist__27620);
var input = cljs.core.first(arglist__27620);
var inputs = cljs.core.rest(arglist__27620);
return G__27618__delegate(result,input,inputs);
});
G__27618.cljs$core$IFn$_invoke$arity$variadic = G__27618__delegate;
return G__27618;
})()
;
G__27617 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__27617__0.call(this);
case 1:
return G__27617__1.call(this,result);
case 2:
return G__27617__2.call(this,result,input);
default:
var G__27621 = null;
if (arguments.length > 2) {
var G__27622__i = 0, G__27622__a = new Array(arguments.length -  2);
while (G__27622__i < G__27622__a.length) {G__27622__a[G__27622__i] = arguments[G__27622__i + 2]; ++G__27622__i;}
G__27621 = new cljs.core.IndexedSeq(G__27622__a,0);
}
return G__27617__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__27621);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27617.cljs$lang$maxFixedArity = 2;
G__27617.cljs$lang$applyTo = G__27617__3.cljs$lang$applyTo;
G__27617.cljs$core$IFn$_invoke$arity$0 = G__27617__0;
G__27617.cljs$core$IFn$_invoke$arity$1 = G__27617__1;
G__27617.cljs$core$IFn$_invoke$arity$2 = G__27617__2;
G__27617.cljs$core$IFn$_invoke$arity$variadic = G__27617__3.cljs$core$IFn$_invoke$arity$variadic;
return G__27617;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__18505__auto___27623 = size;
var i_27624 = (0);
while(true){
if((i_27624 < n__18505__auto___27623)){
cljs.core.chunk_append(b,(function (){var G__27609 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_27624);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27609) : f.call(null,G__27609));
})());

var G__27625 = (i_27624 + (1));
i_27624 = G__27625;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__27610 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27610) : f.call(null,G__27610));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__27611 = cljs.core.first(s1);
var G__27612 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27611,G__27612) : f.call(null,G__27611,G__27612));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__27613 = cljs.core.first(s1);
var G__27614 = cljs.core.first(s2);
var G__27615 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27613,G__27614,G__27615) : f.call(null,G__27613,G__27614,G__27615));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__27626__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__27563_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__27563_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__27626 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__27627__i = 0, G__27627__a = new Array(arguments.length -  4);
while (G__27627__i < G__27627__a.length) {G__27627__a[G__27627__i] = arguments[G__27627__i + 4]; ++G__27627__i;}
  colls = new cljs.core.IndexedSeq(G__27627__a,0);
} 
return G__27626__delegate.call(this,f,c1,c2,c3,colls);};
G__27626.cljs$lang$maxFixedArity = 4;
G__27626.cljs$lang$applyTo = (function (arglist__27628){
var f = cljs.core.first(arglist__27628);
arglist__27628 = cljs.core.next(arglist__27628);
var c1 = cljs.core.first(arglist__27628);
arglist__27628 = cljs.core.next(arglist__27628);
var c2 = cljs.core.first(arglist__27628);
arglist__27628 = cljs.core.next(arglist__27628);
var c3 = cljs.core.first(arglist__27628);
var colls = cljs.core.rest(arglist__27628);
return G__27626__delegate(f,c1,c2,c3,colls);
});
G__27626.cljs$core$IFn$_invoke$arity$variadic = G__27626__delegate;
return G__27626;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__27629 = null;
if (arguments.length > 4) {
var G__27630__i = 0, G__27630__a = new Array(arguments.length -  4);
while (G__27630__i < G__27630__a.length) {G__27630__a[G__27630__i] = arguments[G__27630__i + 4]; ++G__27630__i;}
G__27629 = new cljs.core.IndexedSeq(G__27630__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__27629);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__27639 = null;
var G__27639__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27639__1 = (function (result){
var G__27636 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27636) : rf.call(null,G__27636));
});
var G__27639__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__27637 = result;
var G__27638 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27637,G__27638) : rf.call(null,G__27637,G__27638));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__27639 = function(result,input){
switch(arguments.length){
case 0:
return G__27639__0.call(this);
case 1:
return G__27639__1.call(this,result);
case 2:
return G__27639__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27639.cljs$core$IFn$_invoke$arity$0 = G__27639__0;
G__27639.cljs$core$IFn$_invoke$arity$1 = G__27639__1;
G__27639.cljs$core$IFn$_invoke$arity$2 = G__27639__2;
return G__27639;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__27646 = null;
var G__27646__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27646__1 = (function (result){
var G__27643 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27643) : rf.call(null,G__27643));
});
var G__27646__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__27644 = result;
var G__27645 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27644,G__27645) : rf.call(null,G__27644,G__27645));
}
});
G__27646 = function(result,input){
switch(arguments.length){
case 0:
return G__27646__0.call(this);
case 1:
return G__27646__1.call(this,result);
case 2:
return G__27646__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27646.cljs$core$IFn$_invoke$arity$0 = G__27646__0;
G__27646.cljs$core$IFn$_invoke$arity$1 = G__27646__1;
G__27646.cljs$core$IFn$_invoke$arity$2 = G__27646__2;
return G__27646;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__27647 = (n__$1 - (1));
var G__27648 = cljs.core.rest(s);
n__$1 = G__27647;
coll__$1 = G__27648;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__27651 = cljs.core.next(s);
var G__27652 = cljs.core.next(lead);
s = G__27651;
lead = G__27652;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__27665 = null;
var G__27665__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27665__1 = (function (result){
var G__27659 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27659) : rf.call(null,G__27659));
});
var G__27665__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__17606__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__17606__auto__)){
var G__27660 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27660) : pred.call(null,G__27660));
} else {
return and__17606__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__27661 = result;
var G__27662 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27661,G__27662) : rf.call(null,G__27661,G__27662));
}
});
G__27665 = function(result,input){
switch(arguments.length){
case 0:
return G__27665__0.call(this);
case 1:
return G__27665__1.call(this,result);
case 2:
return G__27665__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27665.cljs$core$IFn$_invoke$arity$0 = G__27665__0;
G__27665.cljs$core$IFn$_invoke$arity$1 = G__27665__1;
G__27665.cljs$core$IFn$_invoke$arity$2 = G__27665__2;
return G__27665;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__17606__auto__ = s;
if(and__17606__auto__){
var G__27664 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__27664) : pred__$1.call(null,G__27664));
} else {
return and__17606__auto__;
}
})())){
var G__27666 = pred__$1;
var G__27667 = cljs.core.rest(s);
pred__$1 = G__27666;
coll__$1 = G__27667;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__27676 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27676) : f.call(null,G__27676));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__27679__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__27679 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__27680__i = 0, G__27680__a = new Array(arguments.length -  2);
while (G__27680__i < G__27680__a.length) {G__27680__a[G__27680__i] = arguments[G__27680__i + 2]; ++G__27680__i;}
  colls = new cljs.core.IndexedSeq(G__27680__a,0);
} 
return G__27679__delegate.call(this,c1,c2,colls);};
G__27679.cljs$lang$maxFixedArity = 2;
G__27679.cljs$lang$applyTo = (function (arglist__27681){
var c1 = cljs.core.first(arglist__27681);
arglist__27681 = cljs.core.next(arglist__27681);
var c2 = cljs.core.first(arglist__27681);
var colls = cljs.core.rest(arglist__27681);
return G__27679__delegate(c1,c2,colls);
});
G__27679.cljs$core$IFn$_invoke$arity$variadic = G__27679__delegate;
return G__27679;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__27682 = null;
if (arguments.length > 2) {
var G__27683__i = 0, G__27683__a = new Array(arguments.length -  2);
while (G__27683__i < G__27683__a.length) {G__27683__a[G__27683__i] = arguments[G__27683__i + 2]; ++G__27683__i;}
G__27682 = new cljs.core.IndexedSeq(G__27683__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__27682);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__27698 = null;
var G__27698__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27698__1 = (function (result){
var G__27691 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27691) : rf.call(null,G__27691));
});
var G__27698__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__27692 = result;
var G__27693 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27692,G__27693) : rf.call(null,G__27692,G__27693));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__27694 = sepr;
var G__27695 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27694,G__27695) : rf.call(null,G__27694,G__27695));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__27696 = result;
var G__27697 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27696,G__27697) : rf.call(null,G__27696,G__27697));
}
});
G__27698 = function(result,input){
switch(arguments.length){
case 0:
return G__27698__0.call(this);
case 1:
return G__27698__1.call(this,result);
case 2:
return G__27698__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27698.cljs$core$IFn$_invoke$arity$0 = G__27698__0;
G__27698.cljs$core$IFn$_invoke$arity$1 = G__27698__1;
G__27698.cljs$core$IFn$_invoke$arity$2 = G__27698__2;
return G__27698;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__27707__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__27707 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__27708__i = 0, G__27708__a = new Array(arguments.length -  1);
while (G__27708__i < G__27708__a.length) {G__27708__a[G__27708__i] = arguments[G__27708__i + 1]; ++G__27708__i;}
  colls = new cljs.core.IndexedSeq(G__27708__a,0);
} 
return G__27707__delegate.call(this,f,colls);};
G__27707.cljs$lang$maxFixedArity = 1;
G__27707.cljs$lang$applyTo = (function (arglist__27709){
var f = cljs.core.first(arglist__27709);
var colls = cljs.core.rest(arglist__27709);
return G__27707__delegate(f,colls);
});
G__27707.cljs$core$IFn$_invoke$arity$variadic = G__27707__delegate;
return G__27707;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__27710 = null;
if (arguments.length > 1) {
var G__27711__i = 0, G__27711__a = new Array(arguments.length -  1);
while (G__27711__i < G__27711__a.length) {G__27711__a[G__27711__i] = arguments[G__27711__i + 1]; ++G__27711__i;}
G__27710 = new cljs.core.IndexedSeq(G__27711__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__27710);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__27730 = null;
var G__27730__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27730__1 = (function (result){
var G__27724 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27724) : rf.call(null,G__27724));
});
var G__27730__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__27725 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27725) : pred.call(null,G__27725));
})())){
var G__27726 = result;
var G__27727 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27726,G__27727) : rf.call(null,G__27726,G__27727));
} else {
return result;
}
});
G__27730 = function(result,input){
switch(arguments.length){
case 0:
return G__27730__0.call(this);
case 1:
return G__27730__1.call(this,result);
case 2:
return G__27730__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27730.cljs$core$IFn$_invoke$arity$0 = G__27730__0;
G__27730.cljs$core$IFn$_invoke$arity$1 = G__27730__1;
G__27730.cljs$core$IFn$_invoke$arity$2 = G__27730__2;
return G__27730;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__18505__auto___27731 = size;
var i_27732 = (0);
while(true){
if((i_27732 < n__18505__auto___27731)){
if(cljs.core.truth_((function (){var G__27728 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_27732);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27728) : pred.call(null,G__27728));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_27732));
} else {
}

var G__27733 = (i_27732 + (1));
i_27732 = G__27733;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__27729 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27729) : pred.call(null,G__27729));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__27740 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__27740) : branch_QMARK_.call(null,G__27740));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__27741 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__27741) : children.call(null,G__27741));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__27742_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__27742_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__27745 = to;
if(G__27745){
var bit__18292__auto__ = (G__27745.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__18292__auto__) || (G__27745.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__27746 = to;
if(G__27746){
var bit__18292__auto__ = (G__27746.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__18292__auto__) || (G__27746.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__27748 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27748) : f.call(null,G__27748));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__27749__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__27749 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__27750__i = 0, G__27750__a = new Array(arguments.length -  4);
while (G__27750__i < G__27750__a.length) {G__27750__a[G__27750__i] = arguments[G__27750__i + 4]; ++G__27750__i;}
  colls = new cljs.core.IndexedSeq(G__27750__a,0);
} 
return G__27749__delegate.call(this,f,c1,c2,c3,colls);};
G__27749.cljs$lang$maxFixedArity = 4;
G__27749.cljs$lang$applyTo = (function (arglist__27751){
var f = cljs.core.first(arglist__27751);
arglist__27751 = cljs.core.next(arglist__27751);
var c1 = cljs.core.first(arglist__27751);
arglist__27751 = cljs.core.next(arglist__27751);
var c2 = cljs.core.first(arglist__27751);
arglist__27751 = cljs.core.next(arglist__27751);
var c3 = cljs.core.first(arglist__27751);
var colls = cljs.core.rest(arglist__27751);
return G__27749__delegate(f,c1,c2,c3,colls);
});
G__27749.cljs$core$IFn$_invoke$arity$variadic = G__27749__delegate;
return G__27749;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__27752 = null;
if (arguments.length > 4) {
var G__27753__i = 0, G__27753__a = new Array(arguments.length -  4);
while (G__27753__i < G__27753__a.length) {G__27753__a[G__27753__i] = arguments[G__27753__i + 4]; ++G__27753__i;}
G__27752 = new cljs.core.IndexedSeq(G__27753__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__27752);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__27755 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27755) : pred.call(null,G__27755));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__27770 = m__$1;
if(G__27770){
var bit__18299__auto__ = (G__27770.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__18299__auto__) || (G__27770.cljs$core$ILookup$)){
return true;
} else {
if((!G__27770.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__27770);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__27770);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__27771 = sentinel;
var G__27772 = m__$2;
var G__27773 = cljs.core.next(ks__$1);
sentinel = G__27771;
m__$1 = G__27772;
ks__$1 = G__27773;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__27774,v){
var vec__27779 = p__27774;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27779,(0),null);
var ks = cljs.core.nthnext(vec__27779,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__27780,f){
var vec__27818 = p__27780;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27818,(0),null);
var ks = cljs.core.nthnext(vec__27818,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27819 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27819) : f.call(null,G__27819));
})());
}
});
var update_in__4 = (function (m,p__27781,f,a){
var vec__27820 = p__27781;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27820,(0),null);
var ks = cljs.core.nthnext(vec__27820,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27821 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27822 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27821,G__27822) : f.call(null,G__27821,G__27822));
})());
}
});
var update_in__5 = (function (m,p__27782,f,a,b){
var vec__27823 = p__27782;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27823,(0),null);
var ks = cljs.core.nthnext(vec__27823,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27824 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27825 = a;
var G__27826 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27824,G__27825,G__27826) : f.call(null,G__27824,G__27825,G__27826));
})());
}
});
var update_in__6 = (function (m,p__27783,f,a,b,c){
var vec__27827 = p__27783;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27827,(0),null);
var ks = cljs.core.nthnext(vec__27827,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27828 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27829 = a;
var G__27830 = b;
var G__27831 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__27828,G__27829,G__27830,G__27831) : f.call(null,G__27828,G__27829,G__27830,G__27831));
})());
}
});
var update_in__7 = (function() { 
var G__27833__delegate = function (m,p__27784,f,a,b,c,args){
var vec__27832 = p__27784;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27832,(0),null);
var ks = cljs.core.nthnext(vec__27832,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__27833 = function (m,p__27784,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__27834__i = 0, G__27834__a = new Array(arguments.length -  6);
while (G__27834__i < G__27834__a.length) {G__27834__a[G__27834__i] = arguments[G__27834__i + 6]; ++G__27834__i;}
  args = new cljs.core.IndexedSeq(G__27834__a,0);
} 
return G__27833__delegate.call(this,m,p__27784,f,a,b,c,args);};
G__27833.cljs$lang$maxFixedArity = 6;
G__27833.cljs$lang$applyTo = (function (arglist__27835){
var m = cljs.core.first(arglist__27835);
arglist__27835 = cljs.core.next(arglist__27835);
var p__27784 = cljs.core.first(arglist__27835);
arglist__27835 = cljs.core.next(arglist__27835);
var f = cljs.core.first(arglist__27835);
arglist__27835 = cljs.core.next(arglist__27835);
var a = cljs.core.first(arglist__27835);
arglist__27835 = cljs.core.next(arglist__27835);
var b = cljs.core.first(arglist__27835);
arglist__27835 = cljs.core.next(arglist__27835);
var c = cljs.core.first(arglist__27835);
var args = cljs.core.rest(arglist__27835);
return G__27833__delegate(m,p__27784,f,a,b,c,args);
});
G__27833.cljs$core$IFn$_invoke$arity$variadic = G__27833__delegate;
return G__27833;
})()
;
update_in = function(m,p__27784,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__27784,f);
case 4:
return update_in__4.call(this,m,p__27784,f,a);
case 5:
return update_in__5.call(this,m,p__27784,f,a,b);
case 6:
return update_in__6.call(this,m,p__27784,f,a,b,c);
default:
var G__27836 = null;
if (arguments.length > 6) {
var G__27837__i = 0, G__27837__a = new Array(arguments.length -  6);
while (G__27837__i < G__27837__a.length) {G__27837__a[G__27837__i] = arguments[G__27837__i + 6]; ++G__27837__i;}
G__27836 = new cljs.core.IndexedSeq(G__27837__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__27784,f,a,b,c, G__27836);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27848 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27848) : f.call(null,G__27848));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27849 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27850 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27849,G__27850) : f.call(null,G__27849,G__27850));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27851 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27852 = x;
var G__27853 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27851,G__27852,G__27853) : f.call(null,G__27851,G__27852,G__27853));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27854 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27855 = x;
var G__27856 = y;
var G__27857 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__27854,G__27855,G__27856,G__27857) : f.call(null,G__27854,G__27855,G__27856,G__27857));
})());
});
var update__7 = (function() { 
var G__27858__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__27858 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__27859__i = 0, G__27859__a = new Array(arguments.length -  6);
while (G__27859__i < G__27859__a.length) {G__27859__a[G__27859__i] = arguments[G__27859__i + 6]; ++G__27859__i;}
  more = new cljs.core.IndexedSeq(G__27859__a,0);
} 
return G__27858__delegate.call(this,m,k,f,x,y,z,more);};
G__27858.cljs$lang$maxFixedArity = 6;
G__27858.cljs$lang$applyTo = (function (arglist__27860){
var m = cljs.core.first(arglist__27860);
arglist__27860 = cljs.core.next(arglist__27860);
var k = cljs.core.first(arglist__27860);
arglist__27860 = cljs.core.next(arglist__27860);
var f = cljs.core.first(arglist__27860);
arglist__27860 = cljs.core.next(arglist__27860);
var x = cljs.core.first(arglist__27860);
arglist__27860 = cljs.core.next(arglist__27860);
var y = cljs.core.first(arglist__27860);
arglist__27860 = cljs.core.next(arglist__27860);
var z = cljs.core.first(arglist__27860);
var more = cljs.core.rest(arglist__27860);
return G__27858__delegate(m,k,f,x,y,z,more);
});
G__27858.cljs$core$IFn$_invoke$arity$variadic = G__27858__delegate;
return G__27858;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__27861 = null;
if (arguments.length > 6) {
var G__27862__i = 0, G__27862__a = new Array(arguments.length -  6);
while (G__27862__i < G__27862__a.length) {G__27862__a[G__27862__i] = arguments[G__27862__i + 6]; ++G__27862__i;}
G__27861 = new cljs.core.IndexedSeq(G__27862__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__27861);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__27863 = (ll - (5));
var G__27864 = r;
ll = G__27863;
ret = G__27864;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__27869 = cljs.core.pv_aget(node,(0));
var G__27870 = (level - (5));
node = G__27869;
level = G__27870;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__27871 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__27872 = (level - (5));
node = G__27871;
level = G__27872;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__27882 = init__$2;
var G__27883 = (j + i);
var G__27884 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27882,G__27883,G__27884) : f.call(null,G__27882,G__27883,G__27884));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__27895 = (j + (1));
var G__27896 = init__$3;
j = G__27895;
init__$2 = G__27896;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27885 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27885) : cljs.core.deref.call(null,G__27885));
} else {
var G__27897 = (i + len);
var G__27898 = init__$2;
i = G__27897;
init__$1 = G__27898;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18039__auto__ = self__.__hash;
if(!((h__18039__auto__ == null))){
return h__18039__auto__;
} else {
var h__18039__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18039__auto____$1;

return h__18039__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__27886 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__27886) : cljs.core.tv_editable_root.call(null,G__27886));
})(),(function (){var G__27887 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__27887) : cljs.core.tv_editable_tail.call(null,G__27887));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__27888 = init__$2;
var G__27889 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27888,G__27889) : f.call(null,G__27888,G__27889));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__27899 = (j + (1));
var G__27900 = init__$3;
j = G__27899;
init__$2 = G__27900;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27890 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27890) : cljs.core.deref.call(null,G__27890));
} else {
var G__27901 = (i + len);
var G__27902 = init__$2;
i = G__27901;
init__$1 = G__27902;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__27891 = coll__$1;
var G__27892 = cljs.core.first_array_for_longvec(coll__$1);
var G__27893 = (0);
var G__27894 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__27891,G__27892,G__27893,G__27894) : cljs.core.chunked_seq.call(null,G__27891,G__27892,G__27893,G__27894));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__18505__auto___27903 = len;
var i_27904 = (0);
while(true){
if((i_27904 < n__18505__auto___27903)){
(new_tail[i_27904] = (self__.tail[i_27904]));

var G__27905 = (i_27904 + (1));
i_27904 = G__27905;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__27906 = null;
var G__27906__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__27906__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__27906 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27906__2.call(this,self__,k);
case 3:
return G__27906__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27906.cljs$core$IFn$_invoke$arity$2 = G__27906__2;
G__27906.cljs$core$IFn$_invoke$arity$3 = G__27906__3;
return G__27906;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args27881){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27881)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__27907 = (i + (1));
var G__27908 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__27907;
out = G__27908;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18596__auto__ = this;
return cljs.core.es6_iterator(this__18596__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__27909__i = 0, G__27909__a = new Array(arguments.length -  0);
while (G__27909__i < G__27909__a.length) {G__27909__a[G__27909__i] = arguments[G__27909__i + 0]; ++G__27909__i;}
  args = new cljs.core.IndexedSeq(G__27909__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__27910){
var args = cljs.core.seq(arglist__27910);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__27911 = self__.vec;
var G__27912 = self__.node;
var G__27913 = self__.i;
var G__27914 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__27911,G__27912,G__27913,G__27914) : cljs.core.chunked_seq.call(null,G__27911,G__27912,G__27913,G__27914));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18039__auto__ = self__.__hash;
if(!((h__18039__auto__ == null))){
return h__18039__auto__;
} else {
var h__18039__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18039__auto____$1;

return h__18039__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__27915 = self__.vec;
var G__27916 = (self__.i + self__.off);
var G__27917 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__27915,G__27916,G__27917) : cljs.core.subvec.call(null,G__27915,G__27916,G__27917));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__27918 = self__.vec;
var G__27919 = (self__.i + self__.off);
var G__27920 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__27918,G__27919,G__27920) : cljs.core.subvec.call(null,G__27918,G__27919,G__27920));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__27921 = self__.vec;
var G__27922 = self__.node;
var G__27923 = self__.i;
var G__27924 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__27921,G__27922,G__27923,G__27924) : cljs.core.chunked_seq.call(null,G__27921,G__27922,G__27923,G__27924));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__27925 = self__.vec;
var G__27926 = cljs.core.unchecked_array_for(self__.vec,end);
var G__27927 = end;
var G__27928 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__27925,G__27926,G__27927,G__27928) : cljs.core.chunked_seq.call(null,G__27925,G__27926,G__27927,G__27928));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__27929 = self__.vec;
var G__27930 = self__.node;
var G__27931 = self__.i;
var G__27932 = self__.off;
var G__27933 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__27929,G__27930,G__27931,G__27932,G__27933) : cljs.core.chunked_seq.call(null,G__27929,G__27930,G__27931,G__27932,G__27933));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__27934 = self__.vec;
var G__27935 = cljs.core.unchecked_array_for(self__.vec,end);
var G__27936 = end;
var G__27937 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__27934,G__27935,G__27936,G__27937) : cljs.core.chunked_seq.call(null,G__27934,G__27935,G__27936,G__27937));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18596__auto__ = this;
return cljs.core.es6_iterator(this__18596__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__27939 = self__.meta;
var G__27940 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__27941 = self__.start;
var G__27942 = (function (){var x__17935__auto__ = self__.end;
var y__17936__auto__ = (v_pos + (1));
return ((x__17935__auto__ > y__17936__auto__) ? x__17935__auto__ : y__17936__auto__);
})();
var G__27943 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__27939,G__27940,G__27941,G__27942,G__27943) : cljs.core.build_subvec.call(null,G__27939,G__27940,G__27941,G__27942,G__27943));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__27944 = self__.meta;
var G__27945 = self__.v;
var G__27946 = self__.start;
var G__27947 = (self__.end - (1));
var G__27948 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__27944,G__27945,G__27946,G__27947,G__27948) : cljs.core.build_subvec.call(null,G__27944,G__27945,G__27946,G__27947,G__27948));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18039__auto__ = self__.__hash;
if(!((h__18039__auto__ == null))){
return h__18039__auto__;
} else {
var h__18039__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18039__auto____$1;

return h__18039__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__27950 = meta__$1;
var G__27951 = self__.v;
var G__27952 = self__.start;
var G__27953 = self__.end;
var G__27954 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__27950,G__27951,G__27952,G__27953,G__27954) : cljs.core.build_subvec.call(null,G__27950,G__27951,G__27952,G__27953,G__27954));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__27955 = self__.meta;
var G__27956 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__27957 = self__.start;
var G__27958 = (self__.end + (1));
var G__27959 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__27955,G__27956,G__27957,G__27958,G__27959) : cljs.core.build_subvec.call(null,G__27955,G__27956,G__27957,G__27958,G__27959));
});

cljs.core.Subvec.prototype.call = (function() {
var G__27960 = null;
var G__27960__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__27960__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__27960 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27960__2.call(this,self__,k);
case 3:
return G__27960__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27960.cljs$core$IFn$_invoke$arity$2 = G__27960__2;
G__27960.cljs$core$IFn$_invoke$arity$3 = G__27960__3;
return G__27960;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args27938){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27938)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18596__auto__ = this;
return cljs.core.es6_iterator(this__18596__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__27961 = meta;
var G__27962 = v.v;
var G__27963 = (v.start + start);
var G__27964 = (v.start + end);
var G__27965 = __hash;
meta = G__27961;
v = G__27962;
start = G__27963;
end = G__27964;
__hash = G__27965;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj27972 = {};
return obj27972;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__27980 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__27981 = (level - (5));
node = G__27980;
level = G__27981;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__27985 = null;
var G__27985__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27985__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27985 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27985__2.call(this,self__,k);
case 3:
return G__27985__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27985.cljs$core$IFn$_invoke$arity$2 = G__27985__2;
G__27985.cljs$core$IFn$_invoke$arity$3 = G__27985__3;
return G__27985;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args27982){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27982)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18039__auto__ = self__.__hash;
if(!((h__18039__auto__ == null))){
return h__18039__auto__;
} else {
var h__18039__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18039__auto____$1;

return h__18039__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18596__auto__ = this;
return cljs.core.es6_iterator(this__18596__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18039__auto__ = self__.__hash;
if(!((h__18039__auto__ == null))){
return h__18039__auto__;
} else {
var h__18039__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18039__auto____$1;

return h__18039__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__17618__auto__ = self__.front;
if(cljs.core.truth_(or__17618__auto__)){
return or__17618__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__17618__auto__ = self__.rear;
if(cljs.core.truth_(or__17618__auto__)){
return or__17618__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18596__auto__ = this;
return cljs.core.es6_iterator(this__18596__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__27986 = (i + incr);
i = G__27986;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__27987 = (i + (1));
var G__27988 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__27987;
out = G__27988;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj27992 = {};
return obj27992;
})();
var l = ks.length;
var i_27993 = (0);
while(true){
if((i_27993 < l)){
var k_27994 = (ks[i_27993]);
(new_obj[k_27994] = (obj[k_27994]));

var G__27995 = (i_27993 + (1));
i_27993 = G__27995;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__17606__auto__ = (function (){var G__27999 = k;
return goog.isString(G__27999);
})();
if(cljs.core.truth_(and__17606__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__17606__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__28000 = init__$1;
var G__28001 = k;
var G__28002 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28000,G__28001,G__28002) : f.call(null,G__28000,G__28001,G__28002));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__28003 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28003) : cljs.core.deref.call(null,G__28003));
} else {
var G__28009 = cljs.core.rest(keys__$1);
var G__28010 = init__$2;
keys__$1 = G__28009;
init__$1 = G__28010;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18039__auto__ = self__.__hash;
if(!((h__18039__auto__ == null))){
return h__18039__auto__;
} else {
var h__18039__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__18039__auto____$1;

return h__18039__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__17606__auto__ = (function (){var G__28005 = k;
return goog.isString(G__28005);
})();
if(cljs.core.truth_(and__17606__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__17606__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__28006 = k;
return goog.isString(G__28006);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__17606__auto__ = (function (){var G__28008 = k;
return goog.isString(G__28008);
})();
if(cljs.core.truth_(and__17606__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__17606__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__27996_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__27996_SHARP_,(self__.strobj[p1__27996_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__28011 = null;
var G__28011__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__28011__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__28011 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28011__2.call(this,self__,k);
case 3:
return G__28011__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28011.cljs$core$IFn$_invoke$arity$2 = G__28011__2;
G__28011.cljs$core$IFn$_invoke$arity$3 = G__28011__3;
return G__28011;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args27997){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27997)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj28013 = {};
return obj28013;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__28014 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28014,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28014,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__28015 = (i + (2));
i = G__28015;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__28016 = (i + (2));
i = G__28016;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__28017 = (i + (2));
i = G__28017;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__28018 = (i + (2));
i = G__28018;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__28019 = (i + (2));
i = G__28019;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__17618__auto__ = (function (){var G__28023 = k;
return goog.isString(G__28023);
})();
if(cljs.core.truth_(or__17618__auto__)){
return or__17618__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_28024 = (0);
while(true){
if((i_28024 < l)){
(narr[i_28024] = (arr[i_28024]));

var G__28025 = (i_28024 + (1));
i_28024 = G__28025;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18596__auto__ = this;
return cljs.core.es6_iterator(this__18596__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__28027 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__28027) : cljs.core.keys.call(null,G__28027));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__28028 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__28028) : cljs.core.vals.call(null,G__28028));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__28029 = cljs.core.seq(coll);
var chunk__28030 = null;
var count__28031 = (0);
var i__28032 = (0);
while(true){
if((i__28032 < count__28031)){
var vec__28033 = chunk__28030.cljs$core$IIndexed$_nth$arity$2(null,i__28032);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28033,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28033,(1),null);
var G__28034_28047 = v;
var G__28035_28048 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28034_28047,G__28035_28048) : f.call(null,G__28034_28047,G__28035_28048));

var G__28049 = seq__28029;
var G__28050 = chunk__28030;
var G__28051 = count__28031;
var G__28052 = (i__28032 + (1));
seq__28029 = G__28049;
chunk__28030 = G__28050;
count__28031 = G__28051;
i__28032 = G__28052;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__28029);
if(temp__4126__auto__){
var seq__28029__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__28029__$1)){
var c__18405__auto__ = cljs.core.chunk_first(seq__28029__$1);
var G__28053 = cljs.core.chunk_rest(seq__28029__$1);
var G__28054 = c__18405__auto__;
var G__28055 = cljs.core.count(c__18405__auto__);
var G__28056 = (0);
seq__28029 = G__28053;
chunk__28030 = G__28054;
count__28031 = G__28055;
i__28032 = G__28056;
continue;
} else {
var vec__28036 = cljs.core.first(seq__28029__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28036,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28036,(1),null);
var G__28037_28057 = v;
var G__28038_28058 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28037_28057,G__28038_28058) : f.call(null,G__28037_28057,G__28038_28058));

var G__28059 = cljs.core.next(seq__28029__$1);
var G__28060 = null;
var G__28061 = (0);
var G__28062 = (0);
seq__28029 = G__28059;
chunk__28030 = G__28060;
count__28031 = G__28061;
i__28032 = G__28062;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__28039 = init__$1;
var G__28040 = (self__.arr[i]);
var G__28041 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28039,G__28040,G__28041) : f.call(null,G__28039,G__28040,G__28041));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__28042 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28042) : cljs.core.deref.call(null,G__28042));
} else {
var G__28063 = (i + (2));
var G__28064 = init__$2;
i = G__28063;
init__$1 = G__28064;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18039__auto__ = self__.__hash;
if(!((h__18039__auto__ == null))){
return h__18039__auto__;
} else {
var h__18039__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__18039__auto____$1;

return h__18039__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__28043 = other;
if(G__28043){
var bit__18292__auto__ = (G__28043.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__18292__auto__) || (G__28043.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__28065 = (i + (2));
i = G__28065;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj28045 = {};
return obj28045;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__28066 = (s + (2));
var G__28067 = d;
s = G__28066;
d = G__28067;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__28068 = (s + (2));
var G__28069 = (d + (2));
s = G__28068;
d = G__28069;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__28046 = cljs.core.aclone(self__.arr);
(G__28046[(idx + (1))] = v);

return G__28046;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__28070 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__28071 = cljs.core.next(es);
ret = G__28070;
es = G__28071;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__28072 = null;
var G__28072__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__28072__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__28072 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28072__2.call(this,self__,k);
case 3:
return G__28072__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28072.cljs$core$IFn$_invoke$arity$2 = G__28072__2;
G__28072.cljs$core$IFn$_invoke$arity$3 = G__28072__3;
return G__28072;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args28026){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28026)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__28073 = (i + (2));
var G__28074 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__28073;
ret = G__28074;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18596__auto__ = this;
return cljs.core.es6_iterator(this__18596__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__28075_28083 = self__.arr;
G__28075_28083.pop();

G__28075_28083.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__28076 = self__.len;
var G__28077 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__28076,G__28077) : cljs.core.array__GT_transient_hash_map.call(null,G__28076,G__28077));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__28078 = o;
if(G__28078){
var bit__18299__auto__ = (G__28078.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__18299__auto__) || (G__28078.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__28078.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__28078);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__28078);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__28079 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__28079) : cljs.core.key.call(null,G__28079));
})(),(function (){var G__28080 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__28080) : cljs.core.val.call(null,G__28080));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__28084 = cljs.core.next(es);
var G__28085 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__28081 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__28081) : cljs.core.key.call(null,G__28081));
})(),(function (){var G__28082 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__28082) : cljs.core.val.call(null,G__28082));
})());
es = G__28084;
tcoll__$2 = G__28085;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__28086 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__28087 = (i + (2));
out = G__28086;
i = G__28087;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__28090 = cljs.core.aclone(arr);
(G__28090[i] = a);

return G__28090;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__28091 = cljs.core.aclone(arr);
(G__28091[i] = a);

(G__28091[j] = b);

return G__28091;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__28096 = init__$1;
var G__28097 = k;
var G__28098 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28096,G__28097,G__28098) : f.call(null,G__28096,G__28097,G__28098));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__28099 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28099) : cljs.core.deref.call(null,G__28099));
} else {
var G__28100 = (i + (2));
var G__28101 = init__$2;
i = G__28100;
init__$1 = G__28101;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__28102 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__28102) : cljs.core.create_inode_seq.call(null,G__28102));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_28116 = (0);
var j_28117 = (0);
while(true){
if((i_28116 < (32))){
if((((self__.bitmap >>> i_28116) & (1)) === (0))){
var G__28118 = (i_28116 + (1));
var G__28119 = j_28117;
i_28116 = G__28118;
j_28117 = G__28119;
continue;
} else {
(nodes[i_28116] = ((!(((self__.arr[j_28117]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_28117])),(self__.arr[j_28117]),(self__.arr[(j_28117 + (1))]),added_leaf_QMARK_):(self__.arr[(j_28117 + (1))])));

var G__28120 = (i_28116 + (1));
var G__28121 = (j_28117 + (2));
i_28116 = G__28120;
j_28117 = G__28121;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__28103 = edit__$1;
var G__28104 = (shift + (5));
var G__28105 = key_or_nil;
var G__28106 = val_or_node;
var G__28107 = hash;
var G__28108 = key;
var G__28109 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__28103,G__28104,G__28105,G__28106,G__28107,G__28108,G__28109) : cljs.core.create_node.call(null,G__28103,G__28104,G__28105,G__28106,G__28107,G__28108,G__28109));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_28122 = (0);
var j_28123 = (0);
while(true){
if((i_28122 < (32))){
if((((self__.bitmap >>> i_28122) & (1)) === (0))){
var G__28124 = (i_28122 + (1));
var G__28125 = j_28123;
i_28122 = G__28124;
j_28123 = G__28125;
continue;
} else {
(nodes[i_28122] = ((!(((self__.arr[j_28123]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_28123])),(self__.arr[j_28123]),(self__.arr[(j_28123 + (1))]),added_leaf_QMARK_):(self__.arr[(j_28123 + (1))])));

var G__28126 = (i_28122 + (1));
var G__28127 = (j_28123 + (2));
i_28122 = G__28126;
j_28123 = G__28127;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__28110 = (shift + (5));
var G__28111 = key_or_nil;
var G__28112 = val_or_node;
var G__28113 = hash;
var G__28114 = key;
var G__28115 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__28110,G__28111,G__28112,G__28113,G__28114,G__28115) : cljs.core.create_node.call(null,G__28110,G__28111,G__28112,G__28113,G__28114,G__28115));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__28128 = (i + (1));
var G__28129 = (j + (2));
var G__28130 = (bitmap | ((1) << i));
i = G__28128;
j = G__28129;
bitmap = G__28130;
continue;
} else {
var G__28131 = (i + (1));
var G__28132 = j;
var G__28133 = bitmap;
i = G__28131;
j = G__28132;
bitmap = G__28133;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__28134 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__28134) : cljs.core.create_array_node_seq.call(null,G__28134));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__28135 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28135) : cljs.core.deref.call(null,G__28135));
} else {
var G__28136 = (i + (1));
var G__28137 = init__$2;
i = G__28136;
init__$1 = G__28137;
continue;
}
} else {
var G__28138 = (i + (1));
var G__28139 = init__$1;
i = G__28138;
init__$1 = G__28139;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__28140 = (i + (2));
i = G__28140;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__28141 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__28141) : cljs.core.create_inode_seq.call(null,G__28141));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18039__auto__ = self__.__hash;
if(!((h__18039__auto__ == null))){
return h__18039__auto__;
} else {
var h__18039__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18039__auto____$1;

return h__18039__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__28142 = self__.nodes;
var G__28143 = (self__.i + (2));
var G__28144 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__28142,G__28143,G__28144) : cljs.core.create_inode_seq.call(null,G__28142,G__28143,G__28144));
} else {
var G__28145 = self__.nodes;
var G__28146 = self__.i;
var G__28147 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__28145,G__28146,G__28147) : cljs.core.create_inode_seq.call(null,G__28145,G__28146,G__28147));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18596__auto__ = this;
return cljs.core.es6_iterator(this__18596__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__28151 = (j + (2));
j = G__28151;
continue;
}
} else {
var G__28152 = (j + (2));
j = G__28152;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18039__auto__ = self__.__hash;
if(!((h__18039__auto__ == null))){
return h__18039__auto__;
} else {
var h__18039__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18039__auto____$1;

return h__18039__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__28153 = null;
var G__28154 = self__.nodes;
var G__28155 = self__.i;
var G__28156 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__28153,G__28154,G__28155,G__28156) : cljs.core.create_array_node_seq.call(null,G__28153,G__28154,G__28155,G__28156));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18596__auto__ = this;
return cljs.core.es6_iterator(this__18596__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__28161 = (j + (1));
j = G__28161;
continue;
}
} else {
var G__28162 = (j + (1));
j = G__28162;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__28164 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__28164) : cljs.core.keys.call(null,G__28164));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__28165 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__28165) : cljs.core.vals.call(null,G__28165));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__28166 = cljs.core.seq(coll);
var chunk__28167 = null;
var count__28168 = (0);
var i__28169 = (0);
while(true){
if((i__28169 < count__28168)){
var vec__28170 = chunk__28167.cljs$core$IIndexed$_nth$arity$2(null,i__28169);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28170,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28170,(1),null);
var G__28171_28182 = v;
var G__28172_28183 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28171_28182,G__28172_28183) : f.call(null,G__28171_28182,G__28172_28183));

var G__28184 = seq__28166;
var G__28185 = chunk__28167;
var G__28186 = count__28168;
var G__28187 = (i__28169 + (1));
seq__28166 = G__28184;
chunk__28167 = G__28185;
count__28168 = G__28186;
i__28169 = G__28187;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__28166);
if(temp__4126__auto__){
var seq__28166__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__28166__$1)){
var c__18405__auto__ = cljs.core.chunk_first(seq__28166__$1);
var G__28188 = cljs.core.chunk_rest(seq__28166__$1);
var G__28189 = c__18405__auto__;
var G__28190 = cljs.core.count(c__18405__auto__);
var G__28191 = (0);
seq__28166 = G__28188;
chunk__28167 = G__28189;
count__28168 = G__28190;
i__28169 = G__28191;
continue;
} else {
var vec__28173 = cljs.core.first(seq__28166__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28173,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28173,(1),null);
var G__28174_28192 = v;
var G__28175_28193 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28174_28192,G__28175_28193) : f.call(null,G__28174_28192,G__28175_28193));

var G__28194 = cljs.core.next(seq__28166__$1);
var G__28195 = null;
var G__28196 = (0);
var G__28197 = (0);
seq__28166 = G__28194;
chunk__28167 = G__28195;
count__28168 = G__28196;
i__28169 = G__28197;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__28176 = init;
var G__28177 = null;
var G__28178 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28176,G__28177,G__28178) : f.call(null,G__28176,G__28177,G__28178));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__28179 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28179) : cljs.core.deref.call(null,G__28179));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18039__auto__ = self__.__hash;
if(!((h__18039__auto__ == null))){
return h__18039__auto__;
} else {
var h__18039__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__18039__auto____$1;

return h__18039__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj28181 = {};
return obj28181;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__28198 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__28199 = cljs.core.next(es);
ret = G__28198;
es = G__28199;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__28200 = null;
var G__28200__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__28200__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__28200 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28200__2.call(this,self__,k);
case 3:
return G__28200__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28200.cljs$core$IFn$_invoke$arity$2 = G__28200__2;
G__28200.cljs$core$IFn$_invoke$arity$3 = G__28200__3;
return G__28200;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args28163){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28163)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__28201 = (i + (2));
var G__28202 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__28201;
ret = G__28202;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__28203 = (i + (1));
var G__28204 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__28203;
out = G__28204;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18596__auto__ = this;
return cljs.core.es6_iterator(this__18596__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__28205 = o;
if(G__28205){
var bit__18299__auto__ = (G__28205.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__18299__auto__) || (G__28205.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__28205.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__28205);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__28205);
}
})()){
return tcoll.assoc_BANG_((function (){var G__28206 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__28206) : cljs.core.key.call(null,G__28206));
})(),(function (){var G__28207 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__28207) : cljs.core.val.call(null,G__28207));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__28210 = cljs.core.next(es);
var G__28211 = tcoll__$1.assoc_BANG_((function (){var G__28208 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__28208) : cljs.core.key.call(null,G__28208));
})(),(function (){var G__28209 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__28209) : cljs.core.val.call(null,G__28209));
})());
es = G__28210;
tcoll__$1 = G__28211;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__28212 = ((ascending_QMARK_)?t.left:t.right);
var G__28213 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__28212;
stack__$1 = G__28213;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18039__auto__ = self__.__hash;
if(!((h__18039__auto__ == null))){
return h__18039__auto__;
} else {
var h__18039__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18039__auto____$1;

return h__18039__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18596__auto__ = this;
return cljs.core.es6_iterator(this__18596__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__28226 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28226) : cljs.core.deref.call(null,G__28226));
} else {
var init__$2 = (function (){var G__28227 = init__$1;
var G__28228 = node.key;
var G__28229 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28227,G__28228,G__28229) : f.call(null,G__28227,G__28228,G__28229));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__28230 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28230) : cljs.core.deref.call(null,G__28230));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__28231 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28231) : cljs.core.deref.call(null,G__28231));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18039__auto__ = self__.__hash;
if(!((h__18039__auto__ == null))){
return h__18039__auto__;
} else {
var h__18039__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18039__auto____$1;

return h__18039__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__28233 = null;
var G__28233__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__28233__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__28233 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28233__2.call(this,self__,k);
case 3:
return G__28233__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28233.cljs$core$IFn$_invoke$arity$2 = G__28233__2;
G__28233.cljs$core$IFn$_invoke$arity$3 = G__28233__3;
return G__28233;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args28232){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28232)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18596__auto__ = this;
return cljs.core.es6_iterator(this__18596__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18039__auto__ = self__.__hash;
if(!((h__18039__auto__ == null))){
return h__18039__auto__;
} else {
var h__18039__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__18039__auto____$1;

return h__18039__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__28235 = null;
var G__28235__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__28235__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__28235 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28235__2.call(this,self__,k);
case 3:
return G__28235__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28235.cljs$core$IFn$_invoke$arity$2 = G__28235__2;
G__28235.cljs$core$IFn$_invoke$arity$3 = G__28235__3;
return G__28235;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args28234){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28234)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18596__auto__ = this;
return cljs.core.es6_iterator(this__18596__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__28248 = k;
var G__28249 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__28248,G__28249) : comp.call(null,G__28248,G__28249));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__28268 = k;
var G__28269 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__28268,G__28269) : comp.call(null,G__28268,G__28269));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__28280 = k;
var G__28281 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__28280,G__28281) : comp.call(null,G__28280,G__28281));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__28283 = cljs.core.seq(coll);
var chunk__28284 = null;
var count__28285 = (0);
var i__28286 = (0);
while(true){
if((i__28286 < count__28285)){
var vec__28287 = chunk__28284.cljs$core$IIndexed$_nth$arity$2(null,i__28286);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28287,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28287,(1),null);
var G__28288_28300 = v;
var G__28289_28301 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28288_28300,G__28289_28301) : f.call(null,G__28288_28300,G__28289_28301));

var G__28302 = seq__28283;
var G__28303 = chunk__28284;
var G__28304 = count__28285;
var G__28305 = (i__28286 + (1));
seq__28283 = G__28302;
chunk__28284 = G__28303;
count__28285 = G__28304;
i__28286 = G__28305;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__28283);
if(temp__4126__auto__){
var seq__28283__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__28283__$1)){
var c__18405__auto__ = cljs.core.chunk_first(seq__28283__$1);
var G__28306 = cljs.core.chunk_rest(seq__28283__$1);
var G__28307 = c__18405__auto__;
var G__28308 = cljs.core.count(c__18405__auto__);
var G__28309 = (0);
seq__28283 = G__28306;
chunk__28284 = G__28307;
count__28285 = G__28308;
i__28286 = G__28309;
continue;
} else {
var vec__28290 = cljs.core.first(seq__28283__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28290,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28290,(1),null);
var G__28291_28310 = v;
var G__28292_28311 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28291_28310,G__28292_28311) : f.call(null,G__28291_28310,G__28292_28311));

var G__28312 = cljs.core.next(seq__28283__$1);
var G__28313 = null;
var G__28314 = (0);
var G__28315 = (0);
seq__28283 = G__28312;
chunk__28284 = G__28313;
count__28285 = G__28314;
i__28286 = G__28315;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__28293 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__28293) : cljs.core.keys.call(null,G__28293));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__28294 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__28294) : cljs.core.vals.call(null,G__28294));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__28295 = k;
var G__28296 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__28295,G__28296) : self__.comp.call(null,G__28295,G__28296));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__28316 = t.left;
t = G__28316;
continue;
} else {
var G__28317 = t.right;
t = G__28317;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18039__auto__ = self__.__hash;
if(!((h__18039__auto__ == null))){
return h__18039__auto__;
} else {
var h__18039__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__18039__auto____$1;

return h__18039__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__28318 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__28319 = cljs.core.next(es);
ret = G__28318;
es = G__28319;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__28320 = null;
var G__28320__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__28320__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__28320 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28320__2.call(this,self__,k);
case 3:
return G__28320__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28320.cljs$core$IFn$_invoke$arity$2 = G__28320__2;
G__28320.cljs$core$IFn$_invoke$arity$3 = G__28320__3;
return G__28320;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args28282){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28282)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__28297 = k;
var G__28298 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__28297,G__28298) : self__.comp.call(null,G__28297,G__28298));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__28321 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__28322 = t.left;
stack = G__28321;
t = G__28322;
continue;
} else {
var G__28323 = stack;
var G__28324 = t.right;
stack = G__28323;
t = G__28324;
continue;
}
} else {
if((c > (0))){
var G__28325 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__28326 = t.right;
stack = G__28325;
t = G__28326;
continue;
} else {
var G__28327 = stack;
var G__28328 = t.left;
stack = G__28327;
t = G__28328;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__28299 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__28299) : cljs.core.key.call(null,G__28299));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18596__auto__ = this;
return cljs.core.es6_iterator(this__18596__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__28329 = cljs.core.nnext(in$);
var G__28330 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__28329;
out = G__28330;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__28331__i = 0, G__28331__a = new Array(arguments.length -  0);
while (G__28331__i < G__28331__a.length) {G__28331__a[G__28331__i] = arguments[G__28331__i + 0]; ++G__28331__i;}
  keyvals = new cljs.core.IndexedSeq(G__28331__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__28332){
var keyvals = cljs.core.seq(arglist__28332);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__28333__i = 0, G__28333__a = new Array(arguments.length -  0);
while (G__28333__i < G__28333__a.length) {G__28333__a[G__28333__i] = arguments[G__28333__i + 0]; ++G__28333__i;}
  keyvals = new cljs.core.IndexedSeq(G__28333__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__28334){
var keyvals = cljs.core.seq(arglist__28334);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj28338 = {};
return obj28338;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__28339 = cljs.core.nnext(kvs);
kvs = G__28339;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__28340__i = 0, G__28340__a = new Array(arguments.length -  0);
while (G__28340__i < G__28340__a.length) {G__28340__a[G__28340__i] = arguments[G__28340__i + 0]; ++G__28340__i;}
  keyvals = new cljs.core.IndexedSeq(G__28340__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__28341){
var keyvals = cljs.core.seq(arglist__28341);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__28342 = cljs.core.nnext(in$);
var G__28343 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__28342;
out = G__28343;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__28344__i = 0, G__28344__a = new Array(arguments.length -  0);
while (G__28344__i < G__28344__a.length) {G__28344__a[G__28344__i] = arguments[G__28344__i + 0]; ++G__28344__i;}
  keyvals = new cljs.core.IndexedSeq(G__28344__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__28345){
var keyvals = cljs.core.seq(arglist__28345);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__28346 = cljs.core.nnext(in$);
var G__28347 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__28346;
out = G__28347;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__28348__i = 0, G__28348__a = new Array(arguments.length -  1);
while (G__28348__i < G__28348__a.length) {G__28348__a[G__28348__i] = arguments[G__28348__i + 1]; ++G__28348__i;}
  keyvals = new cljs.core.IndexedSeq(G__28348__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__28349){
var comparator = cljs.core.first(arglist__28349);
var keyvals = cljs.core.rest(arglist__28349);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__28350 = self__.mseq;
if(G__28350){
var bit__18299__auto__ = (G__28350.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__18299__auto__) || (G__28350.cljs$core$INext$)){
return true;
} else {
if((!G__28350.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__28350);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__28350);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__28351 = self__.mseq;
if(G__28351){
var bit__18299__auto__ = (G__28351.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__18299__auto__) || (G__28351.cljs$core$INext$)){
return true;
} else {
if((!G__28351.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__28351);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__28351);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18596__auto__ = this;
return cljs.core.es6_iterator(this__18596__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__28352 = self__.mseq;
if(G__28352){
var bit__18299__auto__ = (G__28352.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__18299__auto__) || (G__28352.cljs$core$INext$)){
return true;
} else {
if((!G__28352.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__28352);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__28352);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__28353 = self__.mseq;
if(G__28353){
var bit__18299__auto__ = (G__28353.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__18299__auto__) || (G__28353.cljs$core$INext$)){
return true;
} else {
if((!G__28353.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__28353);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__28353);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18596__auto__ = this;
return cljs.core.es6_iterator(this__18596__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__28354_SHARP_,p2__28355_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__17618__auto__ = p1__28354_SHARP_;
if(cljs.core.truth_(or__17618__auto__)){
return or__17618__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__28355_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__28356__i = 0, G__28356__a = new Array(arguments.length -  0);
while (G__28356__i < G__28356__a.length) {G__28356__a[G__28356__i] = arguments[G__28356__i + 0]; ++G__28356__i;}
  maps = new cljs.core.IndexedSeq(G__28356__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__28357){
var maps = cljs.core.seq(arglist__28357);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__28360 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__28361 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28360,G__28361) : f.call(null,G__28360,G__28361));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__17618__auto__ = m1;
if(cljs.core.truth_(or__17618__auto__)){
return or__17618__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__28362__i = 0, G__28362__a = new Array(arguments.length -  1);
while (G__28362__i < G__28362__a.length) {G__28362__a[G__28362__i] = arguments[G__28362__i + 1]; ++G__28362__i;}
  maps = new cljs.core.IndexedSeq(G__28362__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__28363){
var f = cljs.core.first(arglist__28363);
var maps = cljs.core.rest(arglist__28363);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__28364 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__28365 = cljs.core.next(keys);
ret = G__28364;
keys = G__28365;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__28368 = cljs.core.seq(coll);
var chunk__28369 = null;
var count__28370 = (0);
var i__28371 = (0);
while(true){
if((i__28371 < count__28370)){
var vec__28372 = chunk__28369.cljs$core$IIndexed$_nth$arity$2(null,i__28371);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28372,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28372,(1),null);
var G__28373_28378 = v;
var G__28374_28379 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28373_28378,G__28374_28379) : f.call(null,G__28373_28378,G__28374_28379));

var G__28380 = seq__28368;
var G__28381 = chunk__28369;
var G__28382 = count__28370;
var G__28383 = (i__28371 + (1));
seq__28368 = G__28380;
chunk__28369 = G__28381;
count__28370 = G__28382;
i__28371 = G__28383;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__28368);
if(temp__4126__auto__){
var seq__28368__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__28368__$1)){
var c__18405__auto__ = cljs.core.chunk_first(seq__28368__$1);
var G__28384 = cljs.core.chunk_rest(seq__28368__$1);
var G__28385 = c__18405__auto__;
var G__28386 = cljs.core.count(c__18405__auto__);
var G__28387 = (0);
seq__28368 = G__28384;
chunk__28369 = G__28385;
count__28370 = G__28386;
i__28371 = G__28387;
continue;
} else {
var vec__28375 = cljs.core.first(seq__28368__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28375,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28375,(1),null);
var G__28376_28388 = v;
var G__28377_28389 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28376_28388,G__28377_28389) : f.call(null,G__28376_28388,G__28377_28389));

var G__28390 = cljs.core.next(seq__28368__$1);
var G__28391 = null;
var G__28392 = (0);
var G__28393 = (0);
seq__28368 = G__28390;
chunk__28369 = G__28391;
count__28370 = G__28392;
i__28371 = G__28393;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18039__auto__ = self__.__hash;
if(!((h__18039__auto__ == null))){
return h__18039__auto__;
} else {
var h__18039__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__18039__auto____$1;

return h__18039__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__28366_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__28366_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__28394 = null;
var G__28394__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__28394__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__28394 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28394__2.call(this,self__,k);
case 3:
return G__28394__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28394.cljs$core$IFn$_invoke$arity$2 = G__28394__2;
G__28394.cljs$core$IFn$_invoke$arity$3 = G__28394__3;
return G__28394;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args28367){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28367)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__28395 = (i + (1));
var G__28396 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__28395;
out = G__28396;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__28397 = (i + (1));
var G__28398 = cljs.core._conj_BANG_(out,(items[i]));
i = G__28397;
out = G__28398;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18596__auto__ = this;
return cljs.core.es6_iterator(this__18596__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__28400 = null;
var G__28400__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__28400__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__28400 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28400__2.call(this,self__,k);
case 3:
return G__28400__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28400.cljs$core$IFn$_invoke$arity$2 = G__28400__2;
G__28400.cljs$core$IFn$_invoke$arity$3 = G__28400__3;
return G__28400;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args28399){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28399)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__28403 = cljs.core.seq(coll);
var chunk__28404 = null;
var count__28405 = (0);
var i__28406 = (0);
while(true){
if((i__28406 < count__28405)){
var vec__28407 = chunk__28404.cljs$core$IIndexed$_nth$arity$2(null,i__28406);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28407,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28407,(1),null);
var G__28408_28413 = v;
var G__28409_28414 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28408_28413,G__28409_28414) : f.call(null,G__28408_28413,G__28409_28414));

var G__28415 = seq__28403;
var G__28416 = chunk__28404;
var G__28417 = count__28405;
var G__28418 = (i__28406 + (1));
seq__28403 = G__28415;
chunk__28404 = G__28416;
count__28405 = G__28417;
i__28406 = G__28418;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__28403);
if(temp__4126__auto__){
var seq__28403__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__28403__$1)){
var c__18405__auto__ = cljs.core.chunk_first(seq__28403__$1);
var G__28419 = cljs.core.chunk_rest(seq__28403__$1);
var G__28420 = c__18405__auto__;
var G__28421 = cljs.core.count(c__18405__auto__);
var G__28422 = (0);
seq__28403 = G__28419;
chunk__28404 = G__28420;
count__28405 = G__28421;
i__28406 = G__28422;
continue;
} else {
var vec__28410 = cljs.core.first(seq__28403__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28410,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28410,(1),null);
var G__28411_28423 = v;
var G__28412_28424 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28411_28423,G__28412_28424) : f.call(null,G__28411_28423,G__28412_28424));

var G__28425 = cljs.core.next(seq__28403__$1);
var G__28426 = null;
var G__28427 = (0);
var G__28428 = (0);
seq__28403 = G__28425;
chunk__28404 = G__28426;
count__28405 = G__28427;
i__28406 = G__28428;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__18039__auto__ = self__.__hash;
if(!((h__18039__auto__ == null))){
return h__18039__auto__;
} else {
var h__18039__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__18039__auto____$1;

return h__18039__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__28401_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__28401_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__28429 = null;
var G__28429__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__28429__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__28429 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__28429__2.call(this,self__,k);
case 3:
return G__28429__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28429.cljs$core$IFn$_invoke$arity$2 = G__28429__2;
G__28429.cljs$core$IFn$_invoke$arity$3 = G__28429__3;
return G__28429;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args28402){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28402)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18596__auto__ = this;
return cljs.core.es6_iterator(this__18596__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__18499__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__18499__auto__.length)){
var G__28430 = (i + (1));
var G__28431 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__28430;
res = G__28431;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__28432 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__28433 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__28432;
out = G__28433;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__28434__delegate = function (keys){
return cljs.core.set(keys);
};
var G__28434 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__28435__i = 0, G__28435__a = new Array(arguments.length -  0);
while (G__28435__i < G__28435__a.length) {G__28435__a[G__28435__i] = arguments[G__28435__i + 0]; ++G__28435__i;}
  keys = new cljs.core.IndexedSeq(G__28435__a,0);
} 
return G__28434__delegate.call(this,keys);};
G__28434.cljs$lang$maxFixedArity = 0;
G__28434.cljs$lang$applyTo = (function (arglist__28436){
var keys = cljs.core.seq(arglist__28436);
return G__28434__delegate(keys);
});
G__28434.cljs$core$IFn$_invoke$arity$variadic = G__28434__delegate;
return G__28434;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__28437 = null;
if (arguments.length > 0) {
var G__28438__i = 0, G__28438__a = new Array(arguments.length -  0);
while (G__28438__i < G__28438__a.length) {G__28438__a[G__28438__i] = arguments[G__28438__i + 0]; ++G__28438__i;}
G__28437 = new cljs.core.IndexedSeq(G__28438__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__28437);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__28439__i = 0, G__28439__a = new Array(arguments.length -  0);
while (G__28439__i < G__28439__a.length) {G__28439__a[G__28439__i] = arguments[G__28439__i + 0]; ++G__28439__i;}
  keys = new cljs.core.IndexedSeq(G__28439__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__28440){
var keys = cljs.core.seq(arglist__28440);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__28441__i = 0, G__28441__a = new Array(arguments.length -  1);
while (G__28441__i < G__28441__a.length) {G__28441__a[G__28441__i] = arguments[G__28441__i + 1]; ++G__28441__i;}
  keys = new cljs.core.IndexedSeq(G__28441__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__28442){
var comparator = cljs.core.first(arglist__28442);
var keys = cljs.core.rest(arglist__28442);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__28443_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__28443_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__28443_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__28444_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__28444_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__28444_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__28465 = null;
var G__28465__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28465__1 = (function (result){
var G__28455 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28455) : rf.call(null,G__28455));
});
var G__28465__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__28456 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28456) : cljs.core.deref.call(null,G__28456));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__28457 = result;
var G__28458 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28457,G__28458) : rf.call(null,G__28457,G__28458));
}
});
G__28465 = function(result,input){
switch(arguments.length){
case 0:
return G__28465__0.call(this);
case 1:
return G__28465__1.call(this,result);
case 2:
return G__28465__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28465.cljs$core$IFn$_invoke$arity$0 = G__28465__0;
G__28465.cljs$core$IFn$_invoke$arity$1 = G__28465__1;
G__28465.cljs$core$IFn$_invoke$arity$2 = G__28465__2;
return G__28465;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__28463,seen__$1){
while(true){
var vec__28464 = p__28463;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28464,(0),null);
var xs__$1 = vec__28464;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__28466 = cljs.core.rest(s);
var G__28467 = seen__$1;
p__28463 = G__28466;
seen__$1 = G__28467;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__28468 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__28469 = cljs.core.next(s__$1);
ret = G__28468;
s__$1 = G__28469;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__28471 = x;
if(G__28471){
var bit__18292__auto__ = (G__28471.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__18292__auto__) || (G__28471.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__28472 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__28473 = cljs.core.next(ks);
var G__28474 = cljs.core.next(vs);
map = G__28472;
ks = G__28473;
vs = G__28474;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__28485 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__28485) : k.call(null,G__28485));
})() > (function (){var G__28486 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__28486) : k.call(null,G__28486));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__28487__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__28475_SHARP_,p2__28476_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__28475_SHARP_,p2__28476_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__28487 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__28488__i = 0, G__28488__a = new Array(arguments.length -  3);
while (G__28488__i < G__28488__a.length) {G__28488__a[G__28488__i] = arguments[G__28488__i + 3]; ++G__28488__i;}
  more = new cljs.core.IndexedSeq(G__28488__a,0);
} 
return G__28487__delegate.call(this,k,x,y,more);};
G__28487.cljs$lang$maxFixedArity = 3;
G__28487.cljs$lang$applyTo = (function (arglist__28489){
var k = cljs.core.first(arglist__28489);
arglist__28489 = cljs.core.next(arglist__28489);
var x = cljs.core.first(arglist__28489);
arglist__28489 = cljs.core.next(arglist__28489);
var y = cljs.core.first(arglist__28489);
var more = cljs.core.rest(arglist__28489);
return G__28487__delegate(k,x,y,more);
});
G__28487.cljs$core$IFn$_invoke$arity$variadic = G__28487__delegate;
return G__28487;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__28490 = null;
if (arguments.length > 3) {
var G__28491__i = 0, G__28491__a = new Array(arguments.length -  3);
while (G__28491__i < G__28491__a.length) {G__28491__a[G__28491__i] = arguments[G__28491__i + 3]; ++G__28491__i;}
G__28490 = new cljs.core.IndexedSeq(G__28491__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__28490);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__28502 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__28502) : k.call(null,G__28502));
})() < (function (){var G__28503 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__28503) : k.call(null,G__28503));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__28504__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__28492_SHARP_,p2__28493_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__28492_SHARP_,p2__28493_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__28504 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__28505__i = 0, G__28505__a = new Array(arguments.length -  3);
while (G__28505__i < G__28505__a.length) {G__28505__a[G__28505__i] = arguments[G__28505__i + 3]; ++G__28505__i;}
  more = new cljs.core.IndexedSeq(G__28505__a,0);
} 
return G__28504__delegate.call(this,k,x,y,more);};
G__28504.cljs$lang$maxFixedArity = 3;
G__28504.cljs$lang$applyTo = (function (arglist__28506){
var k = cljs.core.first(arglist__28506);
arglist__28506 = cljs.core.next(arglist__28506);
var x = cljs.core.first(arglist__28506);
arglist__28506 = cljs.core.next(arglist__28506);
var y = cljs.core.first(arglist__28506);
var more = cljs.core.rest(arglist__28506);
return G__28504__delegate(k,x,y,more);
});
G__28504.cljs$core$IFn$_invoke$arity$variadic = G__28504__delegate;
return G__28504;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__28507 = null;
if (arguments.length > 3) {
var G__28508__i = 0, G__28508__a = new Array(arguments.length -  3);
while (G__28508__i < G__28508__a.length) {G__28508__a[G__28508__i] = arguments[G__28508__i + 3]; ++G__28508__i;}
G__28507 = new cljs.core.IndexedSeq(G__28508__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__28507);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__28525 = null;
var G__28525__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28525__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__28520 = result;
var G__28521 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28520,G__28521) : rf.call(null,G__28520,G__28521));
})());
})());
var G__28522 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28522) : rf.call(null,G__28522));
});
var G__28525__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__28523 = result;
var G__28524 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28523,G__28524) : rf.call(null,G__28523,G__28524));
} else {
return result;
}
});
G__28525 = function(result,input){
switch(arguments.length){
case 0:
return G__28525__0.call(this);
case 1:
return G__28525__1.call(this,result);
case 2:
return G__28525__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28525.cljs$core$IFn$_invoke$arity$0 = G__28525__0;
G__28525.cljs$core$IFn$_invoke$arity$1 = G__28525__1;
G__28525.cljs$core$IFn$_invoke$arity$2 = G__28525__2;
return G__28525;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__28538 = null;
var G__28538__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28538__1 = (function (result){
var G__28533 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28533) : rf.call(null,G__28533));
});
var G__28538__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__28534 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__28534) : pred.call(null,G__28534));
})())){
var G__28535 = result;
var G__28536 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28535,G__28536) : rf.call(null,G__28535,G__28536));
} else {
return cljs.core.reduced(result);
}
});
G__28538 = function(result,input){
switch(arguments.length){
case 0:
return G__28538__0.call(this);
case 1:
return G__28538__1.call(this,result);
case 2:
return G__28538__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28538.cljs$core$IFn$_invoke$arity$0 = G__28538__0;
G__28538.cljs$core$IFn$_invoke$arity$1 = G__28538__1;
G__28538.cljs$core$IFn$_invoke$arity$2 = G__28538__2;
return G__28538;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__28537 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__28537) : pred.call(null,G__28537));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__28543 = (function (){var G__28545 = cljs.core._entry_key(sc,e);
var G__28546 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__28545,G__28546) : comp.call(null,G__28545,G__28546));
})();
var G__28544 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__28543,G__28544) : test.call(null,G__28543,G__28544));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__28550 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28550,(0),null);
var s = vec__28550;
if(cljs.core.truth_((function (){var G__28551 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__28551) : include.call(null,G__28551));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__28552 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28552,(0),null);
var s = vec__28552;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__28556 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28556,(0),null);
var s = vec__28556;
if(cljs.core.truth_((function (){var G__28557 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__28557) : include.call(null,G__28557));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__28558 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28558,(0),null);
var s = vec__28558;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__28559 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__28559) : Math.ceil.call(null,G__28559));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__18039__auto__ = self__.__hash;
if(!((h__18039__auto__ == null))){
return h__18039__auto__;
} else {
var h__18039__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__18039__auto____$1;

return h__18039__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__28560 = ret;
var G__28561 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28560,G__28561) : f.call(null,G__28560,G__28561));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__28562 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28562) : cljs.core.deref.call(null,G__28562));
} else {
var G__28563 = (i + self__.step);
var G__28564 = ret__$1;
i = G__28563;
ret = G__28564;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18596__auto__ = this;
return cljs.core.es6_iterator(this__18596__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__28582 = null;
var G__28582__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28582__1 = (function (result){
var G__28579 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28579) : rf.call(null,G__28579));
});
var G__28582__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__28580 = result;
var G__28581 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28580,G__28581) : rf.call(null,G__28580,G__28581));
} else {
return result;
}
});
G__28582 = function(result,input){
switch(arguments.length){
case 0:
return G__28582__0.call(this);
case 1:
return G__28582__1.call(this,result);
case 2:
return G__28582__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28582.cljs$core$IFn$_invoke$arity$0 = G__28582__0;
G__28582.cljs$core$IFn$_invoke$arity$1 = G__28582__1;
G__28582.cljs$core$IFn$_invoke$arity$2 = G__28582__2;
return G__28582;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__28604 = null;
var G__28604__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28604__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__28595 = result;
var G__28596 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28595,G__28596) : rf.call(null,G__28595,G__28596));
})());
})());
var G__28597 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28597) : rf.call(null,G__28597));
});
var G__28604__2 = (function (result,input){
var pval = (function (){var G__28598 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28598) : cljs.core.deref.call(null,G__28598));
})();
var val = (function (){var G__28599 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28599) : f.call(null,G__28599));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__28600 = result;
var G__28601 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28600,G__28601) : rf.call(null,G__28600,G__28601));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__28604 = function(result,input){
switch(arguments.length){
case 0:
return G__28604__0.call(this);
case 1:
return G__28604__1.call(this,result);
case 2:
return G__28604__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28604.cljs$core$IFn$_invoke$arity$0 = G__28604__0;
G__28604.cljs$core$IFn$_invoke$arity$1 = G__28604__1;
G__28604.cljs$core$IFn$_invoke$arity$2 = G__28604__2;
return G__28604;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__28602 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28602) : f.call(null,G__28602));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__28583_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__28603 = p1__28583_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28603) : f.call(null,G__28603));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__28613 = init;
var G__28614 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28613,G__28614) : f.call(null,G__28613,G__28614));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__28709 = null;
var G__28709__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__28709__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28667 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28667) : f.call(null,G__28667));
})()],null));
});
var G__28709__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28668 = x;
var G__28669 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28668,G__28669) : f.call(null,G__28668,G__28669));
})()],null));
});
var G__28709__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28670 = x;
var G__28671 = y;
var G__28672 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28670,G__28671,G__28672) : f.call(null,G__28670,G__28671,G__28672));
})()],null));
});
var G__28709__4 = (function() { 
var G__28710__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__28710 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28711__i = 0, G__28711__a = new Array(arguments.length -  3);
while (G__28711__i < G__28711__a.length) {G__28711__a[G__28711__i] = arguments[G__28711__i + 3]; ++G__28711__i;}
  args = new cljs.core.IndexedSeq(G__28711__a,0);
} 
return G__28710__delegate.call(this,x,y,z,args);};
G__28710.cljs$lang$maxFixedArity = 3;
G__28710.cljs$lang$applyTo = (function (arglist__28712){
var x = cljs.core.first(arglist__28712);
arglist__28712 = cljs.core.next(arglist__28712);
var y = cljs.core.first(arglist__28712);
arglist__28712 = cljs.core.next(arglist__28712);
var z = cljs.core.first(arglist__28712);
var args = cljs.core.rest(arglist__28712);
return G__28710__delegate(x,y,z,args);
});
G__28710.cljs$core$IFn$_invoke$arity$variadic = G__28710__delegate;
return G__28710;
})()
;
G__28709 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__28709__0.call(this);
case 1:
return G__28709__1.call(this,x);
case 2:
return G__28709__2.call(this,x,y);
case 3:
return G__28709__3.call(this,x,y,z);
default:
var G__28713 = null;
if (arguments.length > 3) {
var G__28714__i = 0, G__28714__a = new Array(arguments.length -  3);
while (G__28714__i < G__28714__a.length) {G__28714__a[G__28714__i] = arguments[G__28714__i + 3]; ++G__28714__i;}
G__28713 = new cljs.core.IndexedSeq(G__28714__a,0);
}
return G__28709__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28713);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28709.cljs$lang$maxFixedArity = 3;
G__28709.cljs$lang$applyTo = G__28709__4.cljs$lang$applyTo;
G__28709.cljs$core$IFn$_invoke$arity$0 = G__28709__0;
G__28709.cljs$core$IFn$_invoke$arity$1 = G__28709__1;
G__28709.cljs$core$IFn$_invoke$arity$2 = G__28709__2;
G__28709.cljs$core$IFn$_invoke$arity$3 = G__28709__3;
G__28709.cljs$core$IFn$_invoke$arity$variadic = G__28709__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28709;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__28715 = null;
var G__28715__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__28715__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28673 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28673) : f.call(null,G__28673));
})(),(function (){var G__28674 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__28674) : g.call(null,G__28674));
})()],null));
});
var G__28715__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28675 = x;
var G__28676 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28675,G__28676) : f.call(null,G__28675,G__28676));
})(),(function (){var G__28677 = x;
var G__28678 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__28677,G__28678) : g.call(null,G__28677,G__28678));
})()],null));
});
var G__28715__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28679 = x;
var G__28680 = y;
var G__28681 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28679,G__28680,G__28681) : f.call(null,G__28679,G__28680,G__28681));
})(),(function (){var G__28682 = x;
var G__28683 = y;
var G__28684 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__28682,G__28683,G__28684) : g.call(null,G__28682,G__28683,G__28684));
})()],null));
});
var G__28715__4 = (function() { 
var G__28716__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__28716 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28717__i = 0, G__28717__a = new Array(arguments.length -  3);
while (G__28717__i < G__28717__a.length) {G__28717__a[G__28717__i] = arguments[G__28717__i + 3]; ++G__28717__i;}
  args = new cljs.core.IndexedSeq(G__28717__a,0);
} 
return G__28716__delegate.call(this,x,y,z,args);};
G__28716.cljs$lang$maxFixedArity = 3;
G__28716.cljs$lang$applyTo = (function (arglist__28718){
var x = cljs.core.first(arglist__28718);
arglist__28718 = cljs.core.next(arglist__28718);
var y = cljs.core.first(arglist__28718);
arglist__28718 = cljs.core.next(arglist__28718);
var z = cljs.core.first(arglist__28718);
var args = cljs.core.rest(arglist__28718);
return G__28716__delegate(x,y,z,args);
});
G__28716.cljs$core$IFn$_invoke$arity$variadic = G__28716__delegate;
return G__28716;
})()
;
G__28715 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__28715__0.call(this);
case 1:
return G__28715__1.call(this,x);
case 2:
return G__28715__2.call(this,x,y);
case 3:
return G__28715__3.call(this,x,y,z);
default:
var G__28719 = null;
if (arguments.length > 3) {
var G__28720__i = 0, G__28720__a = new Array(arguments.length -  3);
while (G__28720__i < G__28720__a.length) {G__28720__a[G__28720__i] = arguments[G__28720__i + 3]; ++G__28720__i;}
G__28719 = new cljs.core.IndexedSeq(G__28720__a,0);
}
return G__28715__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28719);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28715.cljs$lang$maxFixedArity = 3;
G__28715.cljs$lang$applyTo = G__28715__4.cljs$lang$applyTo;
G__28715.cljs$core$IFn$_invoke$arity$0 = G__28715__0;
G__28715.cljs$core$IFn$_invoke$arity$1 = G__28715__1;
G__28715.cljs$core$IFn$_invoke$arity$2 = G__28715__2;
G__28715.cljs$core$IFn$_invoke$arity$3 = G__28715__3;
G__28715.cljs$core$IFn$_invoke$arity$variadic = G__28715__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28715;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__28721 = null;
var G__28721__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__28721__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28685 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28685) : f.call(null,G__28685));
})(),(function (){var G__28686 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__28686) : g.call(null,G__28686));
})(),(function (){var G__28687 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__28687) : h.call(null,G__28687));
})()],null));
});
var G__28721__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28688 = x;
var G__28689 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28688,G__28689) : f.call(null,G__28688,G__28689));
})(),(function (){var G__28690 = x;
var G__28691 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__28690,G__28691) : g.call(null,G__28690,G__28691));
})(),(function (){var G__28692 = x;
var G__28693 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__28692,G__28693) : h.call(null,G__28692,G__28693));
})()],null));
});
var G__28721__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__28694 = x;
var G__28695 = y;
var G__28696 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__28694,G__28695,G__28696) : f.call(null,G__28694,G__28695,G__28696));
})(),(function (){var G__28697 = x;
var G__28698 = y;
var G__28699 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__28697,G__28698,G__28699) : g.call(null,G__28697,G__28698,G__28699));
})(),(function (){var G__28700 = x;
var G__28701 = y;
var G__28702 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__28700,G__28701,G__28702) : h.call(null,G__28700,G__28701,G__28702));
})()],null));
});
var G__28721__4 = (function() { 
var G__28722__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__28722 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28723__i = 0, G__28723__a = new Array(arguments.length -  3);
while (G__28723__i < G__28723__a.length) {G__28723__a[G__28723__i] = arguments[G__28723__i + 3]; ++G__28723__i;}
  args = new cljs.core.IndexedSeq(G__28723__a,0);
} 
return G__28722__delegate.call(this,x,y,z,args);};
G__28722.cljs$lang$maxFixedArity = 3;
G__28722.cljs$lang$applyTo = (function (arglist__28724){
var x = cljs.core.first(arglist__28724);
arglist__28724 = cljs.core.next(arglist__28724);
var y = cljs.core.first(arglist__28724);
arglist__28724 = cljs.core.next(arglist__28724);
var z = cljs.core.first(arglist__28724);
var args = cljs.core.rest(arglist__28724);
return G__28722__delegate(x,y,z,args);
});
G__28722.cljs$core$IFn$_invoke$arity$variadic = G__28722__delegate;
return G__28722;
})()
;
G__28721 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__28721__0.call(this);
case 1:
return G__28721__1.call(this,x);
case 2:
return G__28721__2.call(this,x,y);
case 3:
return G__28721__3.call(this,x,y,z);
default:
var G__28725 = null;
if (arguments.length > 3) {
var G__28726__i = 0, G__28726__a = new Array(arguments.length -  3);
while (G__28726__i < G__28726__a.length) {G__28726__a[G__28726__i] = arguments[G__28726__i + 3]; ++G__28726__i;}
G__28725 = new cljs.core.IndexedSeq(G__28726__a,0);
}
return G__28721__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28725);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28721.cljs$lang$maxFixedArity = 3;
G__28721.cljs$lang$applyTo = G__28721__4.cljs$lang$applyTo;
G__28721.cljs$core$IFn$_invoke$arity$0 = G__28721__0;
G__28721.cljs$core$IFn$_invoke$arity$1 = G__28721__1;
G__28721.cljs$core$IFn$_invoke$arity$2 = G__28721__2;
G__28721.cljs$core$IFn$_invoke$arity$3 = G__28721__3;
G__28721.cljs$core$IFn$_invoke$arity$variadic = G__28721__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28721;
})()
});
var juxt__4 = (function() { 
var G__28727__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__28728 = null;
var G__28728__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__28615_SHARP_,p2__28616_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__28615_SHARP_,(function (){return (p2__28616_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__28616_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__28616_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__28728__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__28617_SHARP_,p2__28618_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__28617_SHARP_,(function (){var G__28703 = x;
return (p2__28618_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__28618_SHARP_.cljs$core$IFn$_invoke$arity$1(G__28703) : p2__28618_SHARP_.call(null,G__28703));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__28728__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__28619_SHARP_,p2__28620_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__28619_SHARP_,(function (){var G__28704 = x;
var G__28705 = y;
return (p2__28620_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__28620_SHARP_.cljs$core$IFn$_invoke$arity$2(G__28704,G__28705) : p2__28620_SHARP_.call(null,G__28704,G__28705));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__28728__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__28621_SHARP_,p2__28622_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__28621_SHARP_,(function (){var G__28706 = x;
var G__28707 = y;
var G__28708 = z;
return (p2__28622_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__28622_SHARP_.cljs$core$IFn$_invoke$arity$3(G__28706,G__28707,G__28708) : p2__28622_SHARP_.call(null,G__28706,G__28707,G__28708));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__28728__4 = (function() { 
var G__28729__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__28623_SHARP_,p2__28624_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__28623_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__28624_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__28729 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__28730__i = 0, G__28730__a = new Array(arguments.length -  3);
while (G__28730__i < G__28730__a.length) {G__28730__a[G__28730__i] = arguments[G__28730__i + 3]; ++G__28730__i;}
  args = new cljs.core.IndexedSeq(G__28730__a,0);
} 
return G__28729__delegate.call(this,x,y,z,args);};
G__28729.cljs$lang$maxFixedArity = 3;
G__28729.cljs$lang$applyTo = (function (arglist__28731){
var x = cljs.core.first(arglist__28731);
arglist__28731 = cljs.core.next(arglist__28731);
var y = cljs.core.first(arglist__28731);
arglist__28731 = cljs.core.next(arglist__28731);
var z = cljs.core.first(arglist__28731);
var args = cljs.core.rest(arglist__28731);
return G__28729__delegate(x,y,z,args);
});
G__28729.cljs$core$IFn$_invoke$arity$variadic = G__28729__delegate;
return G__28729;
})()
;
G__28728 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__28728__0.call(this);
case 1:
return G__28728__1.call(this,x);
case 2:
return G__28728__2.call(this,x,y);
case 3:
return G__28728__3.call(this,x,y,z);
default:
var G__28732 = null;
if (arguments.length > 3) {
var G__28733__i = 0, G__28733__a = new Array(arguments.length -  3);
while (G__28733__i < G__28733__a.length) {G__28733__a[G__28733__i] = arguments[G__28733__i + 3]; ++G__28733__i;}
G__28732 = new cljs.core.IndexedSeq(G__28733__a,0);
}
return G__28728__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__28732);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28728.cljs$lang$maxFixedArity = 3;
G__28728.cljs$lang$applyTo = G__28728__4.cljs$lang$applyTo;
G__28728.cljs$core$IFn$_invoke$arity$0 = G__28728__0;
G__28728.cljs$core$IFn$_invoke$arity$1 = G__28728__1;
G__28728.cljs$core$IFn$_invoke$arity$2 = G__28728__2;
G__28728.cljs$core$IFn$_invoke$arity$3 = G__28728__3;
G__28728.cljs$core$IFn$_invoke$arity$variadic = G__28728__4.cljs$core$IFn$_invoke$arity$variadic;
return G__28728;
})()
;})(fs__$1))
};
var G__28727 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__28734__i = 0, G__28734__a = new Array(arguments.length -  3);
while (G__28734__i < G__28734__a.length) {G__28734__a[G__28734__i] = arguments[G__28734__i + 3]; ++G__28734__i;}
  fs = new cljs.core.IndexedSeq(G__28734__a,0);
} 
return G__28727__delegate.call(this,f,g,h,fs);};
G__28727.cljs$lang$maxFixedArity = 3;
G__28727.cljs$lang$applyTo = (function (arglist__28735){
var f = cljs.core.first(arglist__28735);
arglist__28735 = cljs.core.next(arglist__28735);
var g = cljs.core.first(arglist__28735);
arglist__28735 = cljs.core.next(arglist__28735);
var h = cljs.core.first(arglist__28735);
var fs = cljs.core.rest(arglist__28735);
return G__28727__delegate(f,g,h,fs);
});
G__28727.cljs$core$IFn$_invoke$arity$variadic = G__28727__delegate;
return G__28727;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__28736 = null;
if (arguments.length > 3) {
var G__28737__i = 0, G__28737__a = new Array(arguments.length -  3);
while (G__28737__i < G__28737__a.length) {G__28737__a[G__28737__i] = arguments[G__28737__i + 3]; ++G__28737__i;}
G__28736 = new cljs.core.IndexedSeq(G__28737__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__28736);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__28738 = cljs.core.next(coll);
coll = G__28738;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__28739 = (n - (1));
var G__28740 = cljs.core.next(coll);
n = G__28739;
coll = G__28740;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__28744 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28744,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28744,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28744,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_28752 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__17618__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__17618__auto__)){
return or__17618__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__28753_28759 = cljs.core.first(coll);
var G__28754_28760 = writer;
var G__28755_28761 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__28753_28759,G__28754_28760,G__28755_28761) : print_one.call(null,G__28753_28759,G__28754_28760,G__28755_28761));
} else {
}

var coll_28762__$1 = cljs.core.next(coll);
var n_28763 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_28762__$1) && (((n_28763 == null)) || (!((n_28763 === (0)))))){
cljs.core._write(writer,sep);

var G__28756_28764 = cljs.core.first(coll_28762__$1);
var G__28757_28765 = writer;
var G__28758_28766 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__28756_28764,G__28757_28765,G__28758_28766) : print_one.call(null,G__28756_28764,G__28757_28765,G__28758_28766));

var G__28767 = cljs.core.next(coll_28762__$1);
var G__28768 = (n_28763 - (1));
coll_28762__$1 = G__28767;
n_28763 = G__28768;
continue;
} else {
if((cljs.core.seq(coll_28762__$1)) && ((n_28763 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__17618__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__17618__auto__)){
return or__17618__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_28752;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__28773 = cljs.core.seq(ss);
var chunk__28774 = null;
var count__28775 = (0);
var i__28776 = (0);
while(true){
if((i__28776 < count__28775)){
var s = chunk__28774.cljs$core$IIndexed$_nth$arity$2(null,i__28776);
cljs.core._write(writer,s);

var G__28777 = seq__28773;
var G__28778 = chunk__28774;
var G__28779 = count__28775;
var G__28780 = (i__28776 + (1));
seq__28773 = G__28777;
chunk__28774 = G__28778;
count__28775 = G__28779;
i__28776 = G__28780;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__28773);
if(temp__4126__auto__){
var seq__28773__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__28773__$1)){
var c__18405__auto__ = cljs.core.chunk_first(seq__28773__$1);
var G__28781 = cljs.core.chunk_rest(seq__28773__$1);
var G__28782 = c__18405__auto__;
var G__28783 = cljs.core.count(c__18405__auto__);
var G__28784 = (0);
seq__28773 = G__28781;
chunk__28774 = G__28782;
count__28775 = G__28783;
i__28776 = G__28784;
continue;
} else {
var s = cljs.core.first(seq__28773__$1);
cljs.core._write(writer,s);

var G__28785 = cljs.core.next(seq__28773__$1);
var G__28786 = null;
var G__28787 = (0);
var G__28788 = (0);
seq__28773 = G__28785;
chunk__28774 = G__28786;
count__28775 = G__28787;
i__28776 = G__28788;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__28789__i = 0, G__28789__a = new Array(arguments.length -  1);
while (G__28789__i < G__28789__a.length) {G__28789__a[G__28789__i] = arguments[G__28789__i + 1]; ++G__28789__i;}
  ss = new cljs.core.IndexedSeq(G__28789__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__28790){
var writer = cljs.core.first(arglist__28790);
var ss = cljs.core.rest(arglist__28790);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj28792 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj28792;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__28795 = "[\\\\\"\b\f\n\r\t]";
var G__28796 = "g";
return RegExp(G__28795,G__28796);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__17606__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__17606__auto__)){
var and__17606__auto____$1 = (function (){var G__28810 = obj;
if(G__28810){
var bit__18299__auto__ = (G__28810.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__18299__auto__) || (G__28810.cljs$core$IMeta$)){
return true;
} else {
if((!G__28810.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__28810);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__28810);
}
})();
if(and__17606__auto____$1){
return cljs.core.meta(obj);
} else {
return and__17606__auto____$1;
}
} else {
return and__17606__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__28811_28821 = cljs.core.meta(obj);
var G__28812_28822 = writer;
var G__28813_28823 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__28811_28821,G__28812_28822,G__28813_28823) : cljs.core.pr_writer.call(null,G__28811_28821,G__28812_28822,G__28813_28823));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__28814 = obj;
if(G__28814){
var bit__18292__auto__ = (G__28814.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__18292__auto__) || (G__28814.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__28815 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__28816 = cljs.core.pr_writer;
var G__28817 = writer;
var G__28818 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__28815,G__28816,G__28817,G__28818) : cljs.core.print_map.call(null,G__28815,G__28816,G__28817,G__28818));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__28819 = obj;
return goog.isString(G__28819);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__28824 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__28824;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__28820 = obj;
if(G__28820){
var bit__18299__auto__ = (G__28820.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__18299__auto__) || (G__28820.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__28820.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__28820);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__28820);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__28828 = obj;
var G__28829 = writer;
var G__28830 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__28828,G__28829,G__28830) : alt_impl.call(null,G__28828,G__28829,G__28830));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__28835 = cljs.core.seq(cljs.core.next(objs));
var chunk__28836 = null;
var count__28837 = (0);
var i__28838 = (0);
while(true){
if((i__28838 < count__28837)){
var obj = chunk__28836.cljs$core$IIndexed$_nth$arity$2(null,i__28838);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__28839 = seq__28835;
var G__28840 = chunk__28836;
var G__28841 = count__28837;
var G__28842 = (i__28838 + (1));
seq__28835 = G__28839;
chunk__28836 = G__28840;
count__28837 = G__28841;
i__28838 = G__28842;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__28835);
if(temp__4126__auto__){
var seq__28835__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__28835__$1)){
var c__18405__auto__ = cljs.core.chunk_first(seq__28835__$1);
var G__28843 = cljs.core.chunk_rest(seq__28835__$1);
var G__28844 = c__18405__auto__;
var G__28845 = cljs.core.count(c__18405__auto__);
var G__28846 = (0);
seq__28835 = G__28843;
chunk__28836 = G__28844;
count__28837 = G__28845;
i__28838 = G__28846;
continue;
} else {
var obj = cljs.core.first(seq__28835__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__28847 = cljs.core.next(seq__28835__$1);
var G__28848 = null;
var G__28849 = (0);
var G__28850 = (0);
seq__28835 = G__28847;
chunk__28836 = G__28848;
count__28837 = G__28849;
i__28838 = G__28850;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28851__i = 0, G__28851__a = new Array(arguments.length -  0);
while (G__28851__i < G__28851__a.length) {G__28851__a[G__28851__i] = arguments[G__28851__i + 0]; ++G__28851__i;}
  objs = new cljs.core.IndexedSeq(G__28851__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__28852){
var objs = cljs.core.seq(arglist__28852);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28853__i = 0, G__28853__a = new Array(arguments.length -  0);
while (G__28853__i < G__28853__a.length) {G__28853__a[G__28853__i] = arguments[G__28853__i + 0]; ++G__28853__i;}
  objs = new cljs.core.IndexedSeq(G__28853__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__28854){
var objs = cljs.core.seq(arglist__28854);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28855__i = 0, G__28855__a = new Array(arguments.length -  0);
while (G__28855__i < G__28855__a.length) {G__28855__a[G__28855__i] = arguments[G__28855__i + 0]; ++G__28855__i;}
  objs = new cljs.core.IndexedSeq(G__28855__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__28856){
var objs = cljs.core.seq(arglist__28856);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28857__i = 0, G__28857__a = new Array(arguments.length -  0);
while (G__28857__i < G__28857__a.length) {G__28857__a[G__28857__i] = arguments[G__28857__i + 0]; ++G__28857__i;}
  objs = new cljs.core.IndexedSeq(G__28857__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__28858){
var objs = cljs.core.seq(arglist__28858);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28859__i = 0, G__28859__a = new Array(arguments.length -  0);
while (G__28859__i < G__28859__a.length) {G__28859__a[G__28859__i] = arguments[G__28859__i + 0]; ++G__28859__i;}
  objs = new cljs.core.IndexedSeq(G__28859__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__28860){
var objs = cljs.core.seq(arglist__28860);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28861__i = 0, G__28861__a = new Array(arguments.length -  0);
while (G__28861__i < G__28861__a.length) {G__28861__a[G__28861__i] = arguments[G__28861__i + 0]; ++G__28861__i;}
  objs = new cljs.core.IndexedSeq(G__28861__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__28862){
var objs = cljs.core.seq(arglist__28862);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28863__i = 0, G__28863__a = new Array(arguments.length -  0);
while (G__28863__i < G__28863__a.length) {G__28863__a[G__28863__i] = arguments[G__28863__i + 0]; ++G__28863__i;}
  objs = new cljs.core.IndexedSeq(G__28863__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__28864){
var objs = cljs.core.seq(arglist__28864);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__28865__i = 0, G__28865__a = new Array(arguments.length -  0);
while (G__28865__i < G__28865__a.length) {G__28865__a[G__28865__i] = arguments[G__28865__i + 0]; ++G__28865__i;}
  objs = new cljs.core.IndexedSeq(G__28865__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__28866){
var objs = cljs.core.seq(arglist__28866);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__28873_28879 = cljs.core.key(e);
var G__28874_28880 = w;
var G__28875_28881 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__28873_28879,G__28874_28880,G__28875_28881) : print_one.call(null,G__28873_28879,G__28874_28880,G__28875_28881));

cljs.core._write(w," ");

var G__28876 = cljs.core.val(e);
var G__28877 = w;
var G__28878 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__28876,G__28877,G__28878) : print_one.call(null,G__28876,G__28877,G__28878));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__28882__i = 0, G__28882__a = new Array(arguments.length -  2);
while (G__28882__i < G__28882__a.length) {G__28882__a[G__28882__i] = arguments[G__28882__i + 2]; ++G__28882__i;}
  args = new cljs.core.IndexedSeq(G__28882__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__28883){
var iref = cljs.core.first(arglist__28883);
arglist__28883 = cljs.core.next(arglist__28883);
var f = cljs.core.first(arglist__28883);
var args = cljs.core.rest(arglist__28883);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__28886 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__28886) : cljs.core.atom.call(null,G__28886));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__28888 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28888) : cljs.core.deref.call(null,G__28888));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__28889_SHARP_,p2__28890_SHARP_){
var ret = (function (){var G__28893 = p1__28889_SHARP_;
var G__28894 = p2__28890_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28893,G__28894) : rf.call(null,G__28893,G__28894));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__28897 = null;
var G__28897__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28897__1 = (function (result){
var G__28896 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28896) : rf.call(null,G__28896));
});
var G__28897__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__28897 = function(result,input){
switch(arguments.length){
case 0:
return G__28897__0.call(this);
case 1:
return G__28897__1.call(this,result);
case 2:
return G__28897__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28897.cljs$core$IFn$_invoke$arity$0 = G__28897__0;
G__28897.cljs$core$IFn$_invoke$arity$1 = G__28897__1;
G__28897.cljs$core$IFn$_invoke$arity$2 = G__28897__2;
return G__28897;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__28906 = null;
var G__28906__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__28906__1 = (function (result){
var G__28902 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__28902) : rf.call(null,G__28902));
});
var G__28906__2 = (function (result,input){
var prior = (function (){var G__28903 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28903) : cljs.core.deref.call(null,G__28903));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__28904 = result;
var G__28905 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__28904,G__28905) : rf.call(null,G__28904,G__28905));
}
});
G__28906 = function(result,input){
switch(arguments.length){
case 0:
return G__28906__0.call(this);
case 1:
return G__28906__1.call(this,result);
case 2:
return G__28906__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28906.cljs$core$IFn$_invoke$arity$0 = G__28906__0;
G__28906.cljs$core$IFn$_invoke$arity$1 = G__28906__1;
G__28906.cljs$core$IFn$_invoke$arity$2 = G__28906__2;
return G__28906;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18596__auto__ = this;
return cljs.core.es6_iterator(this__18596__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__28908_SHARP_,p2__28907_SHARP_){
var G__28910 = p2__28907_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__28910) : proc.call(null,G__28910));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj28912 = {};
return obj28912;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__17606__auto__ = x;
if(and__17606__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__17606__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__18262__auto__ = (((x == null))?null:x);
return (function (){var or__17618__auto__ = (cljs.core._clj__GT_js[(function (){var G__28916 = x__18262__auto__;
return goog.typeOf(G__28916);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__17606__auto__ = x;
if(and__17606__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__17606__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__18262__auto__ = (((x == null))?null:x);
return (function (){var or__17618__auto__ = (cljs.core._key__GT_js[(function (){var G__28920 = x__18262__auto__;
return goog.typeOf(G__28920);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__28923 = k;
if(G__28923){
var bit__18299__auto__ = null;
if(cljs.core.truth_((function (){var or__17618__auto__ = bit__18299__auto__;
if(cljs.core.truth_(or__17618__auto__)){
return or__17618__auto__;
} else {
return G__28923.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__28923.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__28923);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__28923);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__28924 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__28924) : cljs.core.clj__GT_js.call(null,G__28924));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__28940 = x;
if(G__28940){
var bit__18299__auto__ = null;
if(cljs.core.truth_((function (){var or__17618__auto__ = bit__18299__auto__;
if(cljs.core.truth_(or__17618__auto__)){
return or__17618__auto__;
} else {
return G__28940.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__28940.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__28940);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__28940);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj28942 = {};
return obj28942;
})();
var seq__28943_28953 = cljs.core.seq(x);
var chunk__28944_28954 = null;
var count__28945_28955 = (0);
var i__28946_28956 = (0);
while(true){
if((i__28946_28956 < count__28945_28955)){
var vec__28947_28957 = chunk__28944_28954.cljs$core$IIndexed$_nth$arity$2(null,i__28946_28956);
var k_28958 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28947_28957,(0),null);
var v_28959 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28947_28957,(1),null);
(m[cljs.core.key__GT_js(k_28958)] = clj__GT_js(v_28959));

var G__28960 = seq__28943_28953;
var G__28961 = chunk__28944_28954;
var G__28962 = count__28945_28955;
var G__28963 = (i__28946_28956 + (1));
seq__28943_28953 = G__28960;
chunk__28944_28954 = G__28961;
count__28945_28955 = G__28962;
i__28946_28956 = G__28963;
continue;
} else {
var temp__4126__auto___28964 = cljs.core.seq(seq__28943_28953);
if(temp__4126__auto___28964){
var seq__28943_28965__$1 = temp__4126__auto___28964;
if(cljs.core.chunked_seq_QMARK_(seq__28943_28965__$1)){
var c__18405__auto___28966 = cljs.core.chunk_first(seq__28943_28965__$1);
var G__28967 = cljs.core.chunk_rest(seq__28943_28965__$1);
var G__28968 = c__18405__auto___28966;
var G__28969 = cljs.core.count(c__18405__auto___28966);
var G__28970 = (0);
seq__28943_28953 = G__28967;
chunk__28944_28954 = G__28968;
count__28945_28955 = G__28969;
i__28946_28956 = G__28970;
continue;
} else {
var vec__28948_28971 = cljs.core.first(seq__28943_28965__$1);
var k_28972 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28948_28971,(0),null);
var v_28973 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28948_28971,(1),null);
(m[cljs.core.key__GT_js(k_28972)] = clj__GT_js(v_28973));

var G__28974 = cljs.core.next(seq__28943_28965__$1);
var G__28975 = null;
var G__28976 = (0);
var G__28977 = (0);
seq__28943_28953 = G__28974;
chunk__28944_28954 = G__28975;
count__28945_28955 = G__28976;
i__28946_28956 = G__28977;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__28949_28978 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__28950_28979 = null;
var count__28951_28980 = (0);
var i__28952_28981 = (0);
while(true){
if((i__28952_28981 < count__28951_28980)){
var x_28982__$1 = chunk__28950_28979.cljs$core$IIndexed$_nth$arity$2(null,i__28952_28981);
arr.push(x_28982__$1);

var G__28983 = seq__28949_28978;
var G__28984 = chunk__28950_28979;
var G__28985 = count__28951_28980;
var G__28986 = (i__28952_28981 + (1));
seq__28949_28978 = G__28983;
chunk__28950_28979 = G__28984;
count__28951_28980 = G__28985;
i__28952_28981 = G__28986;
continue;
} else {
var temp__4126__auto___28987 = cljs.core.seq(seq__28949_28978);
if(temp__4126__auto___28987){
var seq__28949_28988__$1 = temp__4126__auto___28987;
if(cljs.core.chunked_seq_QMARK_(seq__28949_28988__$1)){
var c__18405__auto___28989 = cljs.core.chunk_first(seq__28949_28988__$1);
var G__28990 = cljs.core.chunk_rest(seq__28949_28988__$1);
var G__28991 = c__18405__auto___28989;
var G__28992 = cljs.core.count(c__18405__auto___28989);
var G__28993 = (0);
seq__28949_28978 = G__28990;
chunk__28950_28979 = G__28991;
count__28951_28980 = G__28992;
i__28952_28981 = G__28993;
continue;
} else {
var x_28994__$1 = cljs.core.first(seq__28949_28988__$1);
arr.push(x_28994__$1);

var G__28995 = cljs.core.next(seq__28949_28988__$1);
var G__28996 = null;
var G__28997 = (0);
var G__28998 = (0);
seq__28949_28978 = G__28995;
chunk__28950_28979 = G__28996;
count__28951_28980 = G__28997;
i__28952_28981 = G__28998;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj29000 = {};
return obj29000;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__17606__auto__ = x;
if(and__17606__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__17606__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__18262__auto__ = (((x == null))?null:x);
return (function (){var or__17618__auto__ = (cljs.core._js__GT_clj[(function (){var G__29004 = x__18262__auto__;
return goog.typeOf(G__29004);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__29061__delegate = function (x,opts){
var map__29034 = opts;
var map__29034__$1 = ((cljs.core.seq_QMARK_(map__29034))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__29034):map__29034);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29034__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__29034,map__29034__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__29050 = x__$1;
if(G__29050){
var bit__18299__auto__ = null;
if(cljs.core.truth_((function (){var or__17618__auto__ = bit__18299__auto__;
if(cljs.core.truth_(or__17618__auto__)){
return or__17618__auto__;
} else {
return G__29050.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__29050.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__29050);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__29050);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__18374__auto__ = ((function (map__29034,map__29034__$1,keywordize_keys,keyfn){
return (function iter__29051(s__29052){
return (new cljs.core.LazySeq(null,((function (map__29034,map__29034__$1,keywordize_keys,keyfn){
return (function (){
var s__29052__$1 = s__29052;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__29052__$1);
if(temp__4126__auto__){
var s__29052__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__29052__$2)){
var c__18372__auto__ = cljs.core.chunk_first(s__29052__$2);
var size__18373__auto__ = cljs.core.count(c__18372__auto__);
var b__29054 = cljs.core.chunk_buffer(size__18373__auto__);
if((function (){var i__29053 = (0);
while(true){
if((i__29053 < size__18373__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__18372__auto__,i__29053);
cljs.core.chunk_append(b__29054,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__29059 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__29059) : keyfn.call(null,G__29059));
})(),thisfn((x__$1[k]))], null));

var G__29062 = (i__29053 + (1));
i__29053 = G__29062;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__29054),iter__29051(cljs.core.chunk_rest(s__29052__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__29054),null);
}
} else {
var k = cljs.core.first(s__29052__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__29060 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__29060) : keyfn.call(null,G__29060));
})(),thisfn((x__$1[k]))], null),iter__29051(cljs.core.rest(s__29052__$2)));
}
} else {
return null;
}
break;
}
});})(map__29034,map__29034__$1,keywordize_keys,keyfn))
,null,null));
});})(map__29034,map__29034__$1,keywordize_keys,keyfn))
;
return iter__18374__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__29034,map__29034__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__29061 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__29063__i = 0, G__29063__a = new Array(arguments.length -  1);
while (G__29063__i < G__29063__a.length) {G__29063__a[G__29063__i] = arguments[G__29063__i + 1]; ++G__29063__i;}
  opts = new cljs.core.IndexedSeq(G__29063__a,0);
} 
return G__29061__delegate.call(this,x,opts);};
G__29061.cljs$lang$maxFixedArity = 1;
G__29061.cljs$lang$applyTo = (function (arglist__29064){
var x = cljs.core.first(arglist__29064);
var opts = cljs.core.rest(arglist__29064);
return G__29061__delegate(x,opts);
});
G__29061.cljs$core$IFn$_invoke$arity$variadic = G__29061__delegate;
return G__29061;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__29065 = null;
if (arguments.length > 1) {
var G__29066__i = 0, G__29066__a = new Array(arguments.length -  1);
while (G__29066__i < G__29066__a.length) {G__29066__a[G__29066__i] = arguments[G__29066__i + 1]; ++G__29066__i;}
G__29065 = new cljs.core.IndexedSeq(G__29066__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__29065);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__29069 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__29069) : cljs.core.atom.call(null,G__29069));
})();
return ((function (mem){
return (function() { 
var G__29071__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__29070 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29070) : cljs.core.deref.call(null,G__29070));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__29071 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__29072__i = 0, G__29072__a = new Array(arguments.length -  0);
while (G__29072__i < G__29072__a.length) {G__29072__a[G__29072__i] = arguments[G__29072__i + 0]; ++G__29072__i;}
  args = new cljs.core.IndexedSeq(G__29072__a,0);
} 
return G__29071__delegate.call(this,args);};
G__29071.cljs$lang$maxFixedArity = 0;
G__29071.cljs$lang$applyTo = (function (arglist__29073){
var args = cljs.core.seq(arglist__29073);
return G__29071__delegate(args);
});
G__29071.cljs$core$IFn$_invoke$arity$variadic = G__29071__delegate;
return G__29071;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__29075 = ret;
f = G__29075;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__29076__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__29076 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__29077__i = 0, G__29077__a = new Array(arguments.length -  1);
while (G__29077__i < G__29077__a.length) {G__29077__a[G__29077__i] = arguments[G__29077__i + 1]; ++G__29077__i;}
  args = new cljs.core.IndexedSeq(G__29077__a,0);
} 
return G__29076__delegate.call(this,f,args);};
G__29076.cljs$lang$maxFixedArity = 1;
G__29076.cljs$lang$applyTo = (function (arglist__29078){
var f = cljs.core.first(arglist__29078);
var args = cljs.core.rest(arglist__29078);
return G__29076__delegate(f,args);
});
G__29076.cljs$core$IFn$_invoke$arity$variadic = G__29076__delegate;
return G__29076;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__29079 = null;
if (arguments.length > 1) {
var G__29080__i = 0, G__29080__a = new Array(arguments.length -  1);
while (G__29080__i < G__29080__a.length) {G__29080__a[G__29080__i] = arguments[G__29080__i + 1]; ++G__29080__i;}
G__29079 = new cljs.core.IndexedSeq(G__29080__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__29079);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__29083 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__29083) : Math.floor.call(null,G__29083));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__29085 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29085) : f.call(null,G__29085));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__29087 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__29087) : cljs.core.atom.call(null,G__29087));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__29088__i = 0, G__29088__a = new Array(arguments.length -  1);
while (G__29088__i < G__29088__a.length) {G__29088__a[G__29088__i] = arguments[G__29088__i + 1]; ++G__29088__i;}
  args = new cljs.core.IndexedSeq(G__29088__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__29089){
var f = cljs.core.first(arglist__29089);
var args = cljs.core.rest(arglist__29089);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__29154 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29154) : cljs.core.deref.call(null,G__29154));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__17618__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
var and__17606__auto__ = cljs.core.vector_QMARK_(parent);
if(and__17606__auto__){
var and__17606__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__17606__auto____$1){
var and__17606__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__17606__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__29179 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__29177 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__29177) : child.call(null,G__29177));
})(),(function (){var G__29178 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__29178) : parent.call(null,G__29178));
})());
var G__29180 = (i + (1));
ret = G__29179;
i = G__29180;
continue;
}
break;
}
} else {
return and__17606__auto____$2;
}
} else {
return and__17606__auto____$1;
}
} else {
return and__17606__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__29184 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29184) : cljs.core.deref.call(null,G__29184));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__29188 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29188) : cljs.core.deref.call(null,G__29188));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__29192 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29192) : cljs.core.deref.call(null,G__29192));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__29201 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__29201) : targets.call(null,G__29201));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__29202 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__29202) : sources.call(null,G__29202));
})()));
});})(tp,td,ta))
;
var or__17618__auto__ = ((cljs.core.contains_QMARK_((function (){var G__29206 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__29206) : tp.call(null,G__29206));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__29207 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__29207) : ta.call(null,G__29207));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__29208 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__29208) : ta.call(null,G__29208));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__17618__auto__)){
return or__17618__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__29215 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__29215) : parentMap.call(null,G__29215));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__29216 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__29216) : parentMap.call(null,G__29216));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__29209_SHARP_){
return cljs.core.cons(cljs.core.first(p1__29209_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__29209_SHARP_),cljs.core.second(p1__29209_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__29217 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__29217) : parentMap.call(null,G__29217));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__29210_SHARP_,p2__29211_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__29210_SHARP_,p2__29211_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__29220 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29220) : cljs.core.deref.call(null,G__29220));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__29221 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29221) : cljs.core.deref.call(null,G__29221));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__29237 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29237) : cljs.core.deref.call(null,G__29237));
})().call(null,x);
var or__17618__auto__ = (cljs.core.truth_((function (){var and__17606__auto__ = xprefs;
if(cljs.core.truth_(and__17606__auto__)){
var G__29239 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__29239) : xprefs.call(null,G__29239));
} else {
return and__17606__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__17618__auto__)){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__29240 = cljs.core.rest(ps);
ps = G__29240;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__17618__auto____$1)){
return or__17618__auto____$1;
} else {
var or__17618__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__29241 = cljs.core.rest(ps);
ps = G__29241;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__17618__auto____$2)){
return or__17618__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__17618__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__17618__auto__)){
return or__17618__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__29255){
var vec__29256 = p__29255;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29256,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29256,(1),null);
var e = vec__29256;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__29257 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29257) : cljs.core.deref.call(null,G__29257));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__17618__auto__ = (be == null);
if(or__17618__auto__){
return or__17618__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__29258 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29258) : cljs.core.deref.call(null,G__29258));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__29259 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29259) : cljs.core.deref.call(null,G__29259));
})(),(function (){var G__29260 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29260) : cljs.core.deref.call(null,G__29260));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj29262 = {};
return obj29262;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__17606__auto__ = mf;
if(and__17606__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__17606__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__18262__auto__ = (((mf == null))?null:mf);
return (function (){var or__17618__auto__ = (cljs.core._reset[(function (){var G__29266 = x__18262__auto__;
return goog.typeOf(G__29266);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._reset["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__17606__auto__ = mf;
if(and__17606__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__17606__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__18262__auto__ = (((mf == null))?null:mf);
return (function (){var or__17618__auto__ = (cljs.core._add_method[(function (){var G__29270 = x__18262__auto__;
return goog.typeOf(G__29270);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._add_method["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__17606__auto__ = mf;
if(and__17606__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__17606__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__18262__auto__ = (((mf == null))?null:mf);
return (function (){var or__17618__auto__ = (cljs.core._remove_method[(function (){var G__29274 = x__18262__auto__;
return goog.typeOf(G__29274);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._remove_method["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__17606__auto__ = mf;
if(and__17606__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__17606__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__18262__auto__ = (((mf == null))?null:mf);
return (function (){var or__17618__auto__ = (cljs.core._prefer_method[(function (){var G__29278 = x__18262__auto__;
return goog.typeOf(G__29278);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__17606__auto__ = mf;
if(and__17606__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__17606__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__18262__auto__ = (((mf == null))?null:mf);
return (function (){var or__17618__auto__ = (cljs.core._get_method[(function (){var G__29282 = x__18262__auto__;
return goog.typeOf(G__29282);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._get_method["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__17606__auto__ = mf;
if(and__17606__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__17606__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__18262__auto__ = (((mf == null))?null:mf);
return (function (){var or__17618__auto__ = (cljs.core._methods[(function (){var G__29286 = x__18262__auto__;
return goog.typeOf(G__29286);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._methods["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__17606__auto__ = mf;
if(and__17606__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__17606__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__18262__auto__ = (((mf == null))?null:mf);
return (function (){var or__17618__auto__ = (cljs.core._prefers[(function (){var G__29290 = x__18262__auto__;
return goog.typeOf(G__29290);
})()]);
if(or__17618__auto__){
return or__17618__auto__;
} else {
var or__17618__auto____$1 = (cljs.core._prefers["_"]);
if(or__17618__auto____$1){
return or__17618__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__29292 = this$__$1;
return goog.getUid(G__29292);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__29293 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29293) : cljs.core.deref.call(null,G__29293));
})(),(function (){var G__29294 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29294) : cljs.core.deref.call(null,G__29294));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__29295 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29295) : cljs.core.deref.call(null,G__29295));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__29296 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29296) : cljs.core.deref.call(null,G__29296));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__29297 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29297) : cljs.core.deref.call(null,G__29297));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__29298 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29298) : cljs.core.deref.call(null,G__29298));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__30139 = null;
var G__30139__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__30139__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29299 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__29299) : self__.dispatch_fn.call(null,G__29299));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29300 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__29300) : target_fn.call(null,G__29300));
});
var G__30139__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29301 = a;
var G__29302 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__29301,G__29302) : self__.dispatch_fn.call(null,G__29301,G__29302));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29303 = a;
var G__29304 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__29303,G__29304) : target_fn.call(null,G__29303,G__29304));
});
var G__30139__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29305 = a;
var G__29306 = b;
var G__29307 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__29305,G__29306,G__29307) : self__.dispatch_fn.call(null,G__29305,G__29306,G__29307));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29308 = a;
var G__29309 = b;
var G__29310 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__29308,G__29309,G__29310) : target_fn.call(null,G__29308,G__29309,G__29310));
});
var G__30139__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29311 = a;
var G__29312 = b;
var G__29313 = c;
var G__29314 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__29311,G__29312,G__29313,G__29314) : self__.dispatch_fn.call(null,G__29311,G__29312,G__29313,G__29314));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29315 = a;
var G__29316 = b;
var G__29317 = c;
var G__29318 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__29315,G__29316,G__29317,G__29318) : target_fn.call(null,G__29315,G__29316,G__29317,G__29318));
});
var G__30139__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29319 = a;
var G__29320 = b;
var G__29321 = c;
var G__29322 = d;
var G__29323 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__29319,G__29320,G__29321,G__29322,G__29323) : self__.dispatch_fn.call(null,G__29319,G__29320,G__29321,G__29322,G__29323));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29324 = a;
var G__29325 = b;
var G__29326 = c;
var G__29327 = d;
var G__29328 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__29324,G__29325,G__29326,G__29327,G__29328) : target_fn.call(null,G__29324,G__29325,G__29326,G__29327,G__29328));
});
var G__30139__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29329 = a;
var G__29330 = b;
var G__29331 = c;
var G__29332 = d;
var G__29333 = e;
var G__29334 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__29329,G__29330,G__29331,G__29332,G__29333,G__29334) : self__.dispatch_fn.call(null,G__29329,G__29330,G__29331,G__29332,G__29333,G__29334));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29335 = a;
var G__29336 = b;
var G__29337 = c;
var G__29338 = d;
var G__29339 = e;
var G__29340 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__29335,G__29336,G__29337,G__29338,G__29339,G__29340) : target_fn.call(null,G__29335,G__29336,G__29337,G__29338,G__29339,G__29340));
});
var G__30139__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29341 = a;
var G__29342 = b;
var G__29343 = c;
var G__29344 = d;
var G__29345 = e;
var G__29346 = f;
var G__29347 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__29341,G__29342,G__29343,G__29344,G__29345,G__29346,G__29347) : self__.dispatch_fn.call(null,G__29341,G__29342,G__29343,G__29344,G__29345,G__29346,G__29347));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29348 = a;
var G__29349 = b;
var G__29350 = c;
var G__29351 = d;
var G__29352 = e;
var G__29353 = f;
var G__29354 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__29348,G__29349,G__29350,G__29351,G__29352,G__29353,G__29354) : target_fn.call(null,G__29348,G__29349,G__29350,G__29351,G__29352,G__29353,G__29354));
});
var G__30139__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29355 = a;
var G__29356 = b;
var G__29357 = c;
var G__29358 = d;
var G__29359 = e;
var G__29360 = f;
var G__29361 = g;
var G__29362 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__29355,G__29356,G__29357,G__29358,G__29359,G__29360,G__29361,G__29362) : self__.dispatch_fn.call(null,G__29355,G__29356,G__29357,G__29358,G__29359,G__29360,G__29361,G__29362));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29363 = a;
var G__29364 = b;
var G__29365 = c;
var G__29366 = d;
var G__29367 = e;
var G__29368 = f;
var G__29369 = g;
var G__29370 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__29363,G__29364,G__29365,G__29366,G__29367,G__29368,G__29369,G__29370) : target_fn.call(null,G__29363,G__29364,G__29365,G__29366,G__29367,G__29368,G__29369,G__29370));
});
var G__30139__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29371 = a;
var G__29372 = b;
var G__29373 = c;
var G__29374 = d;
var G__29375 = e;
var G__29376 = f;
var G__29377 = g;
var G__29378 = h;
var G__29379 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__29371,G__29372,G__29373,G__29374,G__29375,G__29376,G__29377,G__29378,G__29379) : self__.dispatch_fn.call(null,G__29371,G__29372,G__29373,G__29374,G__29375,G__29376,G__29377,G__29378,G__29379));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29380 = a;
var G__29381 = b;
var G__29382 = c;
var G__29383 = d;
var G__29384 = e;
var G__29385 = f;
var G__29386 = g;
var G__29387 = h;
var G__29388 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__29380,G__29381,G__29382,G__29383,G__29384,G__29385,G__29386,G__29387,G__29388) : target_fn.call(null,G__29380,G__29381,G__29382,G__29383,G__29384,G__29385,G__29386,G__29387,G__29388));
});
var G__30139__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29389 = a;
var G__29390 = b;
var G__29391 = c;
var G__29392 = d;
var G__29393 = e;
var G__29394 = f;
var G__29395 = g;
var G__29396 = h;
var G__29397 = i;
var G__29398 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__29389,G__29390,G__29391,G__29392,G__29393,G__29394,G__29395,G__29396,G__29397,G__29398) : self__.dispatch_fn.call(null,G__29389,G__29390,G__29391,G__29392,G__29393,G__29394,G__29395,G__29396,G__29397,G__29398));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29399 = a;
var G__29400 = b;
var G__29401 = c;
var G__29402 = d;
var G__29403 = e;
var G__29404 = f;
var G__29405 = g;
var G__29406 = h;
var G__29407 = i;
var G__29408 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__29399,G__29400,G__29401,G__29402,G__29403,G__29404,G__29405,G__29406,G__29407,G__29408) : target_fn.call(null,G__29399,G__29400,G__29401,G__29402,G__29403,G__29404,G__29405,G__29406,G__29407,G__29408));
});
var G__30139__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29409 = a;
var G__29410 = b;
var G__29411 = c;
var G__29412 = d;
var G__29413 = e;
var G__29414 = f;
var G__29415 = g;
var G__29416 = h;
var G__29417 = i;
var G__29418 = j;
var G__29419 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__29409,G__29410,G__29411,G__29412,G__29413,G__29414,G__29415,G__29416,G__29417,G__29418,G__29419) : self__.dispatch_fn.call(null,G__29409,G__29410,G__29411,G__29412,G__29413,G__29414,G__29415,G__29416,G__29417,G__29418,G__29419));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29420 = a;
var G__29421 = b;
var G__29422 = c;
var G__29423 = d;
var G__29424 = e;
var G__29425 = f;
var G__29426 = g;
var G__29427 = h;
var G__29428 = i;
var G__29429 = j;
var G__29430 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__29420,G__29421,G__29422,G__29423,G__29424,G__29425,G__29426,G__29427,G__29428,G__29429,G__29430) : target_fn.call(null,G__29420,G__29421,G__29422,G__29423,G__29424,G__29425,G__29426,G__29427,G__29428,G__29429,G__29430));
});
var G__30139__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29431 = a;
var G__29432 = b;
var G__29433 = c;
var G__29434 = d;
var G__29435 = e;
var G__29436 = f;
var G__29437 = g;
var G__29438 = h;
var G__29439 = i;
var G__29440 = j;
var G__29441 = k;
var G__29442 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__29431,G__29432,G__29433,G__29434,G__29435,G__29436,G__29437,G__29438,G__29439,G__29440,G__29441,G__29442) : self__.dispatch_fn.call(null,G__29431,G__29432,G__29433,G__29434,G__29435,G__29436,G__29437,G__29438,G__29439,G__29440,G__29441,G__29442));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29443 = a;
var G__29444 = b;
var G__29445 = c;
var G__29446 = d;
var G__29447 = e;
var G__29448 = f;
var G__29449 = g;
var G__29450 = h;
var G__29451 = i;
var G__29452 = j;
var G__29453 = k;
var G__29454 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__29443,G__29444,G__29445,G__29446,G__29447,G__29448,G__29449,G__29450,G__29451,G__29452,G__29453,G__29454) : target_fn.call(null,G__29443,G__29444,G__29445,G__29446,G__29447,G__29448,G__29449,G__29450,G__29451,G__29452,G__29453,G__29454));
});
var G__30139__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29455 = a;
var G__29456 = b;
var G__29457 = c;
var G__29458 = d;
var G__29459 = e;
var G__29460 = f;
var G__29461 = g;
var G__29462 = h;
var G__29463 = i;
var G__29464 = j;
var G__29465 = k;
var G__29466 = l;
var G__29467 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__29455,G__29456,G__29457,G__29458,G__29459,G__29460,G__29461,G__29462,G__29463,G__29464,G__29465,G__29466,G__29467) : self__.dispatch_fn.call(null,G__29455,G__29456,G__29457,G__29458,G__29459,G__29460,G__29461,G__29462,G__29463,G__29464,G__29465,G__29466,G__29467));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29468 = a;
var G__29469 = b;
var G__29470 = c;
var G__29471 = d;
var G__29472 = e;
var G__29473 = f;
var G__29474 = g;
var G__29475 = h;
var G__29476 = i;
var G__29477 = j;
var G__29478 = k;
var G__29479 = l;
var G__29480 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__29468,G__29469,G__29470,G__29471,G__29472,G__29473,G__29474,G__29475,G__29476,G__29477,G__29478,G__29479,G__29480) : target_fn.call(null,G__29468,G__29469,G__29470,G__29471,G__29472,G__29473,G__29474,G__29475,G__29476,G__29477,G__29478,G__29479,G__29480));
});
var G__30139__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29481 = a;
var G__29482 = b;
var G__29483 = c;
var G__29484 = d;
var G__29485 = e;
var G__29486 = f;
var G__29487 = g;
var G__29488 = h;
var G__29489 = i;
var G__29490 = j;
var G__29491 = k;
var G__29492 = l;
var G__29493 = m;
var G__29494 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__29481,G__29482,G__29483,G__29484,G__29485,G__29486,G__29487,G__29488,G__29489,G__29490,G__29491,G__29492,G__29493,G__29494) : self__.dispatch_fn.call(null,G__29481,G__29482,G__29483,G__29484,G__29485,G__29486,G__29487,G__29488,G__29489,G__29490,G__29491,G__29492,G__29493,G__29494));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29495 = a;
var G__29496 = b;
var G__29497 = c;
var G__29498 = d;
var G__29499 = e;
var G__29500 = f;
var G__29501 = g;
var G__29502 = h;
var G__29503 = i;
var G__29504 = j;
var G__29505 = k;
var G__29506 = l;
var G__29507 = m;
var G__29508 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__29495,G__29496,G__29497,G__29498,G__29499,G__29500,G__29501,G__29502,G__29503,G__29504,G__29505,G__29506,G__29507,G__29508) : target_fn.call(null,G__29495,G__29496,G__29497,G__29498,G__29499,G__29500,G__29501,G__29502,G__29503,G__29504,G__29505,G__29506,G__29507,G__29508));
});
var G__30139__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29509 = a;
var G__29510 = b;
var G__29511 = c;
var G__29512 = d;
var G__29513 = e;
var G__29514 = f;
var G__29515 = g;
var G__29516 = h;
var G__29517 = i;
var G__29518 = j;
var G__29519 = k;
var G__29520 = l;
var G__29521 = m;
var G__29522 = n;
var G__29523 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__29509,G__29510,G__29511,G__29512,G__29513,G__29514,G__29515,G__29516,G__29517,G__29518,G__29519,G__29520,G__29521,G__29522,G__29523) : self__.dispatch_fn.call(null,G__29509,G__29510,G__29511,G__29512,G__29513,G__29514,G__29515,G__29516,G__29517,G__29518,G__29519,G__29520,G__29521,G__29522,G__29523));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29524 = a;
var G__29525 = b;
var G__29526 = c;
var G__29527 = d;
var G__29528 = e;
var G__29529 = f;
var G__29530 = g;
var G__29531 = h;
var G__29532 = i;
var G__29533 = j;
var G__29534 = k;
var G__29535 = l;
var G__29536 = m;
var G__29537 = n;
var G__29538 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__29524,G__29525,G__29526,G__29527,G__29528,G__29529,G__29530,G__29531,G__29532,G__29533,G__29534,G__29535,G__29536,G__29537,G__29538) : target_fn.call(null,G__29524,G__29525,G__29526,G__29527,G__29528,G__29529,G__29530,G__29531,G__29532,G__29533,G__29534,G__29535,G__29536,G__29537,G__29538));
});
var G__30139__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29539 = a;
var G__29540 = b;
var G__29541 = c;
var G__29542 = d;
var G__29543 = e;
var G__29544 = f;
var G__29545 = g;
var G__29546 = h;
var G__29547 = i;
var G__29548 = j;
var G__29549 = k;
var G__29550 = l;
var G__29551 = m;
var G__29552 = n;
var G__29553 = o;
var G__29554 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__29539,G__29540,G__29541,G__29542,G__29543,G__29544,G__29545,G__29546,G__29547,G__29548,G__29549,G__29550,G__29551,G__29552,G__29553,G__29554) : self__.dispatch_fn.call(null,G__29539,G__29540,G__29541,G__29542,G__29543,G__29544,G__29545,G__29546,G__29547,G__29548,G__29549,G__29550,G__29551,G__29552,G__29553,G__29554));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29555 = a;
var G__29556 = b;
var G__29557 = c;
var G__29558 = d;
var G__29559 = e;
var G__29560 = f;
var G__29561 = g;
var G__29562 = h;
var G__29563 = i;
var G__29564 = j;
var G__29565 = k;
var G__29566 = l;
var G__29567 = m;
var G__29568 = n;
var G__29569 = o;
var G__29570 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__29555,G__29556,G__29557,G__29558,G__29559,G__29560,G__29561,G__29562,G__29563,G__29564,G__29565,G__29566,G__29567,G__29568,G__29569,G__29570) : target_fn.call(null,G__29555,G__29556,G__29557,G__29558,G__29559,G__29560,G__29561,G__29562,G__29563,G__29564,G__29565,G__29566,G__29567,G__29568,G__29569,G__29570));
});
var G__30139__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29571 = a;
var G__29572 = b;
var G__29573 = c;
var G__29574 = d;
var G__29575 = e;
var G__29576 = f;
var G__29577 = g;
var G__29578 = h;
var G__29579 = i;
var G__29580 = j;
var G__29581 = k;
var G__29582 = l;
var G__29583 = m;
var G__29584 = n;
var G__29585 = o;
var G__29586 = p;
var G__29587 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__29571,G__29572,G__29573,G__29574,G__29575,G__29576,G__29577,G__29578,G__29579,G__29580,G__29581,G__29582,G__29583,G__29584,G__29585,G__29586,G__29587) : self__.dispatch_fn.call(null,G__29571,G__29572,G__29573,G__29574,G__29575,G__29576,G__29577,G__29578,G__29579,G__29580,G__29581,G__29582,G__29583,G__29584,G__29585,G__29586,G__29587));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29588 = a;
var G__29589 = b;
var G__29590 = c;
var G__29591 = d;
var G__29592 = e;
var G__29593 = f;
var G__29594 = g;
var G__29595 = h;
var G__29596 = i;
var G__29597 = j;
var G__29598 = k;
var G__29599 = l;
var G__29600 = m;
var G__29601 = n;
var G__29602 = o;
var G__29603 = p;
var G__29604 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__29588,G__29589,G__29590,G__29591,G__29592,G__29593,G__29594,G__29595,G__29596,G__29597,G__29598,G__29599,G__29600,G__29601,G__29602,G__29603,G__29604) : target_fn.call(null,G__29588,G__29589,G__29590,G__29591,G__29592,G__29593,G__29594,G__29595,G__29596,G__29597,G__29598,G__29599,G__29600,G__29601,G__29602,G__29603,G__29604));
});
var G__30139__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29605 = a;
var G__29606 = b;
var G__29607 = c;
var G__29608 = d;
var G__29609 = e;
var G__29610 = f;
var G__29611 = g;
var G__29612 = h;
var G__29613 = i;
var G__29614 = j;
var G__29615 = k;
var G__29616 = l;
var G__29617 = m;
var G__29618 = n;
var G__29619 = o;
var G__29620 = p;
var G__29621 = q;
var G__29622 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__29605,G__29606,G__29607,G__29608,G__29609,G__29610,G__29611,G__29612,G__29613,G__29614,G__29615,G__29616,G__29617,G__29618,G__29619,G__29620,G__29621,G__29622) : self__.dispatch_fn.call(null,G__29605,G__29606,G__29607,G__29608,G__29609,G__29610,G__29611,G__29612,G__29613,G__29614,G__29615,G__29616,G__29617,G__29618,G__29619,G__29620,G__29621,G__29622));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29623 = a;
var G__29624 = b;
var G__29625 = c;
var G__29626 = d;
var G__29627 = e;
var G__29628 = f;
var G__29629 = g;
var G__29630 = h;
var G__29631 = i;
var G__29632 = j;
var G__29633 = k;
var G__29634 = l;
var G__29635 = m;
var G__29636 = n;
var G__29637 = o;
var G__29638 = p;
var G__29639 = q;
var G__29640 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__29623,G__29624,G__29625,G__29626,G__29627,G__29628,G__29629,G__29630,G__29631,G__29632,G__29633,G__29634,G__29635,G__29636,G__29637,G__29638,G__29639,G__29640) : target_fn.call(null,G__29623,G__29624,G__29625,G__29626,G__29627,G__29628,G__29629,G__29630,G__29631,G__29632,G__29633,G__29634,G__29635,G__29636,G__29637,G__29638,G__29639,G__29640));
});
var G__30139__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29641 = a;
var G__29642 = b;
var G__29643 = c;
var G__29644 = d;
var G__29645 = e;
var G__29646 = f;
var G__29647 = g;
var G__29648 = h;
var G__29649 = i;
var G__29650 = j;
var G__29651 = k;
var G__29652 = l;
var G__29653 = m;
var G__29654 = n;
var G__29655 = o;
var G__29656 = p;
var G__29657 = q;
var G__29658 = r;
var G__29659 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__29641,G__29642,G__29643,G__29644,G__29645,G__29646,G__29647,G__29648,G__29649,G__29650,G__29651,G__29652,G__29653,G__29654,G__29655,G__29656,G__29657,G__29658,G__29659) : self__.dispatch_fn.call(null,G__29641,G__29642,G__29643,G__29644,G__29645,G__29646,G__29647,G__29648,G__29649,G__29650,G__29651,G__29652,G__29653,G__29654,G__29655,G__29656,G__29657,G__29658,G__29659));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29660 = a;
var G__29661 = b;
var G__29662 = c;
var G__29663 = d;
var G__29664 = e;
var G__29665 = f;
var G__29666 = g;
var G__29667 = h;
var G__29668 = i;
var G__29669 = j;
var G__29670 = k;
var G__29671 = l;
var G__29672 = m;
var G__29673 = n;
var G__29674 = o;
var G__29675 = p;
var G__29676 = q;
var G__29677 = r;
var G__29678 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__29660,G__29661,G__29662,G__29663,G__29664,G__29665,G__29666,G__29667,G__29668,G__29669,G__29670,G__29671,G__29672,G__29673,G__29674,G__29675,G__29676,G__29677,G__29678) : target_fn.call(null,G__29660,G__29661,G__29662,G__29663,G__29664,G__29665,G__29666,G__29667,G__29668,G__29669,G__29670,G__29671,G__29672,G__29673,G__29674,G__29675,G__29676,G__29677,G__29678));
});
var G__30139__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__29679 = a;
var G__29680 = b;
var G__29681 = c;
var G__29682 = d;
var G__29683 = e;
var G__29684 = f;
var G__29685 = g;
var G__29686 = h;
var G__29687 = i;
var G__29688 = j;
var G__29689 = k;
var G__29690 = l;
var G__29691 = m;
var G__29692 = n;
var G__29693 = o;
var G__29694 = p;
var G__29695 = q;
var G__29696 = r;
var G__29697 = s;
var G__29698 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__29679,G__29680,G__29681,G__29682,G__29683,G__29684,G__29685,G__29686,G__29687,G__29688,G__29689,G__29690,G__29691,G__29692,G__29693,G__29694,G__29695,G__29696,G__29697,G__29698) : self__.dispatch_fn.call(null,G__29679,G__29680,G__29681,G__29682,G__29683,G__29684,G__29685,G__29686,G__29687,G__29688,G__29689,G__29690,G__29691,G__29692,G__29693,G__29694,G__29695,G__29696,G__29697,G__29698));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29699 = a;
var G__29700 = b;
var G__29701 = c;
var G__29702 = d;
var G__29703 = e;
var G__29704 = f;
var G__29705 = g;
var G__29706 = h;
var G__29707 = i;
var G__29708 = j;
var G__29709 = k;
var G__29710 = l;
var G__29711 = m;
var G__29712 = n;
var G__29713 = o;
var G__29714 = p;
var G__29715 = q;
var G__29716 = r;
var G__29717 = s;
var G__29718 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__29699,G__29700,G__29701,G__29702,G__29703,G__29704,G__29705,G__29706,G__29707,G__29708,G__29709,G__29710,G__29711,G__29712,G__29713,G__29714,G__29715,G__29716,G__29717,G__29718) : target_fn.call(null,G__29699,G__29700,G__29701,G__29702,G__29703,G__29704,G__29705,G__29706,G__29707,G__29708,G__29709,G__29710,G__29711,G__29712,G__29713,G__29714,G__29715,G__29716,G__29717,G__29718));
});
var G__30139__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__30139 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__30139__1.call(this,self__);
case 2:
return G__30139__2.call(this,self__,a);
case 3:
return G__30139__3.call(this,self__,a,b);
case 4:
return G__30139__4.call(this,self__,a,b,c);
case 5:
return G__30139__5.call(this,self__,a,b,c,d);
case 6:
return G__30139__6.call(this,self__,a,b,c,d,e);
case 7:
return G__30139__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__30139__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__30139__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__30139__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__30139__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__30139__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__30139__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__30139__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__30139__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__30139__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__30139__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__30139__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__30139__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__30139__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__30139__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__30139__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30139.cljs$core$IFn$_invoke$arity$1 = G__30139__1;
G__30139.cljs$core$IFn$_invoke$arity$2 = G__30139__2;
G__30139.cljs$core$IFn$_invoke$arity$3 = G__30139__3;
G__30139.cljs$core$IFn$_invoke$arity$4 = G__30139__4;
G__30139.cljs$core$IFn$_invoke$arity$5 = G__30139__5;
G__30139.cljs$core$IFn$_invoke$arity$6 = G__30139__6;
G__30139.cljs$core$IFn$_invoke$arity$7 = G__30139__7;
G__30139.cljs$core$IFn$_invoke$arity$8 = G__30139__8;
G__30139.cljs$core$IFn$_invoke$arity$9 = G__30139__9;
G__30139.cljs$core$IFn$_invoke$arity$10 = G__30139__10;
G__30139.cljs$core$IFn$_invoke$arity$11 = G__30139__11;
G__30139.cljs$core$IFn$_invoke$arity$12 = G__30139__12;
G__30139.cljs$core$IFn$_invoke$arity$13 = G__30139__13;
G__30139.cljs$core$IFn$_invoke$arity$14 = G__30139__14;
G__30139.cljs$core$IFn$_invoke$arity$15 = G__30139__15;
G__30139.cljs$core$IFn$_invoke$arity$16 = G__30139__16;
G__30139.cljs$core$IFn$_invoke$arity$17 = G__30139__17;
G__30139.cljs$core$IFn$_invoke$arity$18 = G__30139__18;
G__30139.cljs$core$IFn$_invoke$arity$19 = G__30139__19;
G__30139.cljs$core$IFn$_invoke$arity$20 = G__30139__20;
G__30139.cljs$core$IFn$_invoke$arity$21 = G__30139__21;
G__30139.cljs$core$IFn$_invoke$arity$22 = G__30139__22;
return G__30139;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args29291){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args29291)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29719 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__29719) : self__.dispatch_fn.call(null,G__29719));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29720 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__29720) : target_fn.call(null,G__29720));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29721 = a;
var G__29722 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__29721,G__29722) : self__.dispatch_fn.call(null,G__29721,G__29722));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29723 = a;
var G__29724 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__29723,G__29724) : target_fn.call(null,G__29723,G__29724));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29725 = a;
var G__29726 = b;
var G__29727 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__29725,G__29726,G__29727) : self__.dispatch_fn.call(null,G__29725,G__29726,G__29727));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29728 = a;
var G__29729 = b;
var G__29730 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__29728,G__29729,G__29730) : target_fn.call(null,G__29728,G__29729,G__29730));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29731 = a;
var G__29732 = b;
var G__29733 = c;
var G__29734 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__29731,G__29732,G__29733,G__29734) : self__.dispatch_fn.call(null,G__29731,G__29732,G__29733,G__29734));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29735 = a;
var G__29736 = b;
var G__29737 = c;
var G__29738 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__29735,G__29736,G__29737,G__29738) : target_fn.call(null,G__29735,G__29736,G__29737,G__29738));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29739 = a;
var G__29740 = b;
var G__29741 = c;
var G__29742 = d;
var G__29743 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__29739,G__29740,G__29741,G__29742,G__29743) : self__.dispatch_fn.call(null,G__29739,G__29740,G__29741,G__29742,G__29743));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29744 = a;
var G__29745 = b;
var G__29746 = c;
var G__29747 = d;
var G__29748 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__29744,G__29745,G__29746,G__29747,G__29748) : target_fn.call(null,G__29744,G__29745,G__29746,G__29747,G__29748));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29749 = a;
var G__29750 = b;
var G__29751 = c;
var G__29752 = d;
var G__29753 = e;
var G__29754 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__29749,G__29750,G__29751,G__29752,G__29753,G__29754) : self__.dispatch_fn.call(null,G__29749,G__29750,G__29751,G__29752,G__29753,G__29754));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29755 = a;
var G__29756 = b;
var G__29757 = c;
var G__29758 = d;
var G__29759 = e;
var G__29760 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__29755,G__29756,G__29757,G__29758,G__29759,G__29760) : target_fn.call(null,G__29755,G__29756,G__29757,G__29758,G__29759,G__29760));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29761 = a;
var G__29762 = b;
var G__29763 = c;
var G__29764 = d;
var G__29765 = e;
var G__29766 = f;
var G__29767 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__29761,G__29762,G__29763,G__29764,G__29765,G__29766,G__29767) : self__.dispatch_fn.call(null,G__29761,G__29762,G__29763,G__29764,G__29765,G__29766,G__29767));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29768 = a;
var G__29769 = b;
var G__29770 = c;
var G__29771 = d;
var G__29772 = e;
var G__29773 = f;
var G__29774 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__29768,G__29769,G__29770,G__29771,G__29772,G__29773,G__29774) : target_fn.call(null,G__29768,G__29769,G__29770,G__29771,G__29772,G__29773,G__29774));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29775 = a;
var G__29776 = b;
var G__29777 = c;
var G__29778 = d;
var G__29779 = e;
var G__29780 = f;
var G__29781 = g;
var G__29782 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__29775,G__29776,G__29777,G__29778,G__29779,G__29780,G__29781,G__29782) : self__.dispatch_fn.call(null,G__29775,G__29776,G__29777,G__29778,G__29779,G__29780,G__29781,G__29782));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29783 = a;
var G__29784 = b;
var G__29785 = c;
var G__29786 = d;
var G__29787 = e;
var G__29788 = f;
var G__29789 = g;
var G__29790 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__29783,G__29784,G__29785,G__29786,G__29787,G__29788,G__29789,G__29790) : target_fn.call(null,G__29783,G__29784,G__29785,G__29786,G__29787,G__29788,G__29789,G__29790));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29791 = a;
var G__29792 = b;
var G__29793 = c;
var G__29794 = d;
var G__29795 = e;
var G__29796 = f;
var G__29797 = g;
var G__29798 = h;
var G__29799 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__29791,G__29792,G__29793,G__29794,G__29795,G__29796,G__29797,G__29798,G__29799) : self__.dispatch_fn.call(null,G__29791,G__29792,G__29793,G__29794,G__29795,G__29796,G__29797,G__29798,G__29799));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29800 = a;
var G__29801 = b;
var G__29802 = c;
var G__29803 = d;
var G__29804 = e;
var G__29805 = f;
var G__29806 = g;
var G__29807 = h;
var G__29808 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__29800,G__29801,G__29802,G__29803,G__29804,G__29805,G__29806,G__29807,G__29808) : target_fn.call(null,G__29800,G__29801,G__29802,G__29803,G__29804,G__29805,G__29806,G__29807,G__29808));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29809 = a;
var G__29810 = b;
var G__29811 = c;
var G__29812 = d;
var G__29813 = e;
var G__29814 = f;
var G__29815 = g;
var G__29816 = h;
var G__29817 = i;
var G__29818 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__29809,G__29810,G__29811,G__29812,G__29813,G__29814,G__29815,G__29816,G__29817,G__29818) : self__.dispatch_fn.call(null,G__29809,G__29810,G__29811,G__29812,G__29813,G__29814,G__29815,G__29816,G__29817,G__29818));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29819 = a;
var G__29820 = b;
var G__29821 = c;
var G__29822 = d;
var G__29823 = e;
var G__29824 = f;
var G__29825 = g;
var G__29826 = h;
var G__29827 = i;
var G__29828 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__29819,G__29820,G__29821,G__29822,G__29823,G__29824,G__29825,G__29826,G__29827,G__29828) : target_fn.call(null,G__29819,G__29820,G__29821,G__29822,G__29823,G__29824,G__29825,G__29826,G__29827,G__29828));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29829 = a;
var G__29830 = b;
var G__29831 = c;
var G__29832 = d;
var G__29833 = e;
var G__29834 = f;
var G__29835 = g;
var G__29836 = h;
var G__29837 = i;
var G__29838 = j;
var G__29839 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__29829,G__29830,G__29831,G__29832,G__29833,G__29834,G__29835,G__29836,G__29837,G__29838,G__29839) : self__.dispatch_fn.call(null,G__29829,G__29830,G__29831,G__29832,G__29833,G__29834,G__29835,G__29836,G__29837,G__29838,G__29839));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29840 = a;
var G__29841 = b;
var G__29842 = c;
var G__29843 = d;
var G__29844 = e;
var G__29845 = f;
var G__29846 = g;
var G__29847 = h;
var G__29848 = i;
var G__29849 = j;
var G__29850 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__29840,G__29841,G__29842,G__29843,G__29844,G__29845,G__29846,G__29847,G__29848,G__29849,G__29850) : target_fn.call(null,G__29840,G__29841,G__29842,G__29843,G__29844,G__29845,G__29846,G__29847,G__29848,G__29849,G__29850));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29851 = a;
var G__29852 = b;
var G__29853 = c;
var G__29854 = d;
var G__29855 = e;
var G__29856 = f;
var G__29857 = g;
var G__29858 = h;
var G__29859 = i;
var G__29860 = j;
var G__29861 = k;
var G__29862 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__29851,G__29852,G__29853,G__29854,G__29855,G__29856,G__29857,G__29858,G__29859,G__29860,G__29861,G__29862) : self__.dispatch_fn.call(null,G__29851,G__29852,G__29853,G__29854,G__29855,G__29856,G__29857,G__29858,G__29859,G__29860,G__29861,G__29862));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29863 = a;
var G__29864 = b;
var G__29865 = c;
var G__29866 = d;
var G__29867 = e;
var G__29868 = f;
var G__29869 = g;
var G__29870 = h;
var G__29871 = i;
var G__29872 = j;
var G__29873 = k;
var G__29874 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__29863,G__29864,G__29865,G__29866,G__29867,G__29868,G__29869,G__29870,G__29871,G__29872,G__29873,G__29874) : target_fn.call(null,G__29863,G__29864,G__29865,G__29866,G__29867,G__29868,G__29869,G__29870,G__29871,G__29872,G__29873,G__29874));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29875 = a;
var G__29876 = b;
var G__29877 = c;
var G__29878 = d;
var G__29879 = e;
var G__29880 = f;
var G__29881 = g;
var G__29882 = h;
var G__29883 = i;
var G__29884 = j;
var G__29885 = k;
var G__29886 = l;
var G__29887 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__29875,G__29876,G__29877,G__29878,G__29879,G__29880,G__29881,G__29882,G__29883,G__29884,G__29885,G__29886,G__29887) : self__.dispatch_fn.call(null,G__29875,G__29876,G__29877,G__29878,G__29879,G__29880,G__29881,G__29882,G__29883,G__29884,G__29885,G__29886,G__29887));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29888 = a;
var G__29889 = b;
var G__29890 = c;
var G__29891 = d;
var G__29892 = e;
var G__29893 = f;
var G__29894 = g;
var G__29895 = h;
var G__29896 = i;
var G__29897 = j;
var G__29898 = k;
var G__29899 = l;
var G__29900 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__29888,G__29889,G__29890,G__29891,G__29892,G__29893,G__29894,G__29895,G__29896,G__29897,G__29898,G__29899,G__29900) : target_fn.call(null,G__29888,G__29889,G__29890,G__29891,G__29892,G__29893,G__29894,G__29895,G__29896,G__29897,G__29898,G__29899,G__29900));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29901 = a;
var G__29902 = b;
var G__29903 = c;
var G__29904 = d;
var G__29905 = e;
var G__29906 = f;
var G__29907 = g;
var G__29908 = h;
var G__29909 = i;
var G__29910 = j;
var G__29911 = k;
var G__29912 = l;
var G__29913 = m;
var G__29914 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__29901,G__29902,G__29903,G__29904,G__29905,G__29906,G__29907,G__29908,G__29909,G__29910,G__29911,G__29912,G__29913,G__29914) : self__.dispatch_fn.call(null,G__29901,G__29902,G__29903,G__29904,G__29905,G__29906,G__29907,G__29908,G__29909,G__29910,G__29911,G__29912,G__29913,G__29914));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29915 = a;
var G__29916 = b;
var G__29917 = c;
var G__29918 = d;
var G__29919 = e;
var G__29920 = f;
var G__29921 = g;
var G__29922 = h;
var G__29923 = i;
var G__29924 = j;
var G__29925 = k;
var G__29926 = l;
var G__29927 = m;
var G__29928 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__29915,G__29916,G__29917,G__29918,G__29919,G__29920,G__29921,G__29922,G__29923,G__29924,G__29925,G__29926,G__29927,G__29928) : target_fn.call(null,G__29915,G__29916,G__29917,G__29918,G__29919,G__29920,G__29921,G__29922,G__29923,G__29924,G__29925,G__29926,G__29927,G__29928));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29929 = a;
var G__29930 = b;
var G__29931 = c;
var G__29932 = d;
var G__29933 = e;
var G__29934 = f;
var G__29935 = g;
var G__29936 = h;
var G__29937 = i;
var G__29938 = j;
var G__29939 = k;
var G__29940 = l;
var G__29941 = m;
var G__29942 = n;
var G__29943 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__29929,G__29930,G__29931,G__29932,G__29933,G__29934,G__29935,G__29936,G__29937,G__29938,G__29939,G__29940,G__29941,G__29942,G__29943) : self__.dispatch_fn.call(null,G__29929,G__29930,G__29931,G__29932,G__29933,G__29934,G__29935,G__29936,G__29937,G__29938,G__29939,G__29940,G__29941,G__29942,G__29943));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29944 = a;
var G__29945 = b;
var G__29946 = c;
var G__29947 = d;
var G__29948 = e;
var G__29949 = f;
var G__29950 = g;
var G__29951 = h;
var G__29952 = i;
var G__29953 = j;
var G__29954 = k;
var G__29955 = l;
var G__29956 = m;
var G__29957 = n;
var G__29958 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__29944,G__29945,G__29946,G__29947,G__29948,G__29949,G__29950,G__29951,G__29952,G__29953,G__29954,G__29955,G__29956,G__29957,G__29958) : target_fn.call(null,G__29944,G__29945,G__29946,G__29947,G__29948,G__29949,G__29950,G__29951,G__29952,G__29953,G__29954,G__29955,G__29956,G__29957,G__29958));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29959 = a;
var G__29960 = b;
var G__29961 = c;
var G__29962 = d;
var G__29963 = e;
var G__29964 = f;
var G__29965 = g;
var G__29966 = h;
var G__29967 = i;
var G__29968 = j;
var G__29969 = k;
var G__29970 = l;
var G__29971 = m;
var G__29972 = n;
var G__29973 = o;
var G__29974 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__29959,G__29960,G__29961,G__29962,G__29963,G__29964,G__29965,G__29966,G__29967,G__29968,G__29969,G__29970,G__29971,G__29972,G__29973,G__29974) : self__.dispatch_fn.call(null,G__29959,G__29960,G__29961,G__29962,G__29963,G__29964,G__29965,G__29966,G__29967,G__29968,G__29969,G__29970,G__29971,G__29972,G__29973,G__29974));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29975 = a;
var G__29976 = b;
var G__29977 = c;
var G__29978 = d;
var G__29979 = e;
var G__29980 = f;
var G__29981 = g;
var G__29982 = h;
var G__29983 = i;
var G__29984 = j;
var G__29985 = k;
var G__29986 = l;
var G__29987 = m;
var G__29988 = n;
var G__29989 = o;
var G__29990 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__29975,G__29976,G__29977,G__29978,G__29979,G__29980,G__29981,G__29982,G__29983,G__29984,G__29985,G__29986,G__29987,G__29988,G__29989,G__29990) : target_fn.call(null,G__29975,G__29976,G__29977,G__29978,G__29979,G__29980,G__29981,G__29982,G__29983,G__29984,G__29985,G__29986,G__29987,G__29988,G__29989,G__29990));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29991 = a;
var G__29992 = b;
var G__29993 = c;
var G__29994 = d;
var G__29995 = e;
var G__29996 = f;
var G__29997 = g;
var G__29998 = h;
var G__29999 = i;
var G__30000 = j;
var G__30001 = k;
var G__30002 = l;
var G__30003 = m;
var G__30004 = n;
var G__30005 = o;
var G__30006 = p;
var G__30007 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__29991,G__29992,G__29993,G__29994,G__29995,G__29996,G__29997,G__29998,G__29999,G__30000,G__30001,G__30002,G__30003,G__30004,G__30005,G__30006,G__30007) : self__.dispatch_fn.call(null,G__29991,G__29992,G__29993,G__29994,G__29995,G__29996,G__29997,G__29998,G__29999,G__30000,G__30001,G__30002,G__30003,G__30004,G__30005,G__30006,G__30007));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30008 = a;
var G__30009 = b;
var G__30010 = c;
var G__30011 = d;
var G__30012 = e;
var G__30013 = f;
var G__30014 = g;
var G__30015 = h;
var G__30016 = i;
var G__30017 = j;
var G__30018 = k;
var G__30019 = l;
var G__30020 = m;
var G__30021 = n;
var G__30022 = o;
var G__30023 = p;
var G__30024 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__30008,G__30009,G__30010,G__30011,G__30012,G__30013,G__30014,G__30015,G__30016,G__30017,G__30018,G__30019,G__30020,G__30021,G__30022,G__30023,G__30024) : target_fn.call(null,G__30008,G__30009,G__30010,G__30011,G__30012,G__30013,G__30014,G__30015,G__30016,G__30017,G__30018,G__30019,G__30020,G__30021,G__30022,G__30023,G__30024));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30025 = a;
var G__30026 = b;
var G__30027 = c;
var G__30028 = d;
var G__30029 = e;
var G__30030 = f;
var G__30031 = g;
var G__30032 = h;
var G__30033 = i;
var G__30034 = j;
var G__30035 = k;
var G__30036 = l;
var G__30037 = m;
var G__30038 = n;
var G__30039 = o;
var G__30040 = p;
var G__30041 = q;
var G__30042 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__30025,G__30026,G__30027,G__30028,G__30029,G__30030,G__30031,G__30032,G__30033,G__30034,G__30035,G__30036,G__30037,G__30038,G__30039,G__30040,G__30041,G__30042) : self__.dispatch_fn.call(null,G__30025,G__30026,G__30027,G__30028,G__30029,G__30030,G__30031,G__30032,G__30033,G__30034,G__30035,G__30036,G__30037,G__30038,G__30039,G__30040,G__30041,G__30042));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30043 = a;
var G__30044 = b;
var G__30045 = c;
var G__30046 = d;
var G__30047 = e;
var G__30048 = f;
var G__30049 = g;
var G__30050 = h;
var G__30051 = i;
var G__30052 = j;
var G__30053 = k;
var G__30054 = l;
var G__30055 = m;
var G__30056 = n;
var G__30057 = o;
var G__30058 = p;
var G__30059 = q;
var G__30060 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__30043,G__30044,G__30045,G__30046,G__30047,G__30048,G__30049,G__30050,G__30051,G__30052,G__30053,G__30054,G__30055,G__30056,G__30057,G__30058,G__30059,G__30060) : target_fn.call(null,G__30043,G__30044,G__30045,G__30046,G__30047,G__30048,G__30049,G__30050,G__30051,G__30052,G__30053,G__30054,G__30055,G__30056,G__30057,G__30058,G__30059,G__30060));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30061 = a;
var G__30062 = b;
var G__30063 = c;
var G__30064 = d;
var G__30065 = e;
var G__30066 = f;
var G__30067 = g;
var G__30068 = h;
var G__30069 = i;
var G__30070 = j;
var G__30071 = k;
var G__30072 = l;
var G__30073 = m;
var G__30074 = n;
var G__30075 = o;
var G__30076 = p;
var G__30077 = q;
var G__30078 = r;
var G__30079 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__30061,G__30062,G__30063,G__30064,G__30065,G__30066,G__30067,G__30068,G__30069,G__30070,G__30071,G__30072,G__30073,G__30074,G__30075,G__30076,G__30077,G__30078,G__30079) : self__.dispatch_fn.call(null,G__30061,G__30062,G__30063,G__30064,G__30065,G__30066,G__30067,G__30068,G__30069,G__30070,G__30071,G__30072,G__30073,G__30074,G__30075,G__30076,G__30077,G__30078,G__30079));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30080 = a;
var G__30081 = b;
var G__30082 = c;
var G__30083 = d;
var G__30084 = e;
var G__30085 = f;
var G__30086 = g;
var G__30087 = h;
var G__30088 = i;
var G__30089 = j;
var G__30090 = k;
var G__30091 = l;
var G__30092 = m;
var G__30093 = n;
var G__30094 = o;
var G__30095 = p;
var G__30096 = q;
var G__30097 = r;
var G__30098 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__30080,G__30081,G__30082,G__30083,G__30084,G__30085,G__30086,G__30087,G__30088,G__30089,G__30090,G__30091,G__30092,G__30093,G__30094,G__30095,G__30096,G__30097,G__30098) : target_fn.call(null,G__30080,G__30081,G__30082,G__30083,G__30084,G__30085,G__30086,G__30087,G__30088,G__30089,G__30090,G__30091,G__30092,G__30093,G__30094,G__30095,G__30096,G__30097,G__30098));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__30099 = a;
var G__30100 = b;
var G__30101 = c;
var G__30102 = d;
var G__30103 = e;
var G__30104 = f;
var G__30105 = g;
var G__30106 = h;
var G__30107 = i;
var G__30108 = j;
var G__30109 = k;
var G__30110 = l;
var G__30111 = m;
var G__30112 = n;
var G__30113 = o;
var G__30114 = p;
var G__30115 = q;
var G__30116 = r;
var G__30117 = s;
var G__30118 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__30099,G__30100,G__30101,G__30102,G__30103,G__30104,G__30105,G__30106,G__30107,G__30108,G__30109,G__30110,G__30111,G__30112,G__30113,G__30114,G__30115,G__30116,G__30117,G__30118) : self__.dispatch_fn.call(null,G__30099,G__30100,G__30101,G__30102,G__30103,G__30104,G__30105,G__30106,G__30107,G__30108,G__30109,G__30110,G__30111,G__30112,G__30113,G__30114,G__30115,G__30116,G__30117,G__30118));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__30119 = a;
var G__30120 = b;
var G__30121 = c;
var G__30122 = d;
var G__30123 = e;
var G__30124 = f;
var G__30125 = g;
var G__30126 = h;
var G__30127 = i;
var G__30128 = j;
var G__30129 = k;
var G__30130 = l;
var G__30131 = m;
var G__30132 = n;
var G__30133 = o;
var G__30134 = p;
var G__30135 = q;
var G__30136 = r;
var G__30137 = s;
var G__30138 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__30119,G__30120,G__30121,G__30122,G__30123,G__30124,G__30125,G__30126,G__30127,G__30128,G__30129,G__30130,G__30131,G__30132,G__30133,G__30134,G__30135,G__30136,G__30137,G__30138) : target_fn.call(null,G__30119,G__30120,G__30121,G__30122,G__30123,G__30124,G__30125,G__30126,G__30127,G__30128,G__30129,G__30130,G__30131,G__30132,G__30133,G__30134,G__30135,G__30136,G__30137,G__30138));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__30140 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__30140);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__18205__auto__,writer__18206__auto__,opt__18207__auto__){
return cljs.core._write(writer__18206__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__30145 = msg;
return Error(G__30145);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__30150 = x;
var G__30151 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__30150,G__30151) : pred.call(null,G__30150,G__30151));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__30152 = y;
var G__30153 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__30152,G__30153) : pred.call(null,G__30152,G__30153));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map